More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes| | 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes|
More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes| | One of the benefits of consistent interfaces, therefore, is that they are easier to learn and use. Users have to learn only a single mode of operation that is applicable to all objects. This principle works well for simple interfaces with limited operations, like a mini CD player with a small number of operations mapped onto separate buttons|
More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes|last: | Here, all the user has to do is learn what each button represents and select accordingly|
More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes| | However, it can be more problematic to apply the concept of consistency to more complex interfaces, especially when many different operations need to be designed for. For example, consider how to design an interface for an application that offers hundreds of operations (e.g. a word-processing application). There is simply not enough space for a thousand buttons, each of which maps onto an individual operation. Even if there were, it would be extremely difficult and timeconsuming for the user to search through them all to find the desired operation|
More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes| | A much more effective design solution is to create categories of commands that can be mapped into subsets of operations. For the word-processing application, the hundreds of operations available are categorized into subsets of different menus. All commands that are concerned with file operations (e.g., save, open, close) are placed together in the same file menu. Likewise, all commands concerned with formatting text are placed in a format menu. Selecting an operation then becomes a matter of homing in on the right category (menu) of options and scanning it for the desired one, rather than scrolling through one long list. However, the consistency rule of having a visible one-to-one mapping between command and operation is broken. Operations are not immediately visible at the interface, but are instead hidden under different categories of menus. Furthermore, some menu items are immediately visible, when a top-level menu is first pulled down, while others remain hidden until the visible items are scrolled over. Thus, users need to learn what items are visible in each menu category and which are hidden in submenus|
More on usability: design and usabil , 24 Chapter 1 What is interaction design? Consistency This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule. An example of this is where certain graphical objects (e.g., email messages presented in a table) can be highlighted only by using the right mouse button, while all other operations are highlighted using the left button. A problem with this kind of inconsistency is that it is quite arbitrary, making it difficult for users to remember and making the users more prone to mistakes| | The way the items are divided between the categories of menu items can also appear inconsistent to users. Various operations appear in menus where they do not belong. For example, the sorting operation (very useful for listing references or names in alphabetical order) in Microsoft Word 2001 is in the Table menu (the Mac Version). In the previous Word 98 version, it was in both the Tools and Table menus. I always thought of it as a Tool operation (like Word Count), and became very frustrated to discover that as a default for Word 2001 it is only in the Table menu. This makes it inconsistent for me in two ways: (i) with the previous version and (ii) in the category it has been placed. Of course, I can customize the new ver- |
More on usability: design and usabil ,  | 1.6 More on usability: design and usability principles 25 sion so that the menus are structured in the way I think they should be, but this all takes considerable time (especially when I use different machines at work, home, and when travelling)|
More on usability: design and usabil ,  | Another problem with consistency is determining what aspect of an interface to make consistent with what else. There are often many choices, some of which can be inconsistent with other aspects of the interface or ways of carrying out actions|
More on usability: design and usabil ,  | Consider the design problem of developing a mechanism to let users lock their files on a shared server. Should the designer try to design it to be consistent with the way people lock things in the outside world (called external consistency) or with the way they lock objects in the existing system (called internal consistency)? However, there are many different ways of locking objects in the physical world (e.g., placing in a safe, using a padlock, using a key, using a child safety lock), just as there are different ways of locking electronically (e.g., using PIN numbers, passwords, permissions, moving the physical switches on floppy disks). The problem facing designers is knowing which one to be consistent with|
More on usability: design and usabil ,  | Ahbrdance is a term used to refer to an attribute of an object that allows people to know how to use it. For example, a mouse button invites pushing (in so doing activating clicking) by the way it is physically constrained in its plastic shell. At a very simple level, to afford means "to give a clue" (Norman, 1988). When the affordances of a physical object are perceptually obvious it is easy to know how to interact with it. For example, a door handle affords pulling, a cup handle affords grasping, and a mouse button affords pushing. Norman introduced this concept in the late '80s in his discussion of the design of everyday objects. Since then, it has been much popularized, being used to describe how interface objects should be designed so that they make obvious what can be done to them. For example, graphical elements like buttons, icons, links, and scroll bars are talked about with respect to how to make it appear obvious how they should be used: icons should be designed to afford clicking, scroll bars to afford moving up and down, buttons to afford pushing|
More on usability: design and usabil ,  | Unfortunately, the term affordance has become rather a catch-all phrase, losing much of its potency as a design principle. Norman (1999), who was largely responsible for originally promoting the concept in his book The Design of Everyday Things (1988), now despairs at the way it has come to be used in common parlance: "Zput an affordance there, " a participant would say, "I wonder if the object affords clicking. . . " affordances this, affordances that. And no data, just opinion. Yikes! What had I unleashed upon the world? Norman's (1999) reaction to a recent CHI-Web discussion|
More on usability: design and usabil ,  | He has since tried to clarify his argument about the utility of the concept by saying there are two kinds of affordance: perceived and real. Physical objects are said to have real affordances, like grasping, that are perceptually obvious and do not have to be learned. In contrast, user interfaces that are screen-based are virtual and do not have these kinds of real affordances. Using this distinction, he argues that it does not make sense to try to design for real affordances at the interface--except when designing physical devices, like control consoles, where affordances like pulling and pressing are helpful in guiding the user to know what to do. Alternatively, screen-based |
More on usability: design and usabil , 26 Chapter 1 What is interaction design? interfaces are better conceptualized as perceived affordances, which are essentially learned conventions. In conclusion, Norman argues that other design concepts--conventions, feedback and cultural and logical constraints-are far more useful for helping designers develop graphical user interfaces| | 26 Chapter 1 What is interaction design? interfaces are better conceptualized as perceived affordances, which are essentially learned conventions. In conclusion, Norman argues that other design concepts--conventions, feedback and cultural and logical constraints-are far more useful for helping designers develop graphical user interfaces|
Heuristics and usability principle ,  | 1.6.1 Heuristics and usability principles When design principles are used in practice they are commonly referred to as heuristics. This term emphasizes that something has to be done with them when they are applied to a given problem. In particular, they need to be interpreted in the design context, drawing on past experience of, for example, how to design feedback and what it means for something to be consistent|
Heuristics and usability principle ,  | Another form of guidance is usability principles. An example is "speak the user's language." These are quite similar to design principles, except that they tend to be more prescriptive. In addition, whereas design principles tend to be used mainly for informing a design, usability principles are used mostly as the basis for evaluating prototypes and existing systems. In particular, they provide the framework for heuristic evaluation (see Chapter 13). They, too, are called heuristics when used as part of |
More on usability: design and usabil ,  | 1.6 More on usability: design and usability principles 27 an evaluation. Below are the ten main usability principles, developed by Nielsen (2001) and his colleagues. Note how some of them overlap with the design principles|
More on usability: design and usabil , 1. Visibility of system status-always keep users informed about what is going on, through providing appropriate feedback within reasonable time 2. Match between system and the real world-speak the users' language, using words, phrases and concepts familiar to the user, rather than systemoriented terms 3. User control and freedom-provide ways of allowing users to easily escape from places they unexpectedly find themselves, by using clearly marked 'emergency exits' 4. Consistency and standards-avoid making users wonder whether different words, situations, or actions mean the same thing 5. Help users recognize, diagnose, and recover from errors-use plain language to describe the nature of the problem and suggest a way of solving it 6. error prevention-where possible prevent errors occurring in the first place 7. Recognition rather than recall-make objects, actions, and options visible 8. Flexibility and efficiency of use-provide accelerators that are invisible to novice users, but allow more experienced users to carry out tasks more quickly 9. Aesthetic and minimalist design-avoid using information that is irrelevant or rarely needed 10. Help and documentation-provide information that can be easily searched and provides help in a set of concrete steps that can easily be followed One of the main design principles which Nielsen has proselytized, especially for website design, is simplicity. He proposes that designers go through all of their design elements and remove them one by one. If a design works just as well without an element, then remove it. Do you think this is a good design principle? If you have your own website, try doing this and seeing what happens. At what point does the interaction break down? Comment Simplicity is certainly an important design principle. Many designers try to cram too much into a screenful of space, making it unwieldy for people to find what they are interested in. Removing design elements to see what can be discarded without affecting the overall function of the website can be a salutary lesson. Unnecessary icons, buttons, boxes, lines, graphics, shading, and text can be stripped, leaving a cleaner, crisper, and easier-to-navigate website. However, a certain amount of graphics, shading, coloring, and formatting can make a site aesthetically pleasing and enjoyable to use. Plain vanilla sites with just lists of text and a few hyperlinks may not be as appealing and may put certain visitors off returning. The key is getting the right balance between aesthetic appeal and the right amount and kind of information per page| | 1. Visibility of system status-always keep users informed about what is going on, through providing appropriate feedback within reasonable time 2. Match between system and the real world-speak the users' language, using words, phrases and concepts familiar to the user, rather than systemoriented terms 3. User control and freedom-provide ways of allowing users to easily escape from places they unexpectedly find themselves, by using clearly marked 'emergency exits' 4. Consistency and standards-avoid making users wonder whether different words, situations, or actions mean the same thing 5. Help users recognize, diagnose, and recover from errors-use plain language to describe the nature of the problem and suggest a way of solving it 6. error prevention-where possible prevent errors occurring in the first place 7. Recognition rather than recall-make objects, actions, and options visible 8. Flexibility and efficiency of use-provide accelerators that are invisible to novice users, but allow more experienced users to carry out tasks more quickly 9. Aesthetic and minimalist design-avoid using information that is irrelevant or rarely needed 10. Help and documentation-provide information that can be easily searched and provides help in a set of concrete steps that can easily be followed One of the main design principles which Nielsen has proselytized, especially for website design, is simplicity. He proposes that designers go through all of their design elements and remove them one by one. If a design works just as well without an element, then remove it. Do you think this is a good design principle? If you have your own website, try doing this and seeing what happens. At what point does the interaction break down? Comment Simplicity is certainly an important design principle. Many designers try to cram too much into a screenful of space, making it unwieldy for people to find what they are interested in. Removing design elements to see what can be discarded without affecting the overall function of the website can be a salutary lesson. Unnecessary icons, buttons, boxes, lines, graphics, shading, and text can be stripped, leaving a cleaner, crisper, and easier-to-navigate website. However, a certain amount of graphics, shading, coloring, and formatting can make a site aesthetically pleasing and enjoyable to use. Plain vanilla sites with just lists of text and a few hyperlinks may not be as appealing and may put certain visitors off returning. The key is getting the right balance between aesthetic appeal and the right amount and kind of information per page|
More on usability: design and usabil , 1. Visibility of system status-always keep users informed about what is going on, through providing appropriate feedback within reasonable time 2. Match between system and the real world-speak the users' language, using words, phrases and concepts familiar to the user, rather than systemoriented terms 3. User control and freedom-provide ways of allowing users to easily escape from places they unexpectedly find themselves, by using clearly marked 'emergency exits' 4. Consistency and standards-avoid making users wonder whether different words, situations, or actions mean the same thing 5. Help users recognize, diagnose, and recover from errors-use plain language to describe the nature of the problem and suggest a way of solving it 6. error prevention-where possible prevent errors occurring in the first place 7. Recognition rather than recall-make objects, actions, and options visible 8. Flexibility and efficiency of use-provide accelerators that are invisible to novice users, but allow more experienced users to carry out tasks more quickly 9. Aesthetic and minimalist design-avoid using information that is irrelevant or rarely needed 10. Help and documentation-provide information that can be easily searched and provides help in a set of concrete steps that can easily be followed One of the main design principles which Nielsen has proselytized, especially for website design, is simplicity. He proposes that designers go through all of their design elements and remove them one by one. If a design works just as well without an element, then remove it. Do you think this is a good design principle? If you have your own website, try doing this and seeing what happens. At what point does the interaction break down? Comment Simplicity is certainly an important design principle. Many designers try to cram too much into a screenful of space, making it unwieldy for people to find what they are interested in. Removing design elements to see what can be discarded without affecting the overall function of the website can be a salutary lesson. Unnecessary icons, buttons, boxes, lines, graphics, shading, and text can be stripped, leaving a cleaner, crisper, and easier-to-navigate website. However, a certain amount of graphics, shading, coloring, and formatting can make a site aesthetically pleasing and enjoyable to use. Plain vanilla sites with just lists of text and a few hyperlinks may not be as appealing and may put certain visitors off returning. The key is getting the right balance between aesthetic appeal and the right amount and kind of information per page| | Design and usability principles have also been operationalized into even more specific prescriptions called rules. These are guidelines that should be followed. An example is "always place the quit or exit button at the bottom of the first menu list in an application." |
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | Specifically, the objective is to enable you to define usability and user experience goals and to use design and usability principles for evaluating the usability of an interactive product|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | Find a handheld device (e.g. remote control, handheld computer, or cell phone) and examine how it has been designed, paying particular attention to how the user is meant to interact with it|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | (a) From your first impressions, write down what first comes to mind as to what is good and bad about the way the device works. Then list (i) its functionality and (ii) the range of tasks a typical user would want to do using it. Is the functionality greater, equal, or less than what the user wants to do? (b) Based on your reading of this chapter and any other material you have come across, compile your own set of usability and user experience goals that you think will be |
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | I Summary 29 most useful in evaluating the device. Decide which are the most important ones and explain why|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | (c) Translate the core usability and user experience goals you have selected into two or three questions. Then use them to assess how well your device fares (e.g., Usability goals. What specific mechanisms have been used to ensure safety? How easy is it to learn? User experience goals: Is it fun to use? Does the user get frustrated easily? If so, why?)|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter|last: | (d) Repeat (b) and (c) for design concepts and usability principles (again choose a relevant set)|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter|last: | (e) Finally, discuss possible improvements to the interface based on your usability evaluation|
More on usability: design and usabil , 28 Chapter 1 What is interaction design? Assignment This assignment is intended for you to put into practice what you have read about in this chapter| | Summary In this chapter we have looked at what interaction design is and how it has evolved. We examined briefly its makeup and the various processes involved. We pointed out how the notion of usability is fundamental to interaction design. This was explained in some detail, describing what it is and how it is operationalized to assess the appropriateness, effectiveness, and quality of interactive products. A number of high-level design principles were also introduced that provide different forms of guidance for interaction design. |
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Interaction design is multidisciplinary, involving many inputs from wide-reaching disciplines and fields|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Interaction design is now big business: many companies want it but don't know how to do it. I Optimizing the interaction between users and interactive products requires taking into account a number of interdependent factors, including context of use, type of task, and kind of user|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives|last: | Interactive products need to be designed to match usability goals like ease of use and learning|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | User experience goals are concerned with creating systems that enhance the user experience in terms of making it enjoyable, fun, helpful, motivating, and pleasurable|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Design and usability principles, like feedback and simplicity, are useful heuristics for analyzing and evaluating aspects of an interactive product|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Further reading Here we recommend a few seminal readings. A more comprehensive list of useful books, articles, websites, videos, and other material can be found at our website|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | WINOGRAD, T. (1997) From computing machinery to interaction design. In P. Denning and R. Metcalfe (eds.) Beyond Calculation: the Next Fifty Years of Computing. New York: Springer-Verlag, 14S162. Terry Winograd provides an overview of how interaction design has emerged as a new area, explaining how it does not fit into any existing design or computing fields. He describes the new demands and challenges facing the profession|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | NORMAN, D. (1988) The Design of Everyday Things. New York: Doubleday, (especially Chapter 1). Norman's writing is highly accessible and enjoyable to read. He writes extensively about the design and usability of everyday objects like doors, faucets, and fridges. These examples provide much food for thought in relation to designing interfaces. The Voyager CD-ROM (sadly, now no longer published) of his collected works ~rovides additional videos and animations NORMAN, D. (1999) ACM Interactions Magazine, MayIJune, 38-42. Affordances, conventions and design. This is a short and thought-provoking critique of design principles|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | GRUDIN, J.(1990) The computer reaches out: the historical continuity of interface design. In CHZ'90 Proc. 261-268|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives|last: | GRUDIN, J. (1989) The case against user interface consistency|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives|last: | Communications of the ACM, 32(10), 1164-1173|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Jonathan Grudin is a prolific writer and many of his earlier works provide thought-provoking and well documented accounts of topical issues in HCI. The first paper talks about how interface design has expanded to wver many more aspects in its relatively short history. The second paper, considered a classic of its time, discusses why the concept of consistency-which had been universally accepted as good interface design up until then-was in fact highly problematic|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Interactions, JanuarylFebruary 2000, ACM. This special issue provides a collection of visions, critiques, and sound bites on the achievements and future of HCI from a number of researchers, designers, and practitioners|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | that illustrate in an entertaining way many of the problems, IDEO provides a well illustrated online archive of a range of design ideas and issues raised in the text. interactive products it has designed. (see www.ideo.com) |
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Interview 31 portance of interaction design in ensuring their products are successful but don't know how to do this. Often they get in touch with Swim with partially developed products and ask for help with their interaction design|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Swim has consulted for a range of clienk, including Apple Computer, Nike, IBM, DoubleClick, Webex, and RioPort|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | YR: What is your approach to interaction design? GS: I've devised my own definition: interaction design is the design of products that reveal themselves over time. Users don't necessarily see all the functionality in interactive products when they first look at them. For example, the first screen you see on a cell phone doesn't show you everything you can do with it. As you use it, additional functionality is revealed to you. Same thing with a web-based application or a Window's application-as you use them you find yourself in different states and suddenly you can do different things. This idea of revealing over time is possible because there is a microprocessor behind the product and usually there is also a dynamic display. I believe this definition characterizes the kind of products we work on-which is a very wide range, not just web products|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | YR: How would you say interaction design has changed in the years since you started Swim? GS: I don't think what we do has changed fundamentally, but the time frame for product development is much shorter. And seemingly more people think they want interaction design assistance. That has definitely changed. There are more people who don't necessarily know what interaction design is, but they are calling us and saying "we need it." All of a sudden there is a great deal of focus and money on all of these products that are virtual and computationally based, which require a different type of design thinking|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | YR: So what were the kinds of projects you were working on when you first started Swim? GS: They were less web-centric. There was more software application design and a few hardwarelsoftware type things. For the last year and a half the focus shifted to almost exclusively web-based applications|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | However, these are quite similar to software applications-they just have different implementation constraints|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | Right at the moment, the hardwarelsoftware products are starting to pick up again-it does seem that information appliances are going to take off. The nature of the problems we solve hasn't changed much; it's the platform and associated constraints that change|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | YR: What would you say are the biggest challenges facing yourself and other consultants doing interaction design these days? GS: One of the biggest challenges is remembering that half of what we do is the design work and the other half is the communication of that design work|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | The clients almost never bridge the gap for us: we need to bridge it. We always have to figure out how to deliver the work so it is going to have impact. We are the ones who need to ensure that the client is going to understand it and know what to do with it|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives|last: | That part of the work is oftentimes the most difficult|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | It means we've got to figure out what is going on internally with the client and decide how what we deliver will be effective. In some cases you just start seeing there is no place to engage with the client|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | And I think that is a very difficult problem. Most people right now don't have a product development process. They are just going for it. And we have to figure out how to fit into what is best described as a moving train|
More on usability: design and usabil , 30 Chapter 1 What is interaction design? Key points Interaction design is concerned with designing interactive products to support people in their everyday and working lives| | YR: And what do you use when you try to communicate with them? Is it a combination of talking, meetings, and reports? GS: We do a number of different things. Usually we will give them a written document, like a report or a critique of their product. Sometimes we will give them interactive prototypes in Director or HTML, things that simulate what the product experience would feel like. In the written materials, I |
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | often name the things that we all need to be talking YR. So this communication process is just as imporabout|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Then at least we all have a common termi- tant as the ideas? nology to discuss things. It is a measure of our suc- GS: 1 think it is, a lot of times|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | cess if they start using the words that we gave them, because we truly have influenced their thinking. A y~, so, how do you start with a client? lot of times we'll give them a diagram of what their system is like, because nobody has ever visualized GS: For clients who already have something built, I find that usually the best way for us to get started, is it. We serve as the visualizers, taking a random asto begin with the client doing a comprehensive demo sortment of vaguely defined concepts and giving of their product for us. We will usually spend a whole some shape to them. We'll make an artifact, which allows them to say "Yes, it is like that" or "No, it's day collecting information. Besides the demo, they not like that, it's like this. . . ." Without something tell us about their target market, competitors, and a whole range of things. It then takes a longer period of to point to they couldn't even say to each other time for us to use the product and observe other peo- "No, that is not what 1 mean" because they didn't ple using it to get a much broader picture. Because know if they were talking about the same thing. the client's own vision of their product is so narrow, Many times we'll use schematic diagrams to repre- we really have to step back from what they initially sent system behavior. Once they have these dia- .-- grams then they can say "Oh no, we need all this tell Ub|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | other stuff in there, we forgot to tell you." It seems that nobody is writing complete lists of functional- YR: So do you write notes, and then try and put it toity, requirements specifications, or complete docu- gether afterwards, Orwhat? mentation anymore. This means the product ideas GS: We use all kinds of things. We use notes and stay in somebody's head until we make them tangi- video, and we sit around with tracing paper and ble through visualization. marker pens. When reviewing the materials, 1 often |
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Interview 33 try and bring them together in some sort of thematic way. It's often mind-boggling to bring a software product that's been thrown together into any kind of coherent framework. It's easy to write a shopping list of observations, but we want to assemble a larger structure and framework and that takes several weeks to construct. We need time to reflect and stew on what was done and what maybe should have been done. We need to highlight the issues and put them into some kind of larger order. If you always operate at a low level of detail, like worrying and critiquing the size of a button, you end up solving only local issues|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | You never really get to the big interaction design problems of the product, the ones that should be solved first|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | YR: If you're given a prototype or product to evaluate and you discover that it is redly bad, what do you do? GS: Well, I never have the guts to go in and say something is fundamentally flawed. And that's maybe not the best strategy anyway, because it's your word against theirs. Instead, I think it is always about making the case for why something is wrong or flawed|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Sometimes I think we are like lawyers. We have to assemble the case for what's wrong with the product|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | We have to make a convincing argument. A lot of times I think the kind of argumentation we do is very much like what lawyers do|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | YR: Finally, how do you see interaction design moving in the next five years? More of the same kind of problems with new emerging technologies? Or do you think there are going to be more challenges, especially with the hardwarelsoftware integration? GS: I think there will be different constraints as new technologies arise. No matter what we are designing, we have to understand the constraints of the implementation|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background|last: | And yes, different things will happen when we get more into designing hardwarelsoftware products|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | There are different kinds of cost constraints and different kinds of interactions you can do when there is special purpose hardware involved. Whereas designing the interaction for applications requires visual design expertise, designing information appliances or other hardware products requires experience with product design. Definitely, there will be some new challenges|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Hopefully, in the next few years, people will stop looking for interaction design rules. There's been a bit of a push towards making interaction design a science lately. Maybe this has happened because so many people are trying to do it and they don't know where to start because they don't have much experience. I'm hoping people will start understanding that interaction design is a design discipline-that there are some guidelines and ways to do good practice-and creativity combined with analytical thinking are necessary to arrive at good products. And then, even more so than now, it is going to get interesting and be a really exciting time. |
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Chapter 2 Understanding and conceptualizing interaction 2.1 Introduction 2.2 Understanding the problem space 2.3 Conceptual models 2.3.1 Conceptual models based on activities 2.3.2 Conceptual models based on objects 2.3.3 A case of mix and match? 2.4 Interface metaphors 2.5 Interaction paradigms 2.6 From conceptual models to physical design Introduction Imagine you have been asked to design an application to let people organize, store, and retrieve their email in a fast, efficient and enjoyable way. What would you do? How would you start? Would you begin by sketching out how the interface might look, work out how the system architecture will be structured, or even just start coding? Alternatively, would you start by asking users about their current experiences of saving email, look at existing email tools and, based on this, begin thinking about why, what, and how you were going to design the application? Interaction designers would begin by doing the latter. It is important to realize that having a clear understanding of what, why, and how you are going to design something, before writing any code, can save enormous amounts of time and effort later on in the design process. Ill-thought-out ideas, incompatible and unusable designs can be ironed out while it is relatively easy and painless to do|
More on usability: design and usabil , 32 Chapter 1 What is interaction design? Figure 1 Steelcase Worklife New York retail showroom. One of the projects Gitta Salomon was involved in was to develop an interactive sales showroom for the company called Steelcase, based in New York. The sales environment was developed to provide various sales tools, including an interactive device allowing salespeople to access case-study videos that can be projected onto the large screens in the background| | Once ideas are committed to code (which typically takes considerable effort, time, and money), they become much harder to throw away-and much more painful. Such preliminary thinking through of ideas about user needs1 and what 'User needs here are the range of possible requirements, including user wants and experiences. |
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction| | 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | The main aims of this chapter are to: Explain what is meant by the problem space|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | Explain how to conceptualize interaction|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | Describe what a conceptual model is and explain the different kinds|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | Discuss the pros and cons of using interface metaphors as conceptual models|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | Debate the pros and cons of using realism versus abstraction at the interface|
More on usability: design and usabil , 36 Chapter 2 Understanding and conceptualizing interaction kinds of designs might be appropriate is, however, a skill that needs to be learned. It is not something that can be done overnight through following a checklist, but requires practice in learning to identify, understand, and examine the issues-just like learning to write an essay or to program. In this chapter we describe what is involved. In particular, we focus on what it takes to understand and conceptualize interaction|last: | Outline the relationship between conceptual design and physical design|
Understanding the problem space In t ,  | 2.2 Understanding the problem space In the process of creating an interactive product, it can be temping to begin at the "nuts and bolts" level of the design. By this, we mean working out how to design the physical interface and what interaction styles to use (e.g., whether to use menus, forms, speech, icons, or commands). A problem with trying to solve a design problem beginning at this level is that critical usability goals and user needs may be overlooked. For example, consider the problem of providing drivers with better navigation and traffic information. How might you achieve this? One could tackle the problem by thinking straight away about a good technology or kind of interface to use. For example, one might think that augmented reality, where images are superimposed on objects in the real world (see Figure 2.1 on Color Plate 2), would be appropriate, since it can be useful for integrating additional information with an ongoing activity (e.g., overlaying X-rays on a patient during an operation). In the context of driving, it could be effective for displaying information to drivers who need to find out where they are going and what to do at certain points during their journey. In particular, images of places and directions to follow could be projected inside the car, on the dashboard or rear-view mirror. However, there is a major problem with this proposal: it is likely to be very unsafe. It could easily distract drivers, luring them to switch their attention from the road to where the images were being projected|
Understanding the problem space In t ,  | A problem in starting to solve a design problem at the physical level, therefore, is that usability goals can be easily overlooked. While it is certainly necessary at some point to decide on the design of physical aspects, it is better to make these kinds of design decisions after understanding the nature of the problem space. By this, we mean conceptualizing what you want to create and articulating why you want to do so. This requires thinking through how your design will support people in their everyday or work activities. In particular, you need to ask yourself whether the interactive product you have in mind will achieve what you hope it will. If so, |
Understanding the problem space 37 h ,  | 2.2 Understanding the problem space 37 how? In the above example, this involves finding out what is problematic with existing forms of navigating while driving (e.g., trying to read maps while moving the steering wheel) and how to ensure that drivers can continue to drive safely without being distracted|
Understanding the problem space 37 h ,  | Clarifying your usability and user experience goals is a central part of working out the problem space. This involves making explicit your implicit assumptions and claims. Assumptions that are found to be vague can highlight design ideas that need to be better formulated. The process of going through them can also help to determine relevant user needs for a given activity. In many situations, this involves identifying human activities and interactivities that are problematic and working out how they might be improved through being supported with a different form of interaction. In other situations it can be more speculative, requiring thinking through why a novel and innovative use of a new technology will be potentially useful|
Understanding the problem space 37 h ,  | Below is another scenario in which the problem space focuses on solving an identified problem with an existing product. Initial assumptions are presented first, followed by a further explanation of what lies behind these (assumptions are highlighted in italics): A large software company has decided to develop an upgrade of its web browser|
Understanding the problem space 37 h ,  | They assume that there is a need for a new one, which has better and more powerful functionality. They begin by carrying out an extensive study of people's actual use of web browsers, talking to lots of different kinds of users and observing them using their browsers. One of their main findings is that many people do not use the bookmarking feature effectively. A common finding is that it is too restrictive and underused. In fathoming why this is the case, it was considered that the process of placing web addresses into hierarchical folders was an inadequate way of supporting the user activity of needing to mark hundreds and sometimes thousands of websites such that any one of them could be easily returned to or forwarded onto other people. An implication of the study was that a new way of saving and retrieving web addresses was needed|
Understanding the problem space 37 h ,  | In working out why users find the existing feature of bookmarking cumbersome to use, a further assumption was explicated: The existing way of organizing saved (favorite) web addresses into folders is inefjicient because it takes too long and is prone to errors|
Understanding the problem space 37 h ,  | A number of underlying reasons why this was assumed to be the case were further identified, including: It is easy to lose web addresses by placing them accidentally into the wrong folders|
Understanding the problem space 37 h , last: | It is not easy to move web addresses between folders|
Understanding the problem space 37 h ,  | It is not obvious how .to move a number of addresses from the saved favorite list into another folder simultaneously|
Understanding the problem space 37 h , last: | It is not obvious how to reorder web addresses once placed in folders. |
Understanding the problem space 37 h , 38 Chapter 2 Understanding and conceptualizing interaction Based on this analysis, a set of assumptions about the user needs for supporting this activity more effectively were then made. These included: If the bookmarking function was improved users would find it more useful and use it more to organize their web addresses| | 38 Chapter 2 Understanding and conceptualizing interaction Based on this analysis, a set of assumptions about the user needs for supporting this activity more effectively were then made. These included: If the bookmarking function was improved users would find it more useful and use it more to organize their web addresses|
Understanding the problem space 37 h , 38 Chapter 2 Understanding and conceptualizing interaction Based on this analysis, a set of assumptions about the user needs for supporting this activity more effectively were then made. These included: If the bookmarking function was improved users would find it more useful and use it more to organize their web addresses| | Users need a flexible way of organizing web addresses they want to keep for further reference or for sending on to other people|
Understanding the problem space 37 h , 38 Chapter 2 Understanding and conceptualizing interaction Based on this analysis, a set of assumptions about the user needs for supporting this activity more effectively were then made. These included: If the bookmarking function was improved users would find it more useful and use it more to organize their web addresses| | A framework for explicating assumptions Reasoning through your assumptions about why something might be a good idea enables you to see the strengths and weaknesses of your proposed design. In so doing, it enables you to be in a better position to commence the design process. We have shown you how to begin this, through operationalizing relevant usability goals. In addition, the following questions provide a useful framework with which to begin thinking through the problem space: Are there problems with an existing product? If so, what are they? Why do you think there are problems? Why do you think your proposed ideas might be useful? How do you envision people integrating your proposed design with how they currently do things in their everyday or working lives? How will your proposed design support people in their activities? In what way does it address an identified problem or extend current ways of doing things? Will it really help? At the turn of the millennium, WAP-enabled (wireless application protocol) phones came into being, that enabled people to connect to the Internet using them. To begin with, the web-enabled services provided were very primitive, being text-based with limited graphics capabilities. Access was very restricted, with the downloaded information being displayed on a very small LCD screen (see Figure 2.2). Despite this major usability drawback, every telecommunication company saw this technological breakthrough as an opportunity to create innovative applications. A host of new services were explored, including text messaging, online booking of tickets, betting, shopping, viewing movies, stocks and shares, sports events and banking|
Understanding the problem space 37 h , 38 Chapter 2 Understanding and conceptualizing interaction Based on this analysis, a set of assumptions about the user needs for supporting this activity more effectively were then made. These included: If the bookmarking function was improved users would find it more useful and use it more to organize their web addresses| | What assumptions were made about the proposed services? How reasonable are these assumptions? Figure 2.2 An early cell phone display. Text is restricted to three or four lines at a time and scrolls line by line, making reading very cumbersome. Imagine trying to read a page from this book in this way! The newer 3G (third generation) phones have bigger displays, more akin to those provided with handheld computers. |
Conceptual models 39 Comment The pro ,  | 2.3 Conceptual models 39 Comment The problem space for this scenario was very open-ended. There was no identifiable problem that needed to be improved or fixed. Alternatively, the new WAP technology provided opportunities to create new facilities and experiences for people. One of the main assumptions is that people want to be kept informed of up-to-the-minute news (e.g. sports, stocks and share prices) wherever they are. Other assumptions included: That people want to be able to decide what to do in an evening while on their way home from work (e.g., checking TV listings, movies, making restaurant reservations)|
Conceptual models 39 Comment The pro ,  | That people want to be able to interact with information on the move (e.g., reading email on the train)|
Conceptual models 39 Comment The pro ,  | That users are prepared to put up with a very small display and will be happy browsing and interacting with information using a restricted set of commands via a small number of tiny buttons|
Conceptual models 39 Comment The pro ,  | That people will be happy doing things on a mobile phone that they normally do using their PCs (e.g., reading email, surfing the web, playing video games, doing their shopping)|
Conceptual models 39 Comment The pro ,  | It is reasonable to assume that people want flexibility. They like to be able to find out about news and events wherever they are (just look at the number of people who take a radio with them to a soccer match to find out the scores of other matches being played at the same time). People also like to use their time productively when traveling, as in making phone calls. Thus it is reasonable to assume they would like to read and send email on the move. The most troublesome assumption is whether people are prepared to interact with the range of services proposed using such a restricted mode of interactivity. In particular, it is questionable whether most people are prepared to give up what they have been used to (e.g|
Conceptual models 39 Comment The pro ,  | large screen estate, ability to type messages using a normal-sized keyboard) for the flexibility of having access to very restricted Internet-based information via a cell phone they can keep in their pocket|
Conceptual models 39 Comment The pro ,  | One of the benefits of working through your assumptions for a problem space before building anything is that it can highlight problematic concerns. In so doing, it can identify ideas that need to be reworked, before it becomes too late in the design process to make changes. Having a good understanding of the problem space can also help greatly in formulating what it is you want to design. Another key aspect of conceptualizing the problem space is to think about the overall structure of what will be built and how this will be conveyed to the users. In particular, this involves developing a conceptual model|
Conceptual models "The most importan ,  | 2.3 Conceptual models "The most important thing to design is the user's conceptual model. Everything else should be subordinated to making that model clear, obvious, and substantial. That is almost exactly the opposite of how most software is designed." (David Liddle, 1996, p. 17) |
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | To develop a conceptual model involves envisioning the proposed product, based on the users' needs and other requirements identified. To ensure that it is designed to be understandable in the manner intended requires doing iterative testing of the product as it is developed. A key aspect of this design process is initially to decide what the users will be doing when carrying out their tasks. For example, will they be primarily searching for information, creating documents, communicating with other users, recording events, or some other activity? At this stage, the interaction mode that would best support this needs to be considered. For example, would allowing the users to browse be appropriate, or would allowing them to ask questions directly to the system in their native language be more effective? Decisions about which kind of interaction style to use (e.g., whether to use a menu-based system, speech input, commands) should be made in relation to the interaction mode|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | Thus, decisions about which mode of interaction to support differ from those made about which style of interaction to have; the former being at a higher level of abstraction. The former are also concerned with determining the nature of the users' activities to support, while the latter are concerned with the selection of specific kinds of interface|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | Once a set of possible ways of interacting with an interactive system has been identified, the design of the conceptual model then needs to be thought through in terms of actual concrete solutions. This entails working out the behavior of the interface, the particular interaction styles that will be used, and the "look and feel" of the interface. At this stage of "fleshing out," it is always a good idea to explore a number of possible designs and to assess the merits and problems of each one|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | Another way of designing an appropriate conceptual model is to select an interface metaphor. This can provide a basic structure for the conceptual model that is couched in knowledge users are familiar with. Examples of well-known interface metaphors are the desktop and search engines (which we will cover in Section 2.4)|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | Interaction paradigms can also be used to guide the formation of an appropriate conceptual metaphor. They provide particular ways of thinking about interaction design, such as designing for desktop applications or ubiquitous computing (these will also be covered in Section 2.5)|
Conceptual models "The most importan , 40 Chapter 2 Understanding and conceptualizing interaction By a conceptual model is meant: a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave and look like, that will be understandable by the users in the manner intended| | As with any aspect of interaction design, the process of fleshing out conceptual models should be done iteratively, using a number of methods. These include sketching out ideas, storyboarding, describing possible scenarios, and prototyping aspects of the proposed behavior of the system. All these methods will be covered in Chapter 8, which focuses on doing conceptual design. Here, we describe the different kinds of conceptual models, interface metaphors, and interaction paradigms to give you a good understanding of the various types prior to thinking about how to design them. |
Conceptual models 41 There are a num ,  | 2.3 Conceptual models 41 There are a number of different kinds of conceptual models. These can be broken down into two main categories: those based on activities and those based on objects|
Conceptual models based on activit ,  | 2.3.1 Conceptual models based on activities The most common types of activities that users are likely to be engaged in when interacting with systems are: 1. instructing 2. conversing 3. manipulating and navigating 4. exploring and browsing A first thing to note is that the various kinds of activity are not mutually exclusive, as they can be carried out together. For example, it is possible for someone to give instructions while conversing or navigate an environment while browsing. However, each has different properties and suggests different ways of being developed at the interface. The first one is based on the idea of letting the user issue instructions to the system when performing tasks. This can be done in various interaction styles: typing in commands, selecting options from menus in a windows environment or on a touch screen, speaking aloud commands, pressing buttons, or using a combination of function keys. The second one is based on the user conversing with the system as though talking to someone else. Users speak to the system or type in questions to which the system replies via text or speech output. The third type is based on allowing users to manipulate and navigate their way through an environment of virtual objects. It assumes that the virtual environment shares some of the properties of the physical world, allowing users to use their knowledge of how physical objects behave when interacting with virtual objects. The fourth kind is based on the system providing information that is structured in such a way as to allow users to find out or learn things, without having to formulate specific questions to the system|
Conceptual models based on activit ,  | A company is building a wireless information system to help tourists find their way around an unfamiliar city. What would they need to find out in order to develop a conceptual model? Comment To begin, they would need to ask: what do tourists want? Typically, they want to find out lots of things, such as how to get from A to B, where the post office is and where a good Chinese restaurant is. They then need to consider how best to support the activity of requesting information. Is it preferable to enable the tourists to ask questions of the system as if they were having a conversation with another human being? Or would it be more appropriate to allow them to ask questions as if giving instructions to a machine? Alternatively, would they prefer a system that structures information in the form of lists, maps, and recommendations that they could then explore at their leisure? |
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | A diverse r.?nge of devices has been designed based on this model, including VCRs, hi-fi systems, alarm clocks, and computers. The way in which the user issues instructions can vary from pressing buttons to typing in strings of characters|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment|last: | Many activities are readily supported by giving instructions|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | Operating systems like Unix and DOS have been specifically designed as command-based systems, to which the user issues instructions at the prompt as a command or set of commands. In Windows and other GUI-based systems, control keys or the selection of menu options via a mouse are used. Well-known applications that are command-based include word processing, email, and CAD. Typically, a wide range of functions is provided from which users choose when they want to do something to the object they are working on. For example, a user writing a report using a word processor will want to format the document, count the numbers of words typed, and check the spelling. The user will need to instruct the system to do these operations by issuing apprbpriate commands. Typically, commands are carried out in a sequence, with the system responding appropriately (or not) as instructed|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | One of the main benefits of an instruction-based conceptual model is that it supports quick and efficient interaction. It is particularly suited to repetitive kinds of actions performed on multiple objects. Examples include the repetitive actions of saving, deleting, and organizing email messages or files|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | There are many different kinds of vending machines in the world. Each offers a range of goods, requiring the user initially to part with some money. Figure 2.3 shows photos of two different vending machines, one that provides soft drinks and the other a range of snacks|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | Both support the interaction style of issuing instructions. However, the way they do it is quite different|
Conceptual models based on activit , 42 Chapter 2 Understanding and conceptualizing interaction Comment 1. Instructing This kind of conceptual model describes how users carry out their tasks through instructing the system what to do. Examples include giving instructions to a system to perform operations like tell the time, print a file, and remind the user of an appointment| | What instructions must be issued to obtain a can of soft drink from the first machine and a bar of chocolate from the second? Why has it been necessary to design a more complex mode of interaction for the second vending machine? What problems can arise with this mode of interaction? The first vending machine has been designed on a very simple instruction-based conceptual model. There are a small number of drinks to choose from and each is represented by a large button displaying the label of each drink. The user simply has to press one button and (hopefully) this will have the effect of returning the selected drink. The second machine is more complex, offering a wider range of snacks. The trade-off for providing more choices, however, is that the user can no longer instruct the machine by using a simple one-press action but is required to use a more complex process, involving: (i) reading off the code (e.g., C12) under the item chosen, then (ii) keying this into the number pad adjacent to the displayed items, and (iii) checking the price of the selected option and ensuring that the amount of money inserted is the same or more (depending on whether or not the machine provides change). Problems that can arise from this mode of interaction are the customer |
Conceptual models 43 Figure 2.3 Two  ,  | 2.3 Conceptual models 43 Figure 2.3 Two vending machines, (a) one selling soft drinks, (b) the other selling a range of snacks|
Conceptual models 43 Figure 2.3 Two  ,  | misreading the code and or mistyping in the code, resulting in the machine not issuing the snack or providing the wrong sort|
Conceptual models 43 Figure 2.3 Two  ,  | A better way of designing an interface for a large number of choices of variable cost is to continue to use direct mapping, but use buttons that show miniature versions of the snacks placed in a large matrix (rather than showing actual versions). This would use the available space at the front of the vending machine more economically. The customer would need only to press the button of the object chosen and put in the correct amount of money|
Conceptual models 43 Figure 2.3 Two  ,  | Much research has been carried out on how to optimize command-based and other instruction-giving systems with respect to usabilty goals. The form of the commands (e.g., the use of abbreviations, full names, icons, and/or labels), their syntax (how best to combine different commands), and their organization (e.g., how to structure options in different menus) are examples of some of the main areas that have been investigated (Shneiderman, 1998). In addition, various cognitive issues have been investigated that we will look at in the next chapter, such as the problems people have in remembering the names of a set of commands. Less |
Conceptual models 43 Figure 2.3 Two  , 44 Chapter 2 Understanding and conceptualizing interaction research has been carried out, however, on the best way to design the ordering and sequencing of button pressing for physical devices like cell phones, calculators, remote controls and vending machines| | 44 Chapter 2 Understanding and conceptualizing interaction research has been carried out, however, on the best way to design the ordering and sequencing of button pressing for physical devices like cell phones, calculators, remote controls and vending machines|
Conceptual models 43 Figure 2.3 Two  , 44 Chapter 2 Understanding and conceptualizing interaction research has been carried out, however, on the best way to design the ordering and sequencing of button pressing for physical devices like cell phones, calculators, remote controls and vending machines| | Another ubiquitous vending machine is the ticket machine. Typically, a number of instructions have to be given in a sequence when using one of these. Consider ticket machines designed to issue train tickets at railway stations-how often have you (or the person in front of you) struggled to work out how to purchase a ticket and made a mistake? How many instructions have to be given? What order are they given in? Is it logical or arbitrary? Could the interaction have been designed any differently to make it more obvious to people how to issue instructions to the machine to get the desired train ticket? Comment Ticketing machines vary enormously from country to country and from application to application|
Conceptual models 43 Figure 2.3 Two  , 44 Chapter 2 Understanding and conceptualizing interaction research has been carried out, however, on the best way to design the ordering and sequencing of button pressing for physical devices like cell phones, calculators, remote controls and vending machines| | There seems to be little attempt to standardize. Therefore, a person's knowledge of the Eurostar ticketing machine will not be very useful when buying a ticket for the Sydney Monorail or cinema tickets for the Odeon. Sometimes the interaction has been designed to get you to specify the type of ticket first (e.g. adult, child), the kind of ticket (e.g. single, return, special saver), then the destination, and finally to insert their money. Others require that the user insert a credit card first, before selecting the destination and the type of ticket|
Conceptual models 43 Figure 2.3 Two  , 2. Conversing This conceptual model is based on the idea of a person conversing with a system, where the system acts as a dialog partner. In particular, the system is designed to respond in a way another human being might when having a conversation with someone else. It differs from the previous category of instructing in being intended to reflect a more two-way communication process, where the system acts more like a partner than a machine that simply obeys orders. This kind of conceptual model has been found to be most useful for applications in which the user needs to find out specific kinds of information or wants to discuss issues. Examples include advisory systems, help facilities, and search engines. The proposed tourist application described earlier would fit into this category| | 2. Conversing This conceptual model is based on the idea of a person conversing with a system, where the system acts as a dialog partner. In particular, the system is designed to respond in a way another human being might when having a conversation with someone else. It differs from the previous category of instructing in being intended to reflect a more two-way communication process, where the system acts more like a partner than a machine that simply obeys orders. This kind of conceptual model has been found to be most useful for applications in which the user needs to find out specific kinds of information or wants to discuss issues. Examples include advisory systems, help facilities, and search engines. The proposed tourist application described earlier would fit into this category|
Conceptual models 43 Figure 2.3 Two  , 2. Conversing This conceptual model is based on the idea of a person conversing with a system, where the system acts as a dialog partner. In particular, the system is designed to respond in a way another human being might when having a conversation with someone else. It differs from the previous category of instructing in being intended to reflect a more two-way communication process, where the system acts more like a partner than a machine that simply obeys orders. This kind of conceptual model has been found to be most useful for applications in which the user needs to find out specific kinds of information or wants to discuss issues. Examples include advisory systems, help facilities, and search engines. The proposed tourist application described earlier would fit into this category| | The kinds of conversation that are supported range from simple voice-recognition menu-driven systems that are interacted with via phones to more complex natural-language-based systems that involve the system parsing and responding to user queries typed in by the user. Examples of the former include banking, ticket booking, and train time inquiries, where the user talks to the system in single-word phrases (e.g., yes, no, three) in response to prompts from the system. Examples of the latter include search engines and help systems, where the user types in a specific query (e.g., how do I change the margin widths?) to which the system responds by giving various answers|
Conceptual models 43 Figure 2.3 Two  , 2. Conversing This conceptual model is based on the idea of a person conversing with a system, where the system acts as a dialog partner. In particular, the system is designed to respond in a way another human being might when having a conversation with someone else. It differs from the previous category of instructing in being intended to reflect a more two-way communication process, where the system acts more like a partner than a machine that simply obeys orders. This kind of conceptual model has been found to be most useful for applications in which the user needs to find out specific kinds of information or wants to discuss issues. Examples include advisory systems, help facilities, and search engines. The proposed tourist application described earlier would fit into this category| | A main benefit of a conceptual model based on holding a conversation is that it allows people, especially novices, to interact with a system in a way they are already familiar with. For example, the search engine "Ask Jeeves for Kids!" allows children to ask a question in a way they would when asking their teachers or parentsrather than making them reformulate their question in terms of key words and Boolean logic. A disadvantage of this approach, however, is the misunderstandings that can arise when the search engine is unable to answer the child's question in the |
Conceptual models 45 You asked: How  ,  | 2.3 Conceptual models 45 You asked: How many legs does a ceyipede have? Jeeves knows these answers: Where can I find a definition for the math term leg? Where can I find a concise encvclo~edia article on ? ,. centipedes? Where can I see an image - of the human appendix? Why does my leg or other limb fall asleep? Where can I find advice on controlling the garden pest ? millipedes and centipedes? Figure 2.4 The response from "Ask ources from Britannica.com on Jeeves for Kids!" search engine when asked "how many legs does a centipede have?" way the child expects. For example, a child might type in a seemingly simple question, like "How many legs does a centipede have?" which the search engine finds difficult to answer. Instead, the search engine replies by suggesting a number of possible websites that may be relevant but-as can be seen in Figure 2.4-can be off the mark|
Conceptual models 45 You asked: How  ,  | Another problem that can arise from a conversational-based, conceptual model is that certain kinds of tasks are transformed into cumbersome and onesided interactions. This is especially the case for automated phone-based systems that use auditory menus to advance the conversation. Users have to listen to a voice providing several options, then make a selection, and repeat through further layers of menus before accomplishing their goal (e.g., reaching a real human, paying a bill). Here is the beginning of a dialog between a user who wants to find out about car insurance and an insurance company's reception system: <user dials an insurance company> "Welcome to St. Paul's Insurance Company. Press 1 if new customer, 2 if you are an existing customer"|
Conceptual models 45 You asked: How  ,  | <user presses 1> "Thank you for calling St. Paul's Insurance Company. If you require house insurance press 1, car insurance press 2, travel insurance press 3, health insurance press 4, other press 5" <user presses 2> "You have reached the car insurance division. If you re- quire information about fully comprehensive insurance press 1, 3rd-party insurance press 2 . . ." |
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3| | 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3|
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3|last: | If you'd like to press 3, press 8|
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3| | If you'd like to press 8, press S..." A recent development based on the conversing conceptual model is animated agents. Various kinds of characters, ranging from "real" people appearing at the interface (e.g., videoed personal assistants and guides) to cartoon characters (e.g., virtual and imaginary creatures), have been designed to act as the partners in the conversation with the system. In so doing, the dialog partner has become highly visible and tangible, appearing to both act and talk like a human being (or creature)|
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3| | The user is able to see, hear, and even touch the partner (when it is a physical toy) they are talking with, whereas with other systems based on a dialog partner (e.g., help systems) they can only hear or read what the system is saying|
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3| | Many agents have also been designed to exhibit desirable human-like qualities (e.g., humorous, happy, enthusiastic, pleasant, gentle) that are conveyed through facial expressions and lifelike physical movements (head and lip movements, body movements). Others have been designed more in line with Disney-like cartoon characters, exhibiting exaggerated behaviors (funny voices, larger-than-life facial expressions)|
Conceptual models 45 You asked: How  , 46 Chapter 2 Understanding and conceptualizing intera k ion 8 1 Randy Glasberw. $ww.01asbergen.com 1 "If you'd like to press 1, press 3| | Animated agents that exhibit human-like or creature-like physical behavior as well as "talk" can be more believable. The underlying conceptual model is conveyed much more explicitly through having the system act and talk via a visible agent. An advantage is that it can make it easier for people to work out that the interface agent (or physical toy) they are conversing with is not a human being, but a synthetic character that has been given certain human qualities. In contrast, when the dialog partner is hidden from view, it is more difficult to discern what is behind it and just how intelligent it is. The lack of visible cues can lead users into thinking it is more intelligent than it actually is. If the dialog partner then fails to understand their questions or comments, users are likely to lose patience with it. Moreover, |
Conceptual models 47 they are likely ,  | 2.3 Conceptual models 47 they are likely to be less forgiving of it (having been fooled into thinking the dialog partner is more intelligent than it really is) than of a dialog partner that is represented as a cartoon character at the interface (having only assumed it was a simple partner). The flip side of imbuing dialog partners with a physical presence at the interface, however, is that they can turn out to be rather annoying (for more on this topic see Chapter 5)|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another|last: | A well known instantidtion of this kind of conceptual model is direct manipulation|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | According to Ben Shneiderman (1983), who coined the term, directmanipulation interfaces possess three fundamental properties: continuous representation of the objects and actions of interest rapid reversible incremental actions with immediate feedback about the object of interest physical actions and button pressing instead of issuing commands with complex syntax Benefits of direct manipulation interfaces include: helps beginners learn basic functionality rapidly experienced users can work rapidly on a wide range of tasks infrequent users can remember how to carry out operations over time no need for error messages, except very rarely users can immediately see if their actions are furthering their goals and if not do something else useis experience less anxiety users gain confidence and mastery and feel in control Apple Computer Inc. was one of the first computer companies to design an operating environment using direct manipulation as its central mode of interaction|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | The highly successful Macintosh desktop demonstrates the main principles of direct manipulation (see Figure 2.5). To capitalize on people's understanding of what happens to physical objects in the real world, they used a number of visual and auditory cues at the interface that were intended to emulate them. One of |
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another|last: | Chapter Figure 2.5 Original Macintosh desktop interface|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | their assumptions was that people expect their physical actions to have physical results, so when a drawing tool is used, a corresponding line should appear and when a file is placed in the trash can a corresponding sound or visual cue showing it has been successfully thrown away is used (Apple Computer Inc., 1987). A number of specific visual and auditory cues were used to provide such feedback, including various animations and sounds (e.g. shrinking and expanding icons accompanied with 'shhhlicc' and 'crouik' sounds to represent opening and closing of files). Much of this interaction design was geared towards providing clues to the user to know what to do, to feel comfortable, and to enjoy exploring the interface|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | Many other kinds of direct manipulation interfaces have been developed, including video games, data visualization tools and CAD systems. Virtual environments and virtual reality have similarly employed a range of interaction mechanisms that enable users to interact with and navigate through a simulated 3D physical world. For example, users can move around and explore aspects of a 3D environment (e.g., the interior of a building) while also moving objects around in the virtual environment, (e.g., rearranging the furniture in a simulated living room). Figure 2.6 on Color Plate 3 shows screen shots of some of these|
Conceptual models 47 they are likely , 3. Manipulating and navigating This conceptual model describes the activity of manipulating objects and navigating through virtual spaces by exploiting users' knowledge of how they do this in the physical world. For example, virtual objects can be manipulated by moving, selecting, opening, closing, and zooming in and out of them. Extensions to these actions can also be included, such as manipulating objects or navigating through virtual spaces, in ways not possible in the real world. For example, some virtual worlds have been designed to allow users to teleport from place to place or to transform one object into another| | While direct manipulation and virtual environments provide a very versatile mode of interaction, they do have a number of drawbacks. At a conceptual level, some people may take the underlying conceptual model too literally and expect certain things to happen at the interface in the way they would in the physical world. A well known example of this phenomenon is of new Mac users being terri- |
Conceptual models 49 fied of draggin ,  | 2.3 Conceptual models 49 fied of dragging the icon of their floppy disk to the trash can icon on the desktop to eject it from the computer for fear of deleting it in the same way files are when placed in the trash can. The conceptual confusion arises because the designers opted to use the same action (dropping) on the same object (trash can) for two completely different operations, deleting and ejecting. Another problem is that not all tasks can be described by objects and not all actions can be done directly. Some tasks are better achieved through issuing instructions and having textual descriptions rather than iconic representations. Imagine if email messages were represented as small icons in your mailbox with abbreviations of who they were from and when they were sent. Moreover, you could only move them around by dragging them with a mouse. Very quickly they would take up your desk space and you would find it impossible to keep track of them all|
Conceptual models 49 fied of draggin , 4. Exploring and browsing This conceptual model is based on the idea of allowing people to explore and browse information, exploiting their knowledge of how they do this with existing media (e.g., books, magazines, TV, radio, libraries, pamphlets, brochures). When people go to a tourist office, a bookstore, or a dentist's surgery, often they scan and flick through parts of the information displayed, hoping to find something interesting to read. CD-ROMs, web pages, portals and e-commerce sites are applications based on this kind of conceptual model. Much thought needs to go into structuring the information in ways that will support effective navigation, allowing people to search, browse, and find different kinds of information| | 4. Exploring and browsing This conceptual model is based on the idea of allowing people to explore and browse information, exploiting their knowledge of how they do this with existing media (e.g., books, magazines, TV, radio, libraries, pamphlets, brochures). When people go to a tourist office, a bookstore, or a dentist's surgery, often they scan and flick through parts of the information displayed, hoping to find something interesting to read. CD-ROMs, web pages, portals and e-commerce sites are applications based on this kind of conceptual model. Much thought needs to go into structuring the information in ways that will support effective navigation, allowing people to search, browse, and find different kinds of information|
Conceptual models 49 fied of draggin , 4. Exploring and browsing This conceptual model is based on the idea of allowing people to explore and browse information, exploiting their knowledge of how they do this with existing media (e.g., books, magazines, TV, radio, libraries, pamphlets, brochures). When people go to a tourist office, a bookstore, or a dentist's surgery, often they scan and flick through parts of the information displayed, hoping to find something interesting to read. CD-ROMs, web pages, portals and e-commerce sites are applications based on this kind of conceptual model. Much thought needs to go into structuring the information in ways that will support effective navigation, allowing people to search, browse, and find different kinds of information| | What conceptual models are the following applications based on? (a) a 3D video game, say a car-racing game with a steering wheel and tactile, audio, and visual feedback (b) the Windows environment (c) a web browser Commenf (a) A 3D video game is based on a direct manipulation/virtual environment conceptual model|
Conceptual models 49 fied of draggin , 4. Exploring and browsing This conceptual model is based on the idea of allowing people to explore and browse information, exploiting their knowledge of how they do this with existing media (e.g., books, magazines, TV, radio, libraries, pamphlets, brochures). When people go to a tourist office, a bookstore, or a dentist's surgery, often they scan and flick through parts of the information displayed, hoping to find something interesting to read. CD-ROMs, web pages, portals and e-commerce sites are applications based on this kind of conceptual model. Much thought needs to go into structuring the information in ways that will support effective navigation, allowing people to search, browse, and find different kinds of information| | (b) The Windows environment is based on a hybrid form of conceptual model. It combines a manipulating mode of interaction where users interact with menus, scrollbars, documents, and icons, an instructing mode of interaction where users can issue commands through selecting menu options and combining various function keys, and a conversational model of interaction where agents (e.g. Clippy) are used to guide users in their actions|
Conceptual models 49 fied of draggin , 4. Exploring and browsing This conceptual model is based on the idea of allowing people to explore and browse information, exploiting their knowledge of how they do this with existing media (e.g., books, magazines, TV, radio, libraries, pamphlets, brochures). When people go to a tourist office, a bookstore, or a dentist's surgery, often they scan and flick through parts of the information displayed, hoping to find something interesting to read. CD-ROMs, web pages, portals and e-commerce sites are applications based on this kind of conceptual model. Much thought needs to go into structuring the information in ways that will support effective navigation, allowing people to search, browse, and find different kinds of information| | (c) A web browser is also based on a hybrid form of conceptual model, allowing users to explore and browse information via hyperlinks and also to instruct the network what to search for and what results to present and save. |
Conceptual models 49 fied of draggin , 50 Chapter 2 Understanding and conceptualizing interaction |last: | 50 Chapter 2 Understanding and conceptualizing interaction |
Conceptual models 51 Which conceptua ,  | 2.3 Conceptual models 51 Which conceptual model or combination of models do you think is most suited to supporting the following user activities? (a) downloading music off the web (b) programming Comment (a) The activity involves selecting, saving, cataloging and retrieving large files from an external source. Users need to be able to browse and listen to samples of the music and then instruct the machine to save and catalog the files in an order that they can readily access at subsequent times. A conceptual model based on instructing and navigating would seem appropriate|
Conceptual models 51 Which conceptua ,  | (b) Programming involves various activities including checking, debugging, copying libraries, editing, testing, and annotating. An environment that supports this range of tasks needs to be flexible. A conceptual model that allows visualization and easy manipulation of code plus efficient instructing of the system on how to check, debug, copy, etc., is essential|
Conceptual models based on objects ,  | 2.3.2 Conceptual models based on objects The second category of conceptual models is based on an object or artifact, such as a tool, a book, or a vehicle. These tend to be more specific than conceptual models based on activities, focusing on the way a particular object is used in a particular context. They are often based on an analogy with something in the physical world|
Conceptual models based on objects ,  | An example of a highly successful conceptual model based on an object is the spreadsheet (Winograd, 1996). The object this is based on is the ledger sheet|
Conceptual models based on objects ,  | The first spreadsheet was designed by Dan Bricklin, and called VisiCalc. It enabled people to carry out a range of tasks that previously could only be done very laboriously and with much difficulty using other software packages, a calculator, or by hand (see Figure 2.7). The main reasons why the spreadsheet has become so successful are first, that Bricklin understood what kind of tool would be useful to people in the financial world (like accountants) and second, he knew how to design it so that it could be used in the way that these people would find useful. Thus, at the outset, he understood (i) the kinds of activities involved in the financial side of business, and (ii) the problems people were having with existing tools when trying to achieve these activities|
Conceptual models based on objects ,  | A core financial activity is forecasting. This requires projecting financial results based on assumptions about a company, such as projected and actual sales, investments, infrastructure, and costs. The amount of profit or loss is calculated for different projections. For example, a company may want to determine how much loss it will incur before it will start making a profit, based on different amounts of investment, for different periods of time. Financial analysts need to see a spread of projections for different time periods. Doing this kind of multiple projecting by hand requires much effort and is subject to errors. Using a calculator can reduce the computational load of doing numerous sums, but it still requires the person to do much key pressing and writing down of partial results-again making the process vulnerable to errors|
Conceptual models based on objects ,  | To tackle these problems, Bricklin exploited the interactivity provided by microcomputers and developed an application that was capable of interactive financial |
Conceptual models based on objects , 52 Chapter 2 Understanding and conceptualizing interaction Entry Type V 40' v~lw L Rrcalculal~oo Osdsf Memory ImICdltD( fur tabct for ~paMln9 lnli~~lol I1 R IICtOSS HDvr mlny K memory IebLIl lDVd5 /fC dQWR GQtURIRB avaUlbtt It liMhrnp M Currsnr Enrw 5 Cwrdkll?%es \ WI 01 room \ Dhad+an tndtcatw d mi^ keys wtll move ewe rag sod down I( - / Edh line Rashmg block men4 wstmg wpue / ;$? Jws81tw F~lma'c Cursor Two w~ndawa when the screen 4 BP'* (obpsr Format (SI) Vatu. Enlty Figure 2.7 Reference card showing annotated screen dump for VisiCalc modeling. Key aspects of his conceptual model were: (i) to create a spreadsheet that was analogous to a ledger sheet in the way it looked, with columns and rows, which allowed people to capitalize on their familiarity with how to use this kind of representation, (ii) to make the spreadsheet interactive, by allowing the user to input and change data in any of the cells in the columns or rows, and (iii) to get the computer to perform a range of different calculations and recalculations in response to user input. For example, the last column can be programmed to display the sum of all the cells in the columns preceding it. With the computer doing all the calculations, together with an easy-to-learn-and-use interface, users were provided with an easy-tounderstand tool. Moreover, it gave them a new way of effortlessly working out any | | 52 Chapter 2 Understanding and conceptualizing interaction Entry Type V 40' v~lw L Rrcalculal~oo Osdsf Memory ImICdltD( fur tabct for ~paMln9 lnli~~lol I1 R IICtOSS HDvr mlny K memory IebLIl lDVd5 /fC dQWR GQtURIRB avaUlbtt It liMhrnp M Currsnr Enrw 5 Cwrdkll?%es \ WI 01 room \ Dhad+an tndtcatw d mi^ keys wtll move ewe rag sod down I( - / Edh line Rashmg block men4 wstmg wpue / ;$? Jws81tw F~lma'c Cursor Two w~ndawa when the screen 4 BP'* (obpsr Format (SI) Vatu. Enlty Figure 2.7 Reference card showing annotated screen dump for VisiCalc modeling. Key aspects of his conceptual model were: (i) to create a spreadsheet that was analogous to a ledger sheet in the way it looked, with columns and rows, which allowed people to capitalize on their familiarity with how to use this kind of representation, (ii) to make the spreadsheet interactive, by allowing the user to input and change data in any of the cells in the columns or rows, and (iii) to get the computer to perform a range of different calculations and recalculations in response to user input. For example, the last column can be programmed to display the sum of all the cells in the columns preceding it. With the computer doing all the calculations, together with an easy-to-learn-and-use interface, users were provided with an easy-tounderstand tool. Moreover, it gave them a new way of effortlessly working out any |
Conceptual models 53 number of forec ,  | 2.3 Conceptual models 53 number of forecasts-greatly extending what they could do before with existing tools|
Conceptual models 53 number of forec ,  | Another popular accounting tool intended for the home market, based on a conceptual model of an object, is Quicken. This used paper checks and registers for its basic structure. Other examples of conceptual models based on objects include most operating environments (e.g., Windows and the Mac desktop) and web portals. All provide the user with a familiar frame of reference when starting the application. |
Conceptual models 53 number of forec , 54 Chapter 2 Understanding and conceptualizing interaction 2.3.3 A case of mix and match? As we have pointed out, which kind of conceptual model is optimal for a given application obviously depends on the nature of the activity to be supported. Some are clearly suited to supporting a given activity (e.g., using manipulation and navigation for a flight simulator) while for others, it is less clear what might be best (e.g., writing and planning activities may be suited to both manipulation and giving instructions)| | 54 Chapter 2 Understanding and conceptualizing interaction 2.3.3 A case of mix and match? As we have pointed out, which kind of conceptual model is optimal for a given application obviously depends on the nature of the activity to be supported. Some are clearly suited to supporting a given activity (e.g., using manipulation and navigation for a flight simulator) while for others, it is less clear what might be best (e.g., writing and planning activities may be suited to both manipulation and giving instructions)|
Conceptual models 53 number of forec , 54 Chapter 2 Understanding and conceptualizing interaction 2.3.3 A case of mix and match? As we have pointed out, which kind of conceptual model is optimal for a given application obviously depends on the nature of the activity to be supported. Some are clearly suited to supporting a given activity (e.g., using manipulation and navigation for a flight simulator) while for others, it is less clear what might be best (e.g., writing and planning activities may be suited to both manipulation and giving instructions)| | In such situations, it is often the case that some form of hybrid conceptual model that combines different interaction styles is appropriate. For example, the tourist application in Activity 2.2 may end up being optimally designed based on a combination of conversing and exploring models. The user could ask specific questions by typing them in or alternatively browse through information. Shopping on the Internet is also often supported by a range of interaction modes. Sometimes the user may be browsing and navigating, other times communicating with an agent, at yet other times parting with credit card details via an instruction-based form fill-in. Hence, which mode of interaction is "active" depends on the stage of the activity that is being carried out. |
Interface metaphors 55 The down side ,  | 2.4 Interface metaphors 55 The down side of mixing interaction moqes is that the underlying conceptual model can end up being more complex and ambiguous, making it more difficult for the user to understand and learn. For example, some operating and word-processing systems now make it possible for the user to carry out the same activity in a number of different ways (e.g., to delete a file the user can issue a command like CtrlD, speak to the computer by saying "delete file," or drag an icon of the file to the recycle bin). Users will have to learn the different styles to decide which they prefer. Inevitably, the learning curve will be steeper, but in the long run the benefits are that it enables users to decide how they want to interact with the system|
Interface metaphors Another way of d ,  | 2.4 Interface metaphors Another way of describing conceptual models is in terms of interface metaphors|
Interface metaphors Another way of d ,  | By this is meant a conceptual model that has been developed to be similar in some way to aspects of a physical entity (or entities) but that also has its own behaviors and properties. Such models can be based on an activity or an object or both. As well as being categorized as conceptual models based on objects, the desktop and the spreadsheet are also examples of interface metaphors. Another example of an interface metaphor is a "search engine." The tool has been designed to invite comparison with a physical object-a mechanical engine with several parts working-together with an everyday action-searching by looking through numerous files in many different places to extract relevant information|
Interface metaphors Another way of d ,  | The functions supported by a search engine also include other features besides those belonging to an engine that searches, such as listing and prioritizing the results of a search. It also does these actions in quite different ways from how a mechanical engine works or how a human being might search a library for books on a given topic. The similarities alluded to by the use of the term "search engine," therefore, are at a very general conceptual level. They are meant to conjure up the essence of the process of finding relevant information, enabling the user to leverage off this "anchor" further understanding of other aspects of the functionality provided|
Interface metaphors Another way of d ,  | Interface metaphors are based on conceptual models that combine familiar knowledge with new concepts. As mentioned in Box 2.2, the Star was based on a conceptual model of the familiar knowledge of an office. Paper, folders, filing cabinets, and mailboxes were represented as icons on the screen and were designed to possess some of the properties of their physical counterparts. Dragging a document icon across the desktop screen was seen as equivalent to picking up a piece of paper in the physical world and moving it (but of course is a very different action)|
Interface metaphors Another way of d ,  | Similarly, dragging an electronic document onto an electronic folder was seen as being analogous to placing a physical document into a physical cabinet. In addition, new concepts that were incorporated as part of the desktop metaphor were operations that couldn't be performed in the physical world. For example, electronic files could be placed onto an icon of a printer on the desktop, resulting in the computer printing them out. |
Interface metaphors Another way of d ,  | I 56 Chapter 2 Understanding and conceptualizing interaction Interface metaphors are often actually composites, i.e., they combine quite different pieces of familiar knowledge with the system functionality. We already mentioned the "search engine" as one such example. Can you think of any others? Comment Some other examples include: Scrollbar--combines the concept of a scroll with a bar, as in bar chart Toolbar--combines the idea of a set of tools with a bar Portal website-a gateway to a particular collection of pages of networked information Benefits of interface metaphors Interface metaphors have proven to be highly successful, providing users with a familiar orienting device and helping them understand and learn how to use a system|
Interface metaphors Another way of d , last: | People find it easier to learn and talk about what they are doing at the com- |
Interface metaphors 57 puter interfa ,  | 2.4 Interface metaphors 57 puter interface in terms familiar to them-whether they are computer-phobic or highly experienced programmers. Metaphorically based commands used in Unix, like "lint" and "pipe," have very concrete meanings in everyday language that, when used in the context of the Unix operating system, metaphorically represent some aspect of the operations they refer to. Although their meaning may appear obscure, especially to the novice, they make sense when understood in the context of programming. For example, Unix allows the programmer to send the output of one program to another by using the pipe (1) symbol. Once explained, it is easy to imagine the output from one container going to another via a pipe|
Interface metaphors 57 puter interfa ,  | Can you think of any bizarre computing metaphors that have become common parlance whose original source of reference is (or always was) obscure? Cornrnen t A couple of intriguing ones are: Java-The programing language Java originally was called Oak, but that name had already been taken. It is not clear how the developers moved from Oak to Java. Java is a name commonly associated with coffee. Other Java-based metaphors that have been spawned include Java beans (a reusable software component) and the steaming coffee-cup icon that appears in the top left-hand corner of Java applets|
Interface metaphors 57 puter interfa ,  | Bluetooth-Bluetooth is used in a computing context to describe the wireless technology that is able to unite technology, communication, and consumer electronics. The name is taken from King Harald Blue Tooth, who was a 10th century legendary Viking king responsible for uniting Scandinavia and thus getting people to talk to each other|
Interface metaphors 57 puter interfa ,  | Opposition to using interface metaphors A mistake sometimes made by designers is to try to design an interface metaphor to look and behave literally like the physical entity it is being compared with|
Interface metaphors 57 puter interfa ,  | This misses the point about the benefit of developing interface metaphors. As stressed earlier, they are meant to be used to map familiar to unfamiliar knowledge, enabling users to understand and learn about the new domain. Designing interface metaphors only as literal models of the thing being compared with has understandably led to heavy criticism. One of the most outspoken critics is Ted Nelson (1990) who considers metaphorical interfaces as "using old half-ideas as crutches" (p. 237). Other objections to the use of metaphors in interaction design include: Breaks the rules. Several commentators have criticized the use of interface metaphors because of the cultural and logical contradictions involved in accommodating the metaphor when instantiated as a GUI. A pet hate is the recycle bin (formerly trash can) that sits on the desktop. Logically and culturally (i.e., in the real world), it should be placed under the desk. If this same rule were followed in the virtual desktop, users would not be able to see the bin because it would be occluded by the desktop surface. A counter-argument to this objection is that it does |
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | Moreover, the unexpected juxtaposition of the bin on the desktop can draw to the user's attention the additional functionality that it provides|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | Too constraining. Another argument against interface metaphors is that they are too constraining, restricting the kinds of computational tasks that would be useful at the interface. An example is trying to open a file that is embedded in several hundreds of files in a directory. Having to scan through hundreds of icons on a desktop or scroll through a list of files seems a very inefficient way of doing this. As discussed earlier, a better way is to allow the user to instruct the computer to open the desired file by typing in its name (assuming they can remember the name of the file)|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | Conflicts with design principles. By trying to design the interface metaphor to fit in with the constraints of the physical world, designers are forced into making bad design solutions that conflict with basic design principles. Ted Nelson sets up the trash can again as an example of such violation: "a hideous failure of consistency is the garbage can on the Macintosh, which means either "destroy this" or "eject it for safekeeping" (Nelson, 1990)|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | Not being able to understand the system functionality beyond the metaphor. It has been argued that users may get fixed in their understanding of the system based on the interface metaphor. In so doing, they may find it difficult to see what else can be done with the system beyond the actions suggested by the interface metaphor. Nelson (1990) also argues that the similarity of interface metaphors to any real objects in the world is so tenuous that it gets in the way more than it helps|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | We would argue the opposite: because the link is tenuous and there are only a certain number of similarities, it enables the user to see both the dissimilarities and how the metaphor has been extended|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | Overly literal translation of existing bad designs. Sometimes designers fall into the trap of trying to create a virtual object to resemble a familiar physical object that is itself badly designed. A well-known example is the virtual calculator, which is designed to look and behave like a physical calculator. The interface of many physical calculators, however, has been poorly designed in the first place, based on poor conceptual models, with excessive use of modes, poor labeling of functions, and difficult-to-manipulate key sequences (Mullet and Sano, 1995)|
Interface metaphors 57 puter interfa , 58 Chapter 2 Understanding and conceptualizing interaction not matter whether rules are contravened. Once people understand why the bin is on the desktop, they readily accept that the real-world rule had to be broken| | The design of the calculator in Figure 2.10(a) has even gone as far as replicating functions needing shift keys (e.g., deg, oct, and hex), which could have been redesigned as dedicated software buttons. Trying to use a virtual calculator that has been designed to emulate a poorly designed physical calculator is much harder than using the physical device itself. A better approach would have been for the designers to think about how to use the computational power of the computer to support the kinds of tasks people need to do when doing calculations (cf. the spreadsheet design). The calculator in Figure 2.10(b) has tried to do this to some extent, by moving the buttons closer to each other (minimizing the amount of mousing) and providing flexible display modes with one-to-one mappings with different functions. |
Interface metaphors 59 (b) Figure 2. ,  | 2.4 Interface metaphors 59 (b) Figure 2.10 Two virtual calculators where (a) has been designed too literally and (b) more appropriately for a computer screen|
Interface metaphors 59 (b) Figure 2. , last: | Limits the designer's imagination in conjuring up new paradigms and models|
Interface metaphors 59 (b) Figure 2. ,  | Designers may hate on "tired" ideas, based on well known technologies, that they know people are very familiar with. Examples include travel and books for representing interaction with the web and hypermedia. One of the dangers of always looking backwards is that it restricts the designer in thinking of what new functionality to provide. For example, Gentner and Nielsen (1996) discuss how they used a book metaphor for designing the user interface to Sun Microsystems' online documentation|
Interface metaphors 59 (b) Figure 2. ,  | In hindsight they realized how it had blinkered them in organizing the online material, preventing them from introducing desirable functions such as the ability to reorder chapters according to their relevance scores after being searched|
Interface metaphors 59 (b) Figure 2. ,  | Clearly, there are pitfalls in using interface metaphors in interaction design. Indeed, this approach has led to some badly designed conceptual models, that have resulted in confusion and frustration. However, this does not have to be the case|
Interface metaphors 59 (b) Figure 2. ,  | Provided designers are aware of the dangers and try to develop interface metaphors that effectively combine familiar knowledge with new functionality in a meaningful way, then many of the above problems can be avoided. Moreover, as we have seen with the spreadsheet example, the use of analogy as a basis for a conceptual model can be very innovative and successful, opening up the realm of computers and their applications to a greater diversity of people. |
Interface metaphors 59 (b) Figure 2. , 60 Chapter 2 Understanding and conceptualizing interaction amine a web browser interface and describe the various forms of analogy and composite erface metaphors that have been used in its design. What familiar knowledge has been combined withnew functionality? Comment Many aspects of a web browser have been combined to create a composite interface metaphor: a range of toolbars, such as a button bar, navigation bar, favorite bar, history bar tabs, menus, organizers search engines, guides bookmarks, favorites icons for familiar objects like stop lights, home These have been combined with other operations and functions, including saving, searching, downloading, listing, and navigating| | 60 Chapter 2 Understanding and conceptualizing interaction amine a web browser interface and describe the various forms of analogy and composite erface metaphors that have been used in its design. What familiar knowledge has been combined withnew functionality? Comment Many aspects of a web browser have been combined to create a composite interface metaphor: a range of toolbars, such as a button bar, navigation bar, favorite bar, history bar tabs, menus, organizers search engines, guides bookmarks, favorites icons for familiar objects like stop lights, home These have been combined with other operations and functions, including saving, searching, downloading, listing, and navigating|
Interaction paradigms At a more gene ,  | 2.5 Interaction paradigms At a more general level, another source of inspiration for informing the design of a conceptual model is an interaction paradigm. By this it is meant a particular philosophy or way of thinking about interaction design. It is intended to orient designers to the kinds of questions they need to ask. For many years the prevailing paradigm in interaction design was to develop applications for the desktop-intended to be used by single users sitting in front of a CPU, monitor, keyboard and mouse. A dominant part of this approach was to design software applications that would run using a GUI or WIMP interface (windows, icons, mouse and pull-down menus, alternatively referred to as windows, icons, menus and pointers)|
Interaction paradigms At a more gene ,  | As mentioned earlier, a recent trend has been to promote paradigms that move "beyond the desktop." With the advent of wireless, mobile, and handheld technologies, developers started designing applications that could be used in a diversity of ways besides running only on an individual's desktop machine. For example, in September, 2000, the clothes company Levis, with the Dutch electronics company Philips, started selling the first commercial e-jacket-incorporating wires into the lining of the jacket to create a body-area network (BAN) for hooking up various devices, e.g., mobile phone, MP3, microphone, and headphone (see Figure 1.2(iii) in Color Plate 1). If the phone rings, the MP3 player cuts out the music automatically to let the wearer listen to the call. Another innovation was handheld interactive devices, like the Palmpilot, for which a range of applications were programmed. One was to program the Palmpilot as a multipurpose identity key, allowing guests to check in to certain hotels and enter their room without having to interact with the receptionist at the front desk|
Interaction paradigms At a more gene ,  | A number of alternative interaction paradigms have been proposed by researchers intended to guide future interaction design and system development (see Figure 2.11). These include: ubiquitous computing (technology embedded in the environment) pervasive computing (seamless integration of technologies) wearable computing (or wearables) |
Interaction paradigms 61 I Figure 2. ,  | 2.5 Interaction paradigms 61 I Figure 2.1 1 Examples of new interaction paradigms: (a) Some of the original devices developed as part of the ubiquitous computing paradigm. Tabs are small hand-sized wireless computers which know where they are and who they are with. Pads are paper-sized devices connected to the system via radio. They know where they are and who they are with. Liveboards are large wall sized devices. The "Dangling String" created by artist Natalie Jeremijenko was attached directly to the ethernet that ran overhead in the ceiling. It spun around depending on the level of digital traffic|
Interaction paradigms 61 I Figure 2. ,  | (b) Ishii and Ulmer, MIT Lab (1997) Tangible bits: from GUIs of desktop PCs to Tangible User Interfaces. The paradigm is concerned with establishing a new type of HCI called "Tangible User Interfaces" (TUIs). TUIs augment the real physical world by coupling digital information to everyday physical objects and environments|
Interaction paradigms 61 I Figure 2. ,  | (c) Affective Computing: The project, called "BlueEyes," is creating devices with embedded technology that gather information about people. This face (with movable eyebrows, eyes and mouth) tracks your movements and facial expressions and responds accordingly. |
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | Instead, we are forced to focus our attention on the multimedia representations on the screen (e.g., buttons, menus, scrollbars) or to move around in a virtual simulated world, manipulating virtual objects|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | So, how can technologies be designed to disappear into the background? Weiser did not mean ubiquity in the sense of simply making computers portable so that they can be moved from the desk into our pockets or used on trains or in bed|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | He meant that technology be designed to be integrated seamlessly into the physical world in ways that extend human capabilities. One of his prototypes was a "tabs, pads, and boards" setup whereby hundreds of computer devices equivalent in size to post-it notes, sheets of paper, and blackboards would be embedded in offices|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | Like the spreadsheet, such devices are assumed to be easy to use, because they capitalize on existing knowledge about how to interact and use everyday objects. Also like the spreadsheet, they provide much greater computational power. One of Weiser's ideas was that the tabs be connected to one another, enabling them to become multipurpose, including acting as a calendar, diary, identification card, and an interactive device to be used with a PC|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | Ubiquitous computing will produce nothing fundamentally new, but by making everything faster and easier to do, with less strain and fewer mental gymnastics, it will transform what is apparently possible (Weiser, 1991, p. 940)|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | Pervasive computing. Pervasive computing is a direct follow-on of ideas arising from ubiquitous computing. The idea is that people should be able to access and interact with information any place and any time, using a seamless integration of technologies. Such technologies are often referred to as smart devices or information appliances-designed to perform a particular activity. Commercial products include cell phones and handheld devices, like PalmPilots. On the domestic front, other examples currentIy being prototyped include intelligent fridges that signal the user when stocks are low, interactive microwave ovens that allow users to access information from the web while cooking, and smart pans that beep when the food is cooked|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | Wearable computing. Many of the ideas behind ubiquitous computing have since inspired other researchers to develop technologies that are part of the environment|
Interaction paradigms 61 I Figure 2. , 62 Chapter 2 Understanding and conceptualizing interaction tangible bits, augmented reality, and physicallvirtual integration attentive environments (computers attend to user's needs) the Workaday World (social aspects of technology use) Ubiquitous computing ("ubicomp'~. The late Mark Weiser (1991), an influential visionary, proposed the interaction paradigm of ubiquitous computing (Figure 2.11). His vision was for computers to disappear into the environment so that we would be no longer aware of them and would use them without thinking about them. As part of this process, they should "invisibly" enhance the world that already exists rather than create artificial ones. Existing computing technology, e.g., multimedia-based systems and virtual reality, currently do not allow us to do this| | The MIT Media Lab has created several such innovations. One example is wearable computing (Mann, 1996). The combination of multimedia and wireless |
Interaction paradigms 63 communicati ,  | 2.5 Interaction paradigms 63 communication presented many opportunities for thinking about how to embed such technologies on people in the clothes they wear. Jewelry, head-mounted caps, glasses, shoes, and jackets have all been experimented with to provide the user with a means of interacting with digital information while on the move in the physical world. Applications that have been developed include automatic diaries that keep users up to date on what is happening and what they need to do throughout the day, and tour guides that inform users of relevant information as they walk through an exhibition and other public places (Rhodes et al., 1999)|
Interaction paradigms 63 communicati ,  | Tangible bits, augmented reality, and physicaUvirtua1 integration. Another development that has evolved from ubiquitous computing is tangible user interfaces or tangible bits (Ishii and Ullmer, 1997). The focus of this paradigm is the "integration of computational augmentations into the physical environment", in other words, finding ways to combine digital information with physical objects and surfaces (e.g., buildings) to allow people to carry out their everyday activities. Examples include physical books embedded with digital information, greeting cards that play a digital animation when opened, and physical bricks attached to virtual objects that when grasped have a similar effect on the virtual objects. Another illustration of this approach is the one described in Chapter 1 of an enjoyable interface, in which a person could use a physical hammer to hit a physical key with corresponding virtual representations of the action being displayed on a screen|
Interaction paradigms 63 communicati ,  | Another part of this paradigm is augmented reality, where virtual representations are superimposed on physical devices and objects (as shown in Figure 2.1 on Color Plate 2). Bridging the gulf between physical and virtual worlds is also currently undergoing much research. One of the earlier precursors of this work was the Digital Desk (Wellner, 1993). Physical office tools, like books, documents and paper, were integrated with virtual representations, using projectors and video cameras. Both virtual and real documents were seamlessly combined|
Interaction paradigms 63 communicati ,  | Attentive environments and transparent computing. This interaction paradigm proposes that the computer attend to user's needs through anticipating what the user wants to do. Instead of users being in control, deciding what they want to do and where to go, the burden should be shifted onto the computer. In this sense the mode of interaction is much more implicit: computer interfaces respond to the user's expressions and gestures. Sensor-rich environments are used to detect the user's current state and needs. For example, cameras can detect where people are looking on a screen and decide what to display accordingly. The system should be able to determine when someone wants to make a call and which websites they want to visit at particular times. IBM's BlueEyes project is developing a range of computational devices that use non-obtrusive sensing technology, including videos and microphones, to track and identify users' actions. This information is then analyzed with respect to where users are looking, what they are doing, their gestures, and their facial expressions. In turn, this is coded in terms of the users' physical, emotional or informational state and is then used to determine what information they would like. For example, a BlueEyes-enabled computer could become active when a user first walks into a room, firing up any new email messages that have arrived. If the user shakes his or her head, it would be interpreted by the computer as "I don't want to read them," and instead show a listing of their appointments for that day. |
Interaction paradigms 63 communicati , 64 Chapter 2 Understanding and conceptualizing interaction The Workaday World. In the new paradigms mentioned above, the emphasis is on exploring how technological devices can be linked with each other and digital information in novel ways that allow people to do things they could not do before| | 64 Chapter 2 Understanding and conceptualizing interaction The Workaday World. In the new paradigms mentioned above, the emphasis is on exploring how technological devices can be linked with each other and digital information in novel ways that allow people to do things they could not do before|
Interaction paradigms 63 communicati , 64 Chapter 2 Understanding and conceptualizing interaction The Workaday World. In the new paradigms mentioned above, the emphasis is on exploring how technological devices can be linked with each other and digital information in novel ways that allow people to do things they could not do before| | In contrast, the Workaday World paradigm is driven primarily by conceptual and mundane concerns. It was proposed by Tom Moran and Bob Anderson (1990), when working at Xerox PARC. They were particularly concerned with the need to understand the social aspects of technology use in a way that could be useful for designers. The Workaday World paradigm focuses on the essential character of the workplace in terms of people's everyday activities, relationships, knowledge, and resources. It seeks to unravel the "set of patterns that convey the richness of the settings in which technologies live-the complex, unpredictable, multiform relationships that hold among the various aspects of working life" (p. 384)|
From conceptual models to physical d ,  | 2.6 From conceptual models to physical design As we emphasize throughout this book, interaction design is an iterative process. It involves cycling through various design processes at different levels of detail. Primarily it involves: thinking through a design problem, understanding the user's needs, coming up with possible conceptual models, prototyping them, evaluating them with respect to usability and user experience goals, thinking about the design implications of the evaluation studies, making changes to the prototypes with respect to these, evaluating the changed prototypes, thinking through whether the changes have improved the interface and interaction, and so on. Interaction design may also require going back to the original data to gather and check the requirements|
From conceptual models to physical d ,  | Throughout the iterations, it is important to think through and understand whether the conceptual model being developed is working in the way intended and to ensure that it is supporting the user's tasks|
From conceptual models to physical d ,  | Throughout this book we describe the way you should go about doing interaction design. Each iteration should involve progressing through the design in more depth. A first pass through an iteration should involve essentially thinking about the problem space and identifying some initial user requirements. A second pass should involve more extensive information gathering about users' needs and the problems they experience with the way they currently carry out their activities (see Chapter 7). A third pass should continue explicating the requirements, leading to thinking through possible conceptual models that would be appropriate (see Chapter 8). A fourth pass should begin "fleshing out" some of these using a variety of user-centered methods. A number of user-centered methods can be used to create prototypes of the potential candidates. These include using storyboarding to show how the interaction between the users and the system will take place and the laying out of cards and post-it notes to show the possible structure of and navigation through a website. Throughout the process, the various prototypes of the conceptual models should be evaluated to see if they meet users' needs. Informally asking users what they think is always a good starting point (see Chapter 12). A number of other techniques can also be used at different stages of the development of the prototypes, depending on the particular information required (see Chapters 13 and 14). |
From conceptual models to physical d ,  | 2.6 From conceptual models to physical design 65 Many issues will need to be addressed when developing and testing initial prototypes of conceptual models. These include: the way information is to be presented and interacted with at the interface what combinations of media to use (e.g., whether to use sound and animations) the kind of feedback that will be provided what combinations of input and output devices to use (e.g., whether to use speech, keyboard plus mouse, handwriting recognition) whether to provide agents and in what format whether to design operations to be hardwired and activated through physical buttons or to represent them on the screen as part of the software what kinds of help to provide and in what format While working through these design decisions about the nature of the interaction to be supported, issues concerning the actual physical design will need to be addressed. These will often fall out of the conceptual decisions about the way information is to be represented, the kind of media to be used, and so on. For example, these would typically include: information presentation -which dialogs and interaction styles to use (e.g., form fill-ins, speech input, menus) -how to structure items in graphical objects, like windows, dialog boxes and menus (e.g., how many items, where to place them in relation to each other) feedback -what navigation mechanisms to provide (e.g., forward and backward buttons) media combination -which kinds of icons to use Many of these physical design decisions will be specific to the interactive product being built. For example, designing a calendar application intended to be used by business people to run on a handheld computer will have quite different constraints and concerns from designing a tool for scheduling trains to run over a large network, intended to be used by a team of operators via multiple large displays|
From conceptual models to physical d ,  | The way the information will be structured, the kinds of graphical representations that will be appropriate, and the layout of the graphics on the screens will be quite different|
From conceptual models to physical d ,  | These kinds of design decisions are very practical, needing user testing to ensure that they meet with the usability goals. It is likely that numerous trade-offs will surface, so it is important to recognize that there is no right or wrong way to resolve these. Each decision has to be weighed with respect to the others. For example, if you decide that a good way of providing visibility for the calendar application on the handheld device is to have a set of "soft" navigation buttons permanently as |
From conceptual models to physical d , 66 Chapter 2 Understonding and conceptualizing interaction |last: | 66 Chapter 2 Understonding and conceptualizing interaction |
From conceptual models to physical d , last: | 2.6 From conceptual models to physical design 67 |
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | Assignment The aim of this assignment is for you to think about the appropriateness of different kinds of conceptual model that have been designed for similar kinds of physical and electronic artifacts|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | (a) Describe the conceptual model that underlie the design of: a personal pocket-sized calendarldiary (one week to a page) a wall calendar (one month to a page, usually with a picturelphoto) a wall planner (displaying the whole year) What is the main kind of activity and object they are based on? How do they differ for each of the three artifacts? What metaphors have been used in the design of their physical interface (think about the way time is conceptualized for each of them)? Do users understand the conceptual models these are based on in the ways intended (ask a few people to explain how they use them)? Do they match the different user needs? (b) Now describe the conceptual models that underlie the design of: an electronic personal calendar found on a personal organizer or handheld computer a shared calendar found on the web How do they differ from the equivalent physical artifacts? What new functionality has been provided? What interface metaphors have been used? Are the functions and interface metaphor well integrated? What problems do users have with these interactive kinds of calendars? Why do you think this is? Summary This chapter has explained the importance of conceptualizing interaction design before trying to build anything. It has stressed throughout the need always to be clear and explicit about the rationale and assumptions behind any design decision made. It described a taxonomy of conceptual models and the different properties of each. It also discussed interface metaphors and interaction paradigms as other ways of informing the design of conceptual models. |
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | References 69 Key points It is important to have a good understanding of the problem space, specifying what it is you are doing, why and how it will support users in the way intended|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others|last: | A fundamental aspect of interaction design is to develop a conceptual model|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | There are various kinds of conceptual models that are categorized according to the activity or object they are based on|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | Interaction modes (e.g., conversing, instructing) provide a structure for thinking about which conceptual model to develop|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | Interaction styles (e.g., menus, form fill-ins) are specific kinds of interfaces that should be decided upon after the conceptual model has been chosen|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | Decisions about conceptual design also should be made before commencing any physical design (e.g., designing an icon)|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others|last: | Interface metaphors are commonly used as part of a conceptual model|
From conceptual models to physical d , 68 Chapter 2 Understanding and conceptualizing interaction part of the visual display, you then need to consider the consequences of doing this for the rest of the information that needs to be interacted with. Will it still be possible to structure the display to show the calendar as days in a week or a month, all on one screen? This part of the design process is highly dependent on the context and essentially involves lots of juggling between design decisions. If you visit our website you can try out some of the interactivities provided, where you have to make such decisions when designing the physical layout for various interfaces. Here, we provide the background and rationale that can help you make appropriate choices when faced with a series of design decisions (primarily Chapters 3-5 and 8). For example, we explain why you shouldn't cram a screen full of information; why certain techniques are better than others for helping users remember how to carry out their tasks at the interface; and why certain kinds of agents appear more believable than others| | Many interactive systems are based on a hybrid conceptual model. Such models can provide more flexibility, but this can make them harder to learn|
From conceptual models to physical d , 3D realism is not necessarily better than 2D or other forms of representation when instantiating a conceptual model: what is most effective depends on the users' activities when interacting with a system| | 3D realism is not necessarily better than 2D or other forms of representation when instantiating a conceptual model: what is most effective depends on the users' activities when interacting with a system|
From conceptual models to physical d , 3D realism is not necessarily better than 2D or other forms of representation when instantiating a conceptual model: what is most effective depends on the users' activities when interacting with a system| | General interaction paradigms, like WIMP and ubiquitous computing, provide a particular way of thinking about how to design a conceptual model|
From conceptual models to physical d , 3D realism is not necessarily better than 2D or other forms of representation when instantiating a conceptual model: what is most effective depends on the users' activities when interacting with a system| | Further reading LAUREL, B. (1990) (ed.) The Art of Human Computer Design has a number of papers on conceptual models and interface metaphors. TW~ that are definitely worth reading are: Tom Erickson, "Working with interface metaphors" (pp|
From conceptual models to physical d , 65-74), which is a practical hands-on guide to designing interface metaphors (covered later in this book), and Ted Nelson's polemic, "The right way to think about software design" (pp. 229-234), which is a scathing attack on the use of interface metaphors| | 65-74), which is a practical hands-on guide to designing interface metaphors (covered later in this book), and Ted Nelson's polemic, "The right way to think about software design" (pp. 229-234), which is a scathing attack on the use of interface metaphors|
From conceptual models to physical d , 65-74), which is a practical hands-on guide to designing interface metaphors (covered later in this book), and Ted Nelson's polemic, "The right way to think about software design" (pp. 229-234), which is a scathing attack on the use of interface metaphors| | JOHNSON, M. AND LAKOFF, G. (1980) Metaphors We Live By. The University of Chicago Press. Those wanting to find out more about how metaphors are used in everyday conversations should take a look at this text|
From conceptual models to physical d , 65-74), which is a practical hands-on guide to designing interface metaphors (covered later in this book), and Ted Nelson's polemic, "The right way to think about software design" (pp. 229-234), which is a scathing attack on the use of interface metaphors| | There are many good articles on the topic of interface agents. A classic is: LANIER, J. (1995) Agents of alienation, ACM Interactions, 2(3), 66-72. The Art of Human Computer Design also provides several thought-provoking articles, including one called "Interface agents: metaphors with character" by Brenda Laurel (pp. 355-366) and another called "Guides: characterizing the interface" by Tim Oren et al. (pp|
From conceptual models to physical d , 367-382)|last: | 367-382)|
From conceptual models to physical d , 367-382)| | BANNON, L. (1977) "Problems in human-machine interaction and communication." Proc HCI'97, San Francisco|
From conceptual models to physical d , 367-382)|last: | Bannon presents a critical review of the agent approach to interface design|
From conceptual models to physical d , 367-382)| | MIT's Media Lab (www.media.mit.edu) is a good starting place to find out what is currently happening in the world of agents, wearables, and other new interaction paradigms. |
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: Could you tell me a bit more about what you think is involved in interaction design? ticles on hat topic. His book, Bringing Design to Sofhvare, brings together the perspectives of a number of leading researchers and designers. See Color Plate 2 for an example of his latest research|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person|last: | YR: Tell me about your background and how you moved into interaction design|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | TW: I got into interaction design through a couple of intermediate steps. I started out doing research into artificial intelligence. I became interested in how people interact with computers, in particular, when using ordinary language. It became clear after years of working on that, however, that the computer was a long way off from matching human abilities. Moreover, using natural language with a computer when it doesn't really understand you can be very frustrating and in fact a very bad way to interact with it. So, rather than trying to get the computer to imitate the person, I became interested in other ways of taking advantage of what the computer can do well and what the person can do well. That led me into the general field of HCI. As I began to look at what was going on in that field and to study it, it became clear that it was not the same as other areas of computer science. The key issues were about how the technology fits with what people could do and what they wanted to do. In contrast, most of computer science is really dominated by how the mechanisms operate|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | I was very attracted to thinking more in the style of design disciplines, like product design, urban design, architecture, and so on. I realized that there was an approach that you might call a design way, that puts the technical asspects into the background with respect to understanding the interaction. Through looking at these design disciplines, I realized that there was something unique about interaction design, which is that it has a dialogic temporal element. By TW: One of the biggest influences is product design|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | I think that interaction design overlaps with it, because they both take a very strong user-oriented view|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | Both are concerned with finding a user group, understanding their needs, then using that understanding to come up with new ideas. They may be ones that the users don't even realize they need. It is then a matter of trying to translate who it is, what they are doing, and why they are doing it into possible innovations|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | In the case of product design it is products. In the case of interaction design it is the way that the computer system interacts with the person|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR. What do you think are important inputs into the design process? TW: One of the characteristics of design fields as opposed to traditional engineering fields is that there is much more dependence on case studies and examples than on formulas. Whereas an engineer knows how to calculate something, an architect or a designer is working in a tradition where there is a history over time of other things people have done. People have said that the secret of great design is to know what to steal and to know when some element or some way of doing things that worked before will be appropriate to your setting and then adapt it. Of course you can't apply it directly, so I think a big part of doing good design is experience and exposure. You have to have seen a lot of things in practice and understood what is good and bad about them, to then use these to inform your design|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: How do you see the relationship between studying interaction design and the practice of it? Is there a good dialog between research and practice? TW: Academic study of interaction design is a tricky area because so much of it depends on a kind of tacit knowledge that comes through experience and |
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | Interview 71 exposure. It is not the kind of thing you can set down easily as, say, you can scientific formulas. A lot of design tends to be methodological. It is not about the design per se but is more about how you go about doing design, in particular, knowing what are the appropriate steps to take and how you put them together|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: How do you see the field of interaction design taking on board the current explosion in new technologies-for example mobile, ubiquitous, infrared, and so on? Is it different, say, from 20 years ago when it was just about designing software applications to sit on the desktop? TW: I think a real change in people's thinking has been to move from interface design to interaction design|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | This has been pushed by the fact that we do have all kinds of devices nowadays. Interface design used to mean graphical interfaces, which meant designing menus and other widgets. But now when you're talking about handheld devices, gesture interfaces, telephone interfaces and so on, it is clear that you can't focus just on the widgets. The widgets may be part of any one of these devices but the design thinking as a whole has to focus on the interaction|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: What advice would you give to a student coming into the field on what they should be learning and looking for? TW: I think a student who wants to learn this field should think of it as a kind of dual process, that is what Donald Schon calls "reflection in action," needing both the action and the reflection. It is important to have experience with trying to build things. That experience can be from outside work, projects, and courses where you are actually engaged in making something work. At the same time you need to be able to step back and look at it not as "What do I need to do next?" but from the perspective of what you are doing and how that fits into the larger picture|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: Are there any classic case studies that stand out as good exemplars of interaction design? TW: You need to understand what has been important in the past. I still use the Xerox Star as an exemplar because so much of what we use today was there|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | When you go back to look at the Star you see it in the context of when it was first created. I also think some exemplars that are very interesting are ones that never actually succeeded commercially. For example, I use the PenPoint system that was developed for pen computers by Go. Again, they were thinking fresh. They set out to do something different and they were much more conscious of the design issues than somebody who was simply adapting the next version of something that already existed. Palmpilot is another good example, because they looked at the problem in a different way to make something work. Another interesting exemplar, which other people may not agree with, is Microsoft Bob--not because it was a successful program, because it wasn't, but because it was a first exploration of a certain style of interaction, using animated agents|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | You can see very clearly from these exemplars what design trade-offs the designers were making and why and then you can look at the consequences|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | YR: Finally, what are the biggest challenges facing people working in this area? TW: I think one of the biggest challenges is what Pelle Ehn calls the dialectic between tradition and transcendence. That is, people work and live in certain ways already, and they understand how to adapt that within a small range, but they don't have an understanding or a feel for what it would mean to make a radical change, for example, to change their way of doing business on the Internet before it was around, or to change their way of writing from pen and paper when word processors weren't around. I think what the designer is trying to do is envision things for users that the users can't yet envision. The hard part is not fixing little problems, but designing things that are both innovative and that work. |
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | Chapter 3 Understanding users 3.1 Introduction 3.2 What is cognition? 3.3 Applying knowledge from the physical world to the digital world 3.4 Conceptual frameworks for cognition 3.4.1 Mental models 3.4.2 Information processing 3.4.3 External cognition 3.5 Informing design: from theory to practice Introduction Imagine trying to drive a car by using just a computer keyboard. The four arrow keys are used for steering, the space bar for braking, and the return key for accelerating|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person|last: | To indicate left you need to press the F1 key and to indicate right the F2 key|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | To sound your horn you need to press the F3 key. To switch the headlights on you need to use the F4 key and, to switch the windscreen wipers on, the F5 key. Now imagine as you are driving along a road a ball is suddenly kicked in front of you|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | What would you do? Bash the arrow keys and the space bar madly while pressing the F4 key? How would you rate your chances of missing the ball? Most of us would balk at the very idea of driving a car this way. Many early video games, however, were designed along these lines: the user had to press an arbitrary combination of function keys to drive or navigate through the game. There was little, if any, consideration of the user's capabilities. While some users regarded mastering an arbitrary set of keyboard controls as a challenge, many users found them very limiting, frustrating, and difficult to use. More recently, computer consoles have been designed with the user's capabilities and the demands of the activity in mind. Much better ways of controlling and interacting, such as through using joysticks and steering wheels, are provided that map much better onto the physical and cognitive aspects of driving and navigating|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person|last: | In this chapter we examine some of the core cognitive aspects of interaction design|
From conceptual models to physical d , 70 Chapter 2 Understanding and conceptualizing int eraction this I mean a human dialog not in the sense of using ordinary language, but in the sense of thinking about the sequence and the flow of interaction. So I think interaction design is about designing a space for people, where that space has to have a temporal flow. It has to have a dialog with the person| | Specifically, we consider what humans are good and bad at and show how this knowledge can be used to inform the design of technologies that both extend human capabilities and compensate for their weaknesses. We also look at some of the influential cognitively based conceptual frameworks that have been developed for explaining the way humans interact with computers. (Other ways of conceptualizing |
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design| | 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design|
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design|last: | Describe the main ways cognition has been applied to interaction design|
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design| | Provide a number of examples in which cognitive research has led to the design of more effective interactive products|
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design|last: | Explain what mental models are|
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design|last: | Give examples of conceptual frameworks that are useful for interaction design|
From conceptual models to physical d , 74 Chapter 3 Understanding users human behavior that focus on the social and affective aspects of interaction design are presented in the following two chapters.) The main aims of this chapter are to: Explain what cognition is and why it is important for interaction design|last: | Enable you to try to elicit a mental model and be able to understand what it means|
What is cognition? Cognition is what ,  | 3.2 What is cognition? Cognition is what goes on in our heads when we carry out our everyday activities|
What is cognition? Cognition is what ,  | It involves cognitive processes, like thinking, remembering, learning, daydreaming, decision making, seeing, reading, writing and talking. As Figure 3.1 indicates, there are many different kinds of cognition. Norman (1993) distinguishes between two general modes: experiential and reflective cognition. The former is a state of mind in which we perceive, act, and react to events around us effectively and effortlessly|
What is cognition? Cognition is what ,  | It requires reaching a certain level of expertise and engagement. Examples include driving a car, reading a book, having a conversation, and playing a video game. In contrast, reflective cognition involves thinking, comparing, and decision-making|
What is cognition? Cognition is what ,  | This kind of cognition is what leads to new ideas and creativity. Examples include designing, learning, and writing a book. Norman points out that both modes are essential for everyday life but that each requires different kinds of technological support|
What is cognition? Cognition is what ,  | What goes on in the mind? perceiving thinking understanding others i remembering 1 talking with others making decisions Figure 3.1 What goes on in the mind? |
What is cognition? 75 Cognition has  ,  | 3.2 What is cognition? 75 Cognition has also been described in terms of specific kinds of processes. These include: attention perception and recognition memory learning reading, speaking, and listening problem solving, planning, reasoning, decision making It is important to note that many of these cognitive processes are interdependent: several may be involved for a given activity. For example, when you try to learn material for an exam, you need to attend to the material, perceive, and recognize it, read it, think about it, and try to remember it. Thus, cognition typically involves a range of processes. It is rare for one to occur in isolation. Below we describe the various kinds in more detail, followed by a summary box highlighting core design implications for each. Most relevant (and most thoroughly researched) for interaction design is memory, which we describe in greatest detail|
What is cognition? 75 Cognition has  ,  | Attention is the process of selecting things to concentrate on, at a point in time, from the range of possibilities available. Attention involves our auditory andlor visual senses. An example of auditory attention is waiting in the dentist's waiting room for our name to be called out to know when it is our time to go in. An example of attention involving the visual senses is scanning the football results in a newspaper to attend to information about how our team has done. Attention allows us to focus on information that is relevant to what we are doing. The extent to which this process is easy or difficult depends on (i) whether we have clear goals and (ii) whether the information we need is salient in the environment: (i) Our goals If we know exactly what we want to find out, we try to match this with the information that is available. For example, if we have just landed at an airport after a long flight and want to find out who had won the World Cup, we might scan the headlines at the newspaper stand, check the web, call a friend, or ask someone in the street|
What is cognition? 75 Cognition has  ,  | When we are not sure exactly what we are looking for we may browse through information, allowing it to guide our attention to interesting or salient items. For example, when we go to a restaurant we may have the general goal of eating a meal but only a vague idea of what we want to eat. We peruse the menu to find things that whet our appetite, letting our attention be drawn to the imaginative descriptions of various dishes. After scanning through the possibilities and imagining what each dish might be like (plus taking into account other factors, such as cost, who we are with, what the specials are, what the waiter recommends, whether we want a two- or three-course meal, and so on), we may then make a decision|
What is cognition? 75 Cognition has  ,  | (ii) Information presentation The way information is displayed can also greatly influence how easy or difficult it is to attend to appropriate pieces of information|
What is cognition? 75 Cognition has  ,  | Look at Figure 3.2 and try the activity. Here, the information-searching tasks are very precise, requiring specific answers. The information density is identical in both |
What is cognition? 75 Cognition has  , 76 Chapter 3 Understanding users Figure 3.2 Two different ways of structuring the same information at the interface: one makes it much easier to find information than the other. Look at the top screen and: (i) find the price for a double room at the Quality Inn in Columbia; (ii) find the phone number of the Days Inn in Charleston. Then look at the bottom screen and (i) find the price of a double room at the Holiday 1nn in Bradley; (ii) find the phone number of - ,, the Quality Inn in ~edford. Which took longer to do? In an early study Tullis found that the two screens produced quite different results: it took an average of 3.2 seconds to search the top screen and 5.5 seconds to find the same kind of information in the bottom screen. Why is this so, considering that both displays have the same density of information (31%)? The primary reason is the way the characters are grouped in the display: in the top they are grouped into vertical categories of information (e.g., place, kind of accommodation, phone number, and rates) that have columns of space between them. In the bottom screen the information is bunched up together, making it much harder to search through| | 76 Chapter 3 Understanding users Figure 3.2 Two different ways of structuring the same information at the interface: one makes it much easier to find information than the other. Look at the top screen and: (i) find the price for a double room at the Quality Inn in Columbia; (ii) find the phone number of the Days Inn in Charleston. Then look at the bottom screen and (i) find the price of a double room at the Holiday 1nn in Bradley; (ii) find the phone number of - ,, the Quality Inn in ~edford. Which took longer to do? In an early study Tullis found that the two screens produced quite different results: it took an average of 3.2 seconds to search the top screen and 5.5 seconds to find the same kind of information in the bottom screen. Why is this so, considering that both displays have the same density of information (31%)? The primary reason is the way the characters are grouped in the display: in the top they are grouped into vertical categories of information (e.g., place, kind of accommodation, phone number, and rates) that have columns of space between them. In the bottom screen the information is bunched up together, making it much harder to search through|
What is cognition? 75 Cognition has  , 76 Chapter 3 Understanding users Figure 3.2 Two different ways of structuring the same information at the interface: one makes it much easier to find information than the other. Look at the top screen and: (i) find the price for a double room at the Quality Inn in Columbia; (ii) find the phone number of the Days Inn in Charleston. Then look at the bottom screen and (i) find the price of a double room at the Holiday 1nn in Bradley; (ii) find the phone number of - ,, the Quality Inn in ~edford. Which took longer to do? In an early study Tullis found that the two screens produced quite different results: it took an average of 3.2 seconds to search the top screen and 5.5 seconds to find the same kind of information in the bottom screen. Why is this so, considering that both displays have the same density of information (31%)? The primary reason is the way the characters are grouped in the display: in the top they are grouped into vertical categories of information (e.g., place, kind of accommodation, phone number, and rates) that have columns of space between them. In the bottom screen the information is bunched up together, making it much harder to search through| | displays. However, it is much harder to find the information in the bottom screen than in the top screen. The reason for this is that the information is very poorly structured in the bottom, making it difficult to find the information. In the top the information has been ordered into meaningful categories with blank spacing between them, making it easier to select the necessary information|
What is cognition? 75 Cognition has  , 76 Chapter 3 Understanding users Figure 3.2 Two different ways of structuring the same information at the interface: one makes it much easier to find information than the other. Look at the top screen and: (i) find the price for a double room at the Quality Inn in Columbia; (ii) find the phone number of the Days Inn in Charleston. Then look at the bottom screen and (i) find the price of a double room at the Holiday 1nn in Bradley; (ii) find the phone number of - ,, the Quality Inn in ~edford. Which took longer to do? In an early study Tullis found that the two screens produced quite different results: it took an average of 3.2 seconds to search the top screen and 5.5 seconds to find the same kind of information in the bottom screen. Why is this so, considering that both displays have the same density of information (31%)? The primary reason is the way the characters are grouped in the display: in the top they are grouped into vertical categories of information (e.g., place, kind of accommodation, phone number, and rates) that have columns of space between them. In the bottom screen the information is bunched up together, making it much harder to search through| | Perception refers to how information is acquired from the environment, via the different sense organs (e.g., eyes, ears, fingers) and transformed into experiences of objects, events, sounds, and tastes (Roth, 1986). It is a complex process, involving other cognitive processes such as memory, attention, and language. Vision is the |
What is cognition? 77 most dominant  ,  | 3.2 What is cognition? 77 most dominant sense for sighted individuals, followed by hearing and touch. With respect to interaction design, it is important to present information in a way that can be readily perceived in the manner intended. For example, there are many ways to design icons. The key is to make them easily distinguishable from one another and to make it simple to recognize what they are intended to represent (not like the ones in Figure 3.4)|
What is cognition? 77 most dominant  ,  | Combinations of different media need also to be designed to allow users to recognize the composite information represented in them in the way intended. The use of sound and animation together needs to be coordinated so they happen in a logical sequence. An example of this is the design of lip-synch applications, where the animation of an avatar's or agent's face to make it appear to be talking, must be carefully synchronized with the speech that is emitted. A slight delay between the two can make it difficult and disturbing to perceive what is happening-as sometimes happens when film dubbing gets out of synch. A general design principle is |
What is cognition? 77 most dominant  , 78 Chapter 3 Understanding users Figure 3.4 Poor icon set. What do you think the icons mean and why are they so bad? that information needs to be represented in an appropriate form to facilitate the perception and recognition of its underlying meaning| | 78 Chapter 3 Understanding users Figure 3.4 Poor icon set. What do you think the icons mean and why are they so bad? that information needs to be represented in an appropriate form to facilitate the perception and recognition of its underlying meaning|
What is cognition? 77 most dominant  , 78 Chapter 3 Understanding users Figure 3.4 Poor icon set. What do you think the icons mean and why are they so bad? that information needs to be represented in an appropriate form to facilitate the perception and recognition of its underlying meaning|last: | Memory involves recalling various kinds of knowledge that allow us to act appropriately|
What is cognition? 77 most dominant  , 78 Chapter 3 Understanding users Figure 3.4 Poor icon set. What do you think the icons mean and why are they so bad? that information needs to be represented in an appropriate form to facilitate the perception and recognition of its underlying meaning| | It is very versatile, enabling us to do many things. For example, it allows us to recognize someone's face, remember someone's name, recall when we last met them and know what we said to them last. Simply, without memory we would not be able to function|
What is cognition? 77 most dominant  , 78 Chapter 3 Understanding users Figure 3.4 Poor icon set. What do you think the icons mean and why are they so bad? that information needs to be represented in an appropriate form to facilitate the perception and recognition of its underlying meaning| | It is not possible for us to remember everything that we see, hear, taste, smell, or touch, nor would we want to, as our brains would get completely overloaded. A filtering process is used to decide what information gets further processed and memorized. This filtering process, however, is not without its problems. Often we |
What is cognition? 79 forget things  ,  | 3.2 What is cognition? 79 forget things we would dearly love to remember and conversely remember things we would love to forget. For example, we may find it difficult to remember everyday things like people's names and phone numbers or academic knowledge like mathematical formulae. On the other hand, we may effortlessly remember trivia or tunes that cycle endlessly through our heads|
What is cognition? 79 forget things  ,  | How does this filtering process work? Initially, encoding takes place, determining which information is attended to in the environment and how it is interpreted|
What is cognition? 79 forget things  , last: | The extent to which it takes place affects our ability to recall that information later|
What is cognition? 79 forget things  ,  | The more attention that is paid to something and the more it is processed in terms of thinking about it and comparing it with other knowledge, the more likely it is to be remembered. For example, when learning about a topic it is much better to reflect upon it, carry out exercises, have discussions with others about it, and write notes than just passively read a book or watch a video about it. Thus, how information is interpreted when it is encountered greatly affects how it is represented in memory and how it is used later|
What is cognition? 79 forget things  ,  | Another factor that affects the extent to which information can be subsequently retrieved is the context in which it is encoded. One outcome is that sometimes it can be difficult for people to recall information that was encoded in a different context from the one they currently are in. Consider the following scenario:  You are on a train and someone comes up to you and says hello. You don't recognize him for a few moments but then realize it is one of your neighbors. You are only used to seeing your neighbor in the hallway of your apartment block and seeing him out of context makes him difficult to recognize initially|
What is cognition? 79 forget things  ,  | Another well-known memory phenomenon is that people are much better at recognizing things than recalling things. Furthermore, certain kinds of information are easier to recognize than others. In particular, people are very good at recognizing thousands of pictures, even if they have only seen them briefly before|
What is cognition? 79 forget things  ,  | Try to remember the dates of all the members of your family's and your closest friends' birthdays. How many can you remember? Then try to describe what is on the cover of the last DVDICD or record you bought. Which is easiest and why? Comment It is likely that you remembered much better what was on the CD/DVD/record cover (the image, the colors, the title) than the birthdays of your family and friends. People are very good at remembering visual cues about things, for example the color of items, the location of objects (a book being on the top shelf), and marks on an object (e.g., a scratch on a watch, a chip on a cup). In contrast, people find other kinds of information persistently difficult to learn and remember, especially arbitrary material like birthdays and phone numbers|
What is cognition? 79 forget things  ,  | Instead of requiring users to recall from memory a command name from a possible set of hundreds or even thousands, GUIs provide visually based options that |
What is cognition? 79 forget things  , 80 Chapter 3 Understanding users users can browse through until they recognize the operation they want to perform (see Figure 3.5(a) and (b)). Likewise, web browsers provide a facility of bookmarking or saving favorite URLs that have been visited, providing a visual list. This means that users need only recognize a name of a site when scanning through the saved list of URLs| | 80 Chapter 3 Understanding users users can browse through until they recognize the operation they want to perform (see Figure 3.5(a) and (b)). Likewise, web browsers provide a facility of bookmarking or saving favorite URLs that have been visited, providing a visual list. This means that users need only recognize a name of a site when scanning through the saved list of URLs|
What is cognition? 79 forget things  , 80 Chapter 3 Understanding users users can browse through until they recognize the operation they want to perform (see Figure 3.5(a) and (b)). Likewise, web browsers provide a facility of bookmarking or saving favorite URLs that have been visited, providing a visual list. This means that users need only recognize a name of a site when scanning through the saved list of URLs|last: | Figure 3.5(a) A DOS-based interface, requiring the user to type in commands. |
What is cognition? 81 File Folder FJ ,  | 3.2 What is cognition? 81 File Folder FJe Folder File Pol& Attached are the 6les I menboned in the meehng|
What is cognition? 81 File Folder FJ , last: | Have a good weekendl - HWi Figure 3.5(b) A Windows-based interface, with menus, icons, and buttons|
What is cognition? 81 File Folder FJ ,  | What strategies do you use to help you remember things? Comment People often write down what they need to remember on a piece of paper. They also ask others to remind them. Another approach is to use various mental strategies, like mnemonics|
What is cognition? 81 File Folder FJ ,  | A mnemonic involves taking the first letters of a set of words in a phrase or set of concepts and using them to make a more memorable phrase, often using bizarre and idiosyncratic connections. For example, some people have problems working out where east is in relation to west and vice versa (i.e., is it to the left or right). A mnemonic to help figure this out is to take the first letters of the four main points of the compass and then use them in the phrase "Never Eat Shredded Wheat" mentally recited in a clockwise sequence|
What is cognition? 81 File Folder FJ ,  | A growing problem for computer users is file management. The number of documents created, images and videoclips downloaded, emails and attachments saved, URLs bookmarked, and so on increases every day. A major problem is finding them again. Naming is the most common means of encoding them, but trying to remember a name of a file you created some time back can be very difficult, especially if there are tens of thousands of named files. How might such a process be facilitated, bearing in mind people's memory abilities? Mark Lansdale, a British psychologist, has been researching this problem of information retrieval for many |
What is cognition? 81 File Folder FJ , last: | - 82 Chapter 3 Understanding users |
What is cognition? 83 years. He sugg ,  | 3.2 What is cognition? 83 years. He suggests that it is profitable to view this process as involving two memory processes: recall-directed, followed by recognition-based scanning. The first refers to using memorized information about the required file to get as close to it as possible|
What is cognition? 83 years. He sugg ,  | The more exact this is, the more success the user will have in tracking down the desired file. The second happens when recall has failed to produce what a user wants and so requires reading through directories of files|
What is cognition? 83 years. He sugg ,  | To illustrate the difference between these two processes, consider the following scenario: a user is trying to access a couple of websites visited the day before that compared the selling price of cars offered by different dealers. The user is able to recall the name of one website: "alwaysthecheapest.com". She types this in and the website appears. This is an example of successful recall-directed memory. However, the user is unable to remember the name of the second one. She vaguely remembers it was something like 'autobargains.com'; but typing this in proves unsuccessful. Instead, she switches to scanning her bookmarks/favorites, going to the list of most recent ones saved. She notices two or three URLs that could be the one desired, and on the second attempt she finds the website she is looking for. In this situation, the user initially tries recall-directed memory and when this fails, adopts the second strategy of recognition-based scanning-which takes longer but eventually results in success|
What is cognition? 83 years. He sugg ,  | Lansdale proposes that file management systems should be designed to optimize both kinds of memory processes. In particular, systems should be developed that let users use whatever memory they have to limit the area being searched and then represent the information in this area of the interface so as to maximally assist them in finding what they need. Based on this theory, he has developed a prototype system called MEMOIRS that aims at improving users' recall of information they had encoded so as to make it easier to recall later (Lansdale and Edmunds, 1992). The system was designed to be flexible, providing the user with a range of ways of encoding documents mnemonically, including time stamping (see Figure 3.6), flagging, and attribution (e.g., color, text, icon, sound or image)|
What is cognition? 83 years. He sugg ,  | More flexible ways of helping users track down the files they want are now beginning to be introduced as part of commercial applications. For example, various search and find tools, like Apple's Sherlock, have been designed to enable the user to type a full or partial name or phrase that the system then tries to match by listing all the files it identifies containing the requested nametphrase. This method, however, is still quite limited, in that it allows users to encode and retrieve files using only alphanumericals. |
What is cognition? 83 years. He sugg , 84 Chapter 3 Understanding users I Full-Sized Document / This is a full-sized document, an exact replica of the original which was scanned into the MEMOIRS system using a Truvel24-bit colour scanner TY~ssrMI-nudd4uxol..D ru,npl.rof,bon$,"d ihuhxriruuxdlltolh UEMOrnS .Ism70 """I. ,Y""r,2eb,,rdourumx| | 84 Chapter 3 Understanding users I Full-Sized Document / This is a full-sized document, an exact replica of the original which was scanned into the MEMOIRS system using a Truvel24-bit colour scanner TY~ssrMI-nudd4uxol..D ru,npl.rof,bon$,"d ihuhxriruuxdlltolh UEMOrnS .Ism70 """I. ,Y""r,2eb,,rdourumx|
What is cognition? 83 years. He sugg , 84 Chapter 3 Understanding users I Full-Sized Document / This is a full-sized document, an exact replica of the original which was scanned into the MEMOIRS system using a Truvel24-bit colour scanner TY~ssrMI-nudd4uxol..D ru,npl.rof,bon$,"d ihuhxriruuxdlltolh UEMOrnS .Ism70 """I. ,Y""r,2eb,,rdourumx|last: | /I u Miniature (80 X 110 pixels) u Full-sized Document Figure 3.6 Memoirs tool. |
What is cognition? 85 How else might ,  | 3.2 What is cognition? 85 How else might banks solve the problem of providing a secure system while making the memory load relatively easy for people wanting to use phone banking? How does phone banking compare with online banking? Comment An alternative approach is to provide the customers with a PIN number (it could be the same as that of their ATM card) and ask them to key this in on their phone keypad, followed by asking one or two questions like their zip or post code, as a backup. Online banking has similar security risks to phone banking and hence this requires a number of security measures to be enforced. These include that the user sets up a nickname and a password. For example, some banks require typing in three randomly selected letters from a password each time the user logs on. This is harder to do online than when asked over the phone, mainly |
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password|
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | You really have to think about what letters and numbers are in your password; for example, has it got two letter f's after the number 6, or just one? Learning can be considered in terms of (i) how to use a computer-based application or (ii) using a computer-based application to understand a given topic. Jack Carroll (1990) and his colleagues have written extensively about how to design interfaces to help learners develop computer-based skills. A main observation is that people find it very hard to learn by following sets of instructions in a manual. Instead, they much prefer to "learn through doing." GUIs and direct manipulation interfaces are good environments for supporting this kind of learning by supporting exploratory interaction and importantly allowing users to "undo" their actions, i.e., return to a previous state if they make a mistake by clicking on the wrong option. Carroll has also suggested that another way of helping learners is by using a "training-wheels" approach. This involves restricting the possible functions that can be carried out by a novice to the basics and then extending these as the novice becomes more experienced|
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | The underlying rationale is to make initial learning more tractable, helping the learner focus on simple operations before moving on to more complex ones|
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | There have also been numerous attempts to harness the capabilities of different technologies to help learners understand topics. One of the main benefits of interactive technologies, such as web-based, multimedia, and virtual reality, is that they provide alternative ways of representing and interacting with information that are not possible with traditional technologies (e.g., books, video). In so doing, they have the potential of offering learners the ability to explore ideas and concepts in different ways|
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | Ask a grandparent, child, or other person who has not used a cell phone before to make and answer a call using it. What is striking about their behavior? Comment First-time users often try to apply their understanding of a land-line phone to operating a cell phone. However, there are marked differences in the way the two phones operate, even for the simplest of tasks, like making a call. First, the power has to be switched on when using a cell phone, by pressing a button (but not so with land-line phones), then the number has to be keyed in, including at all times the area code (in the UK), even if the callee is in the same area (but not so with land-lines), and finally the "make a call" button must be pressed (but not so with land-line phones). First-time users may intuitively know how to switch the phone on but not know which key to hit, or that it has to be held down for a couple of seconds. They may also forget to key in the area code if they are in the same area as the person they are calling, and to press the "make a call" key. They may also forget to press the "end a call" button (this is achieved through putting the receiver down with a land-line phone). Likewise, when answering a call, the first-time user may forget to press the "accept a call" button or not know which one to press. These additional actions are quick to learn, once the user understands the need to explicitly instruct the cell phone when they want to make, accept, or end a call|
What is cognition? 85 How else might , 86 Chapter 3 Understanding users because it interferes with the normally highly automated process of typing in a password| | Reading, speaking and listening: these three forms of language processing have both similar and different properties. One similarity is that the meaning of |
What is cognition? 87 sentences or p ,  | 3.2 What is cognition? 87 sentences or phrases is the same regardless of the mode in which it is conveyed. For example, the sentence "Computers are a wonderful invention" essentially has the same meaning whether one reads it, speaks it, or hears it. However, the ease with which people can read, listen, or speak differs depending on the person, task, and context. For example, many people find listening much easier than reading. Specific differences between the three modes include: Written language is permanent while listening is transient. It is possible to reread information if not understood the first time round. This is not possible with spoken information that is being broadcast. |
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | Listening requires less cognitive effort than reading or speaking. Children, especially, often prefer to listen to narratives provided in multimedia or webbased learning material than to read the equivalent text online|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | Written language tends to be grammatical while spoken language is often ungrammatical. For example, people often start a sentence and stop in midsentence, letting someone else start speaking|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words|last: | There are marked differences between people in their ability to use language|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words|last: | Some people prefer reading to listening, while others prefer listening|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words|last: | Likewise, some people prefer speaking to writing and vice versa|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | Dyslexics have difficulties understanding and recognizing written words, making it hard for them to write grammatical sentences and spell correctly|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | People who are hard of hearing or hard of seeing are also restricted in the way they can process language|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | Many applications have been developed either to capitalize on people's reading, writing and listening skills, or to support or replace them where they lack or have difficulty with them. These include: interactive books and web-based material that help people to read or learn foreign languages speech-recognition systems that allow users to provide instructions via spoken commands (e.g., word-processing dictation, home control devices that respond to vocalized requests) speech-output systems that use artificially generated speech (e.g., writtentext-to-speech systems for the blind) natural-language systems that enable users to type in questions and give text-based responses (e.g., Ask Jeeves search engine) cognitive aids that help people who find it difficult to read, write, and speak|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | A number of special interfaces have been developed for people who have problems with reading, writing, and speaking (e.g., see Edwards, 1992)|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | various input and output devices that allow people with various disabilities to have access to the web and use word processors and other software packages Helen Petrie and her team at the Sensory Disabilities Research Lab in the UK have been developing various interaction techniques to allow blind people to access the web and other graphical representations, through the use of auditory navigation and tactile diagrams|
What is cognition? 87 sentences or p , 88 Chapter 3 Understanding users Reading can be quicker than speaking or listening, as written text can be rapidly scanned in ways not possible when listening to serially presented spoken words| | Problem-solving, planning, reasoning and decision-making are all cognitive processes involving reflective cognition. They include thinking about what to do, what the options are, and what the consequences might be of carrying out a given action. They often involve conscious processes (being aware of what one is thinking |
What is cognition? 89 I about), disc ,  | 3.2 What is cognition? 89 I about), discussion with others (or oneself), and the use of various kinds of artifacts, (e.g., maps, books, and pen and paper). For example, when planning the best route to get somewhere, say a foreign city, we may ask others, use a map, get instructions from the web, or a combination of these. Reasoning also involves working through different scenarios and deciding which is the best option or solution to a given problem. In the route-planning activity we may be aware of alternative routes and reason through the advantages and disadvantages of each route before deciding on the best one. Many a family argument has come about because one member thinks he or she knows the best route while another thinks otherwise|
What is cognition? 89 I about), disc ,  | Comparing different sources of information is also common practice when seeking information on the web. For example, just as people will phone around for a range of quotes, so too, will they use different search engines to find sites that give the best deal or best information. If people have knowledge of the pros and cons of different search engines, they may also select different ones for different kinds of queries. For example, a student may use a more academically oriented one when looking for information for writing an essay, and a more commercially based one when trying to find out what's happening in town|
What is cognition? 89 I about), disc ,  | The extent to which people engage in the various forms of reflective cognition depends on their level of experience with a domain, application, or skill. Novices tend to have limited knowledge and will often make assumptions about what to do using other knowledge about similar situations. They tend to act by trial and error, exploring and experimenting with ways of doing things. As a result they may start off being slow, making errors and generally being inefficient. They may also act irrationally, following their superstitions and not thinking ahead to the consequences of their actions. In contrast, experts have much more knowledge and experience and are able to select optimal strategies for carrying out their tasks. They are likely to be able to think ahead more, considering what the consequences might be of opting for a particular move or solution (as do expert chess players). |
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | In other situations, however, the simple emulation approach can turn out to be counter-productive, forcing users to do things in bizarre, inefficient, or inappropriate ways. This can happen when the activity being emulated is more complex than is assumed, resulting in much of it being oversimplified and not supported effectively|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | Designers may notice something salient that people do in the physical world and then fall into the trap of trying to copy it in the electronic world without thinking through how and whether it will work in the new context (remember the poor design of the virtual calculator based on the physical calculator described in the previous chapter)|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | Consider the following classic study of real-world behavior. Ask yourself, first, whether it is useful to emulate at the interface, and second, how it could be extended as an interactive application|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted|last: | Tom Malone (1983) carried out a study of the "natural history" of physical offices|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | He interviewed people and studied their offices, paying particular attention to their filing methods and how they organized their papers. One of his findings was that whether people have messy offices or tidy offices may be more significant than people realize. Messy offices were seen as being chaotic with piles of papers everywhere and little organization. Tidy offices, on the other hand, were seen as being well organized with good use of a filing system. In analyzing these two types of offices, Malone suggested what they reveal in terms of the underlying cognitive behaviors of the occupants. One of his observations was that messy offices may appear chaotic but in reality often reflect a coping strategy by the person: documents are left lying around in obvious places to act as reminders that something has to be done with them. This observation suggests that using piles is a fundamental strategy, regardless of whether you are a chaotic or orderly person|
What is cognition? 89 I about), disc , 90 Chapter 3 Understanding users 3.3 Applying knowledge from the physical world to the digital world As well as understanding the various cognitive processes that users engage in when interacting with systems, it is also useful to understand the way people cope with the demands of everyday life. A well known approach to applying knowledge about everyday psychology to interaction design is to emulate, in the digital world, the strategies and methods people commonly use in the physical world. An assumption is that if these work well in the physical world, why shouldn't they also work well in the digital world? In certain situations, this approach seems like a good idea. Examples of applications that have been built following this approach include electronic post-it notes in the form of "stickies," electronic "to-do" lists, and email reminders of meetings and other events about to take place. The stickies application displays different colored notes on the desktop in which text can be inserted, deleted, annotated, and shufffed around, enabling people to use them to remind themselves of what they need to do-analogous to the kinds of externalizing they do when using paper stickies. Moreover, a benefit is that electronic stickies are more durable than paper ones-they don't get lost or fall off the objects they are stuck to, but stay on the desktop until explicitly deleted| | Such observations about people's coping strategies in the physical world bring to mind an immediate design implication about how to support electronic file |
Applying knowledge from the physical ,  | 3.3 Applying knowledge from the physical world to the digital world 91 management: to capitalize on the "pile" phenomenon by trying to emulate it in the electronic world. Why not let people arrange their electronic files into piles as they do with paper files? The danger of doing this is that it could heavily constrain the way people manage their files, when in fact there may be far more effective and flexible ways of filing in the electronic world. Mark Lansdale (1988) points out how introducing unstructured piles of electronic documents on a desktop would be counterproductive, in the same way as building planes to flap their wings in the way birds do (someone seriously thought of doing this)|
Applying knowledge from the physical ,  | But there may be benefits of emulating the pile phenomenon by using it as a kind of interface metaphor that is extended to offer other functionality. How might this be achieved? A group of interface designers at Apple Computer (Mandler et al., 1992) tackled this problem by adopting the philosophy that they were going to build an application that went beyond physical-world capabilities, providing new functionality that only the computer could provide and that enhanced the interface|
Applying knowledge from the physical ,  | To begin their design, they carried out a detailed study of office behavior and analyzed the many ways piles are created and used. They also examined how people use the default hierarchical file-management systems that computer operating systems provide. Having a detailed understanding of both enabled them to create a conceptual model for the new functionality-which was to provide various interactive organizational elements based around the notion of using piles. These included providing the user with the means of creating, ordering, and visualizing piles of files. Files could also be encoded using various external cues, including date and color. New functionality that could not be achieved with physical files included the provision of a scripting facility, enabling files in piles to be ordered in relation to these cues (see Figure 3.8)|
Applying knowledge from the physical ,  | Emulating real-world activity at the interface can be a powerful design strategy, provided that new functionality is incorporated that extends or supports the users in their tasks in ways not possible in the physical world. The key is really to understand the nature of the problem being addressed in the electronic world in relation to the various coping and externalizing strategies people have developed to deal with the physical world|
Applying knowledge from the physical , last: | Figure 3.8 The pile metaphor as it appears at the interface|
Applying knowledge from the physical , last: | portable computer |
Applying knowledge from the physical , 92 Chapter 3 Understanding users 3.4 Conceptual frameworks for cognition In the previous section we described the pros and cons of applying knowledge of people's coping strategies in the physical world to the digital world. Another approach is to apply theories and conceptual frameworks to interaction design. In this section we examine three of these approaches, which each have a different perspective on cognition: mental models information processing external cognition 3.4.1 Mental models In Chapter 2 we pointed out that a successful system is one based on a conceptual model that enables users to readily learn a system and use it effectively. What happens when people are learning and using a system is that they develop knowledge of how to use the system and, to a lesser extent, how the system works. These two kinds of knowledge are often referred to as a user's mental model| | 92 Chapter 3 Understanding users 3.4 Conceptual frameworks for cognition In the previous section we described the pros and cons of applying knowledge of people's coping strategies in the physical world to the digital world. Another approach is to apply theories and conceptual frameworks to interaction design. In this section we examine three of these approaches, which each have a different perspective on cognition: mental models information processing external cognition 3.4.1 Mental models In Chapter 2 we pointed out that a successful system is one based on a conceptual model that enables users to readily learn a system and use it effectively. What happens when people are learning and using a system is that they develop knowledge of how to use the system and, to a lesser extent, how the system works. These two kinds of knowledge are often referred to as a user's mental model|
Applying knowledge from the physical , 92 Chapter 3 Understanding users 3.4 Conceptual frameworks for cognition In the previous section we described the pros and cons of applying knowledge of people's coping strategies in the physical world to the digital world. Another approach is to apply theories and conceptual frameworks to interaction design. In this section we examine three of these approaches, which each have a different perspective on cognition: mental models information processing external cognition 3.4.1 Mental models In Chapter 2 we pointed out that a successful system is one based on a conceptual model that enables users to readily learn a system and use it effectively. What happens when people are learning and using a system is that they develop knowledge of how to use the system and, to a lesser extent, how the system works. These two kinds of knowledge are often referred to as a user's mental model| | Having developed a mental model of an interactive product, it is assumed that people will use it to make inferences about how to carry out tasks when using the interactive product. Mental models are also used to fathom what to do when something unexpected happens with a system and when encountering unfamiliar systems|
Applying knowledge from the physical , 92 Chapter 3 Understanding users 3.4 Conceptual frameworks for cognition In the previous section we described the pros and cons of applying knowledge of people's coping strategies in the physical world to the digital world. Another approach is to apply theories and conceptual frameworks to interaction design. In this section we examine three of these approaches, which each have a different perspective on cognition: mental models information processing external cognition 3.4.1 Mental models In Chapter 2 we pointed out that a successful system is one based on a conceptual model that enables users to readily learn a system and use it effectively. What happens when people are learning and using a system is that they develop knowledge of how to use the system and, to a lesser extent, how the system works. These two kinds of knowledge are often referred to as a user's mental model| | The more someone learns about a system and how it functions, the more their mental model develops. For example, TV engineers have a "deep" mental model of how TVs work that allows them to work out how to fix them. In contrast. |
Conceptual frameworks for cognition  ,  | 3.4 Conceptual frameworks for cognition 93 an average citizen is likely to have a reasonably good mental model of how to operate a TV but a "shallow" mental model of how it works|
Conceptual frameworks for cognition  ,  | Within cognitive psychology, mental models have been postulated as internal constructions of some aspect of the external world that are manipulated enabling predictions and inferences to be made (Craik, 1943). This process is thought to involve the "fleshing out" and the "running" of a mental model (Johnson-Laird, 1983). This can involve both unconscious and conscious mental processes, where images and analogies are activated|
Conceptual frameworks for cognition  ,  | o illustrate how we use mental models in our everyday reasoning, imagine the following (a) You arrive home from a holiday on a cold winter's night to a cold house. You have a small baby and you need to get the house warm as quickly as possible. Your house is centrally heated. Do you set the thermostat as high as possible or turn it to the desired temperature (e.g. 70??)? (b) You arrive home from being out all night, starving hungry. You look in the fridge and find all that is left is an uncooked pizza. The instructions on the packet say heat the oven to 375?? and then place the pizza in the oven for 20 minutes. Your oven is electric|
Conceptual frameworks for cognition  ,  | How do you heat it up? Do you turn it to the specified temperature or higher? Comment Most people when asked the first question imagine the scenario in terms of what they would do in their own house and choose the first option. When asked why, a typical explanation that is given is that setting the temperature to be as high as possible increases the rate at which the room warms up. While many people may believe this, it is incorrect. Thermostats work by switching on the-heat and keeping it going at a constant speed until the desired temperature set is reached, at which point they cut out. They cannot control the rate at which heat is given out from a heating system. Left at a given setting, thermostats will turn the heat on and off as necessary to maintain the desired temperature|
Conceptual frameworks for cognition  ,  | When asked the second question, most people say they would turn the oven to the specified temperature and put the pizza in when they think it is at the desired temperature. Some people answer that they would turn the oven to a higher temperature in order to warm it up more quickly. Electric ovens work on the same principle as central heating and so turning the heat up higher will not warm it up any quicker. There is also the problem of the pizza burning if the oven is too hot! Why do people use erroneous mental models? It seems that in the above scenarios, they are running a mental model based on a general valve theory of the way something works (Kempton, 1986). This assumes the underlying principle of "more is more": the more you turn or push something, the more it causes the desired effect|
Conceptual frameworks for cognition  ,  | This principle holds for a range of physical devices, such as taps and radio controls, where the more you turn them, the more water or volume is given. However, it does not hold for thermostats, which instead function based on the principle of an on-off switch. What seems to happen is that in everyday life people develop a core set of abstractions about how things work, and apply these to a range of devices, irrespective of whether they are appropriate. |
Conceptual frameworks for cognition  ,  | I 94 Chapter 3 Understanding users Using incorrect mental models to guide behavior is surprisingly common. Just watch people at a pedestrian crossing or waiting for an elevator (lift). How many times do they press the button? A lot of people will press it at least twice. When asked why, a common reason given is that they think it will make the lights change faster or ensure the elevator arrives. This seems to be another example of following the "more is more" philosophy: it is believed that the more times you press the button, the more likely it is to result in the desired effect|
Conceptual frameworks for cognition  ,  | Another common example of an erroneous mental model is what people do when the cursor freezes on their computer screen. Most people will bash away at all manner of keys in the vain hope that this will make it work again. However, ask them how this will help and their explanations are rather vague. The same is true when the TV starts acting up: a typical response is to hit the top of the box repeatedly with a bare hand or a rolled-up newspaper. Again, ask people why and their reasoning about how this behavior will help solve the problem is rather lacking|
Conceptual frameworks for cognition  ,  | The more one observes the way people interact with and behave towards interactive devices, the more one realizes just how strange their behavior can getespecially when the device doesn't work properly and they don't know what to do|
Conceptual frameworks for cognition  ,  | Indeed, research has shown that people's mental models of the way interactive devices work is poor, often being incomplete, easily confusable, based on inappropriate analogies, and superstition (Norman, 1983). Not having appropriate mental models available to guide their behavior is what causes people to become very frustratedoften resulting in stereotypical "venting" behavior like those described above|
Conceptual frameworks for cognition  ,  | On the other hand, if people could develop better mental models of interactive systems, they would be in a better position to know how to carry out their tasks efficiently and what to do if the system started acting up. Ideally, they should be able to develop a mental model that matches the conceptual model developed by the designer. But how can you help users to accomplish this? One suggestion is to educate them better. However, many people are resistant to spending much time learning about how things work, especially if it involves reading manuals and other documentation. An alternative proposal is to design systems to be more transparent, so that they are easier to understand. This doesn't mean literally revealing the guts of the system (cf. the way some phone handsets-see Figure 3.9 on Color Plate 4-and iMacs are made of transparent plastic to reveal the colorful electronic circuitry inside), but requires developing an easy-to-understand system image (see Chapter 2 for explanation of this term in relation to conceptual models). Specifically, this involves providing: useful feedback in response to user input easy-to-understand and intuitive ways of interacting with the system In addition, it requires providing the right kind and level of information, in the form of: clear and easy-to-follow instructions appropriate online help and tutorials context-sensitive guidance for users, set at their level of experience, explaining how to proceed when they are not sure what to do at a given stage of a task. |
Conceptual frameworks for cognition  , last: | 3.4 Conceptual frameworks for cognition 95 barn iAe hcias of how OocOlr s~rrch ucrkr|
Conceptual frameworks for cognition  , last: | A qu'w larc & the nuny sbmmts of bslrr rewits pipw|
Conceptual frameworks for cognition  , last: | P&iur mweh, wweh by eatettpwy, ml othn rwch featunr rr rwpkkrd|
Conceptual frameworks for cognition  , last: | lnformatipn w S~cSIweh fiihrinq, intmutbnrl Wlr, nd other diilw optknr|
Conceptual frameworks for cognition  , last: | Whrt m ZOIOh.du paps mi "1%0 Fwli Wy*? TMrr fwSur61 bn6 ohrs expbhd. |
Conceptual frameworks for cognition  , 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations| | 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations|
Conceptual frameworks for cognition  , 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations| | Processes include comparing and matching. Mental representations are assumed to comprise images, mental models, rules, and other forms of knowledge|
Conceptual frameworks for cognition  , 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations| | The information processing model provides a basis from which to make predictions about human performance. Hypotheses can be made about how long someone will take to perceive and respond to a stimulus (also known as reaction time) and what bottlenecks occur if a person is overloaded with too much information|
Conceptual frameworks for cognition  , 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations| | The best known approach is the human processor model, which models the cognitive processes of a user interacting with a computer (Card et al., 1983). Based on the information processing model, cognition is conceptualized as a series of processing stages, where perceptual, cognitive, and motor processors are organized in relation to one another (see Figure 3.12). The model predicts which cognitive processes are involved when a user interacts with a computer, enabling calculations to be made of how long a user will take to carry out various tasks. This can be very useful when comparing different interfaces. For example, it has been used to compare how well different word processors support a range of editing tasks|
Conceptual frameworks for cognition  , 96 Chapter 3 Understanding users 3.4.2 information processing Another approach to conceptualizing how the mind works has been to use metaphors and analogies (see also Chapter 2). A number of comparisons have been made, including conceptualizing the mind as a reservoir, a telephone network, and a digital computer. One prevalent metaphor from cognitive psychology is the idea that the mind is an information processor. Information is thought to enter and exit the mind through a series of ordered processing stages (see Figure 3.11). Within these stages, various processes are assumed to act upon mental representations| | The information processing approach is based on modeling mental activities that happen exclusively inside the head. However, most cognitive activities involve people interacting with external kinds of representations, like books, documents, and computers-not to mention one another. For example, when we go home from wherever we have been we do not need to remember the details of the route because we rely on cues in the environment (e.g., we know to turn left at the red house, right when the road comes to a T-junction, and so on). Similarly, when we are at home we do not have to remember where everything is because information is "out there." We decide what to eat and drink by scanning the items in the fridge, find out whether any messages have been left by glancing at the answering machine to see if there is a flashing light, and so on. To what extent, therefore, can we say that information processing models are truly representative of everyday cognitive activities? Do they adequately account for cognition as it happens in the real world and, specifically, how people interact with computers and other interactive devices? Input output or or stimuli response Figure 3.1 1 Human information processing model. |
Conceptual frameworks for cognition  ,  | 3.4 Conceptual frameworks for cognition 97 pw,," = 7 15-91 chunks 6, r 7 15-2261 sec Eye movement = 230 170-7001 msec Figure 3.1 2 The human processor model|
Conceptual frameworks for cognition  ,  | Several researchers have argued that existing information processing approaches are too impoverished: The traditional approach to the study of cognition is to look at the pure intellect, isolated from distractions and from artificial aids. Experiments are performed in closed, isolated rooms, with a minimum of distracting lights or sounds, no other people to assist with the task, and no aids to memory or thought. The tasks are arbitrary ones, invented by the researcher. Model builders build simulations and descriptions of these isolated situations|
Conceptual frameworks for cognition  ,  | The theoretical analyses are self-contained little structures, isolated from the world, isolated from any other knowledge or abilities ofthe person. (Norman, 1990, p. 5) Instead, there has been an increasing trend to study cognitive activities in the context in which they occur, analyzing cognition as it happens "in the wild" |
Conceptual frameworks for cognition  , 98 Chapter 3 Understanding users (Hutchins, 1995). A central goal has been to look at how structures in the environment can both aid human cognition and reduce cognitive load. A number of alternative frameworks have been proposed, including external cognition and distributed cognition. In this chapter, we look at the ideas behind external cognition-which has focused most on how to inform interaction design (distributed cognition is described in the next chapter)| | 98 Chapter 3 Understanding users (Hutchins, 1995). A central goal has been to look at how structures in the environment can both aid human cognition and reduce cognitive load. A number of alternative frameworks have been proposed, including external cognition and distributed cognition. In this chapter, we look at the ideas behind external cognition-which has focused most on how to inform interaction design (distributed cognition is described in the next chapter)|
External cognition People interact ,  | 3.4.3 External cognition People interact with or create information through using a variety of external representations, e.g., books, multimedia, newspapers, web pages, maps, diagrams, notes, drawings, and so on. Furthermore, an impressive range of tools has been developed throughout history to aid cognition, including pens, calculators, and computer-based technologies. The combination of external representations and physical tools have greatly extended and supported people's ability to carry out cognitive activities (Norman, 1993). Indeed, they are such an integral part that it is difficult to imagine how we would go about much of our everyday life without them|
External cognition People interact ,  | External cognition is concerned with explaining the cognitive processes involved when we interact with different external representations (Scaife and Rogers, 1996)|
External cognition People interact ,  | A main goal is to explicate the cognitive benefits of using different representations for different cognitive activities and the processes involved. The main ones include: 1. externalizing to reduce memory load 2. computational offloading 3. annotating and cognitive tracing 1 . Externalizing to reduce memory load A number of strategies have been developed for transforming knowledge into external representations to reduce memory load. One such strategy is externalizing things we find difficult to remember, such as birthdays, appointments, and addresses. Diaries, personal reminders and calendars are examples of cognitive artifacts that are commonly used for this purpose, acting as external reminders of what we need to do at a given time (e.g., buy a card for a relative's birthday)|
External cognition People interact ,  | Other kinds of external representations that people frequently employ are notes, like "stickies," shopping lists, and to-do lists. Where these are placed in the environment can also be crucial. For example, people often place post-it notes in prominent positions, such as on walls, on the side of computer monitors, by the front door and sometimes even on their hands, in a deliberate attempt to ensure they do remind them of what needs to be done or remembered. People also place things in piles in their offices and by the front door, indicating what needs to be done urgently and what can wait for a while|
External cognition People interact ,  | Externalizing, therefore, can help reduce people's memory burden by: reminding them to do something (e.g., to get something for their mother's birthday) |
Conceptual frameworks for cognition  ,  | 3.4 Conceptual frameworks for cognition 99 reminding them of what to do (e.g., to buy a card) reminding them of when to do something (send it by a certain date) 2. Computational offloading Computational offloading occurs when we use a tool or device in conjunction with an external representation to help us carry out a computation. An example is using pen and paper to solve a math problem|
Conceptual frameworks for cognition  , last: | (a) Multiply 2 by 3 in your head. Easy. Now try multiplying 234 by 456 in your head|
Conceptual frameworks for cognition  , last: | Not as easy. Try doing the sum using a pen and paper. Then try again with a calculator|
Conceptual frameworks for cognition  ,  | Why is it easier to do the calculation with pen and paper and even easier with a calculator? (b) Try doing the same two sums using Roman numerals|
Conceptual frameworks for cognition  ,  | Comment (a) Carrying out the sum using pen and the paper is easier than doing it in your head because you "offload" some of the computation by writing down partial results and using them to continue with the calculation. Doing the same sum with a calculator is even easier, because it requires only eight simple key presses. Even more of the computation has been offloaded onto the tool. You need only follow a simple internalized procedure (key in first number, then the multiplier sign, then next number and finally the equals sign) and then read of the result from the external display|
Conceptual frameworks for cognition  ,  | (b) Using roman numerals to do the same sum is much harder. 2 by 3 becomes 11 x 111, and 234 by 456 becomes CCXXXllll X CCCCXXXXXVI. The first calculation may be possible to do in your head or on a bit of paper, but the second is incredibly difficult to do in your head or even on a piece of paper (unless you are an expert in using Roman numerals or you "cheat" and transform it into Arabic numerals). Calculators do not have Roman numerals so it would be impossible to do on a calculator|
Conceptual frameworks for cognition  ,  | Hence, it is much harder to perform the calculations using Roman numerals than algebraic numerals-even though the problem is equivalent in both conditions. The reason for this is the two kinds of representation transform the task into one that is easy and more difficult, respectively. The kind of tool used also can change the nature of the task to being more or less easy|
Conceptual frameworks for cognition  , 3. Annotating and cognitive tracing Another way in which we externalize our cognition is by modifying representations to reflect changes that are taking place that we wish to mark. For example, people often cross things off in a to-do list to show that they have been completed. They may also reorder objects in the environment, say by creating different piles as the nature of the work to be done changes. These two kinds of modification are called annotating and cognitive tracing: Annotating involves modifying external representations, such as crossing off or underlining items. | | 3. Annotating and cognitive tracing Another way in which we externalize our cognition is by modifying representations to reflect changes that are taking place that we wish to mark. For example, people often cross things off in a to-do list to show that they have been completed. They may also reorder objects in the environment, say by creating different piles as the nature of the work to be done changes. These two kinds of modification are called annotating and cognitive tracing: Annotating involves modifying external representations, such as crossing off or underlining items. |
Conceptual frameworks for cognition  , 100 Chapbr 3 Understanding users Cognitive tracing invdves externally manipulating items into different orders or structures| | 100 Chapbr 3 Understanding users Cognitive tracing invdves externally manipulating items into different orders or structures|
Conceptual frameworks for cognition  , 100 Chapbr 3 Understanding users Cognitive tracing invdves externally manipulating items into different orders or structures| | Annotating is often used when people go shopping. People usually begin their shopping by planning what they are going to buy. This often involves looking in their cupboards and fridge to see what needs stocking up. However, many people are aware that they won't remember all this in their heads and so often externalize it as a written shopping list. The act of writing may also remind them of other items that they need to buy that they may not have noticed when looking through the cupboards. When they actually go shopping at the store, they may cross off items on the shopping list as they are placed in the shopping basket or cart. This provides them with an annotated externalization, allowing them to see at a glance what items are still left on the list that need to be bought|
Conceptual frameworks for cognition  , 100 Chapbr 3 Understanding users Cognitive tracing invdves externally manipulating items into different orders or structures| | Cognitive tracing is useful in situations where the current state of play is in a state of flux and the person is trying to optimize their current position. This typically happens when playing games, such as: in a card game, the continued rearrangement of a hand of cards into suits, ascending order, or same numbers to help determine what cards to keep and which to play, as the game progresses and tactics change in Scrabble, where shuffling around letters in the tray helps a person work out the best word given the set of letters (Maglio et al., 1999) It is also a useful strategy for letting users know what they have studied in an online learning package. An interactive diagram can be used to highlight all the nodes visited, exercises completed, and units still to study|
Conceptual frameworks for cognition  , 100 Chapbr 3 Understanding users Cognitive tracing invdves externally manipulating items into different orders or structures| | A genera1 cognitive principle for interaction design based on the external cognition approach is to provide external representations at the interface that reduce memory load and facilitate computational offloading. Different kinds of information visualizations can be developed that reduce the amount of effort required to make inferences about a given topic (e.g., financial forecasting, identifying pro- |
Informing design: from theory to pra ,  | 3.5 Informing design: from theory to practice 101 Figure 3.13 Information visualization. Visual Insights' site map showing web page use. Each page appears as a 3D color rod and is positioned radially, with the position showing the location of the page in the site|
Informing design: from theory to pra ,  | gramming bugs). In so doing, they can extend or amplify cognition, allowing people to perceive and do activities that they couldn't do otherwise. For example, a number of information visualizations have been developed that present masses of data in a form that makes it possible to make cross comparisons between dimensions at a glance (see Figure 3.13). GUIs can also be designed to reduce memory load significantly, enabling users to rely more on external representations to guide them through their interactions|
Informing design: from theory to pra ,  | 3.5 Informing design: from theory to practice Theories, models, and conceptual frameworks provide abstractions for thinking about phenomena. In particular, they enable generalizations to be made about cognition across different situations. For example, the concept of mental models provides a means of explaining why and how people interact with interactive products in the way they do across a range of situations. The information processing model has been used to predict the usability of a range of different interfaces|
Informing design: from theory to pra ,  | Theory in its pure form, however, can be difficult to digest. The arcane terminology and jargon used can be quite off-putting to those not familiar with it. It also requires much time to become familiar with it-something that designers and engineers can't afford when working to meet deadlines. Researchers have tried to help out by making theory more accessible and practical. This has included translating it into: design principles and concepts design rules analytic methods design and evaluation methods |
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | Another approach has been to produce various kinds of design principles, such as the ones we discussed in Chapter 1. More specific ones have also been proposed for designing multimedia and virtual reality applications (Rogers and Scaife, 1998)|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | Thomas Green (1990) has also proposed a framework of cognitive dimensions. His overarching goal is to develop a set of high-level concepts that are both valuable and easy to use for evaluating the designs of informational artifacts, such as software applications|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | An example dimension from the framework is "viscosity," which simply refers to resistance to local change. The analogy of stirring a spoon in syrup (high viscosity) versus milk (low viscosity) quickly gives the idea. Having understood the concept in a familiar context, Green then shows how the dimension can be further explored to describe the various aspects of interacting with the information structure of a software application. In a nutshell, the concept is used to examine "how much extra work you have to do if you change your mind." Different kinds of viscosity are described, such as knock-on viscosity, where performing one goal-related action makes necessary the performance of a whole train of extraneous actions. The reason for this is constraint density: the new structure that results from performing the first action violates some constraint that must be rectified by the second action, which in turn leads to a different violation, and so on. An example is editing a document using a word processor without widow control. The action of inserting a sentence at the beginning of the document means that the user must then go through the rest of the document to check that all the headers and bodies of text still lie on the same page. |
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | Summary 103 Assignment The aim of this assignment is for you to elicit mental models from people. In particular, the goal is for you to understand the nature ofpeople's knowledge about an interactive product in terms of how to use it and how it works|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | (a) First, elicit your own mental model. Write down how you think a cash machine (ATM) works. Then answer the following questions (abbreviated from Payne, 1991): How much money are you allowed to take out? If you took this out and then went to another machine and tried to withdraw the same amount, what would happen? What is on your card? How is the information used? What happens if you enter the wrong number? Why are there pauses between the steps of a transaction? How long are they? What happens if you type ahead during the pauses? What happens to the card in the machine? Why does it stay inside the machine? Do you count the money? Why? Next, ask two other people the same set of questions|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | (b) Now analyze your answers. Do you get the same or different explanations? What do the findings indicate? How accurate are people's mental models of the way ATMs work? How transparent are the ATM systems they are talking about? (c) Next, try to interpret your findings with respect to the design of the system. Are any interface features revealed as being particularly problematic? What design recommendations do these suggest? (d) Finally, how might you design a better conceptual model that would allow users to develop a better mental model of ATMs (assuming this is a desirable goal)? This exercise is based on an extensive study carried out by Steve Payne on people's mental models of ATMs. He found that people do have mental models of ATMs, frequently resorting to analogies to explain how they work. Moreover, he found that people's explanations were highly variable and based on ad hoc reasoning|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | Summary This chapter has explained the importance of understanding users, especially their cognitive aspects. It has described relevant findings and theories about how people carry out their everyday activities and how to learn from these when designing interactive products. It has provided illustrations of what happens when you design systems with the user in mind and what happens when you don't. It has also presented a number of conceptual frameworks that allow ideas about cognition to be generalized across different situations|
Informing design: from theory to pra , 102 Chapter 3 Understanding users A main emphasis has been on transforming theoretical knowledge into tools that can be used by designers. For example, Card et al's (1983) psychological model of the human processor, mentioned earlier, was simplified into another model called GOMS (an acronym standing for goals, operators, methods, and selection rules). The four components of the GOMS model describe how a user performs a computer-based task in terms of goals (e.g., save a file) and the selection of methods and operations from memory that are needed to achieve them. This model has also been transformed into the keystroke level method that essentially provides a formula for determining the amount of time each of the methods and operations takes. One of the main attractions of the GOMS approach is that it allows quantitative predictions to be made (see Chapter 14 for more on this)| | Key points Cognition comprises many processes, including thinking, attention, learning, memory, perception, decision-making, planning, reading, speaking, and listening. |
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | The main benefits of conceptual frameworks and cognitive theories are that they can explain user interaction and predict user performance|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | The conceptual framework of mental models provides a way of conceptualizing the user's understanding of the system|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | Research findings and theories from cognitive psychology need to be carefully reinterpreted in the context of interaction design to avoid oversimplification and misapplication|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks|last: | Further reading MULLET, K., AND SANO, D. (1995) Designing Visual Interfaces|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New Jersey: SunSoft Press. This is an excellent book on the do's and don'ts of interactive graphical design. It includes many concrete examples that have followed (or not) design principles based on cognitive issues|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | CARROLL, J. (1991) (ed.) Designing Interaction. Cambridge: Cambridge University Press. This edited volume provides a good collection of papers on cognitive aspects of interaction design|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks|last: | NORMAN, D. (1988) The Psychology of Everyday Things|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks|last: | New York: Basic Books|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New York: Basic Books|: NORMAN, D. (1993) Things that Make Us Smart. Reading, MA: Addison-Wesley. These two early books by Don Norman provide many key findings and observations about people's behavior and their use of artifacts. They are written in a stimulating and thought-provoking way, using many examples from everyday life to illustrate conceptual issues. He also presents a number of psychological theories, including external cognition, in an easily digestible form|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New York: Basic Books|: ROGERS, Y., RUTHERFORD, A,, AND BIBBY, P. (1992) (eds.) Models in the Mind. Orlando: Academic Press. This volume provides a good collection of papers on eliciting, interpreting, and theorizing about mental models in HCI and other domains|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks|last: | New York: Basic Books|: For more on dynalinking and interactivity see www.cogs.susx.ac.uklEC0i |
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New York: Basic Books|: Chapter 4 Designing for coIIa boration and communication 4.1 Introduction 4.2 Social mechanisms in communication and collaboration 4.2.1 Conversational mechanisms 4.2.2 Designing collaborative technologies to support conversation 4.2.3 Coordination mechanisms 4.2.4 Designing collaborative technologies to support coordination 4.2.5 Awareness mechanisms 4.2.6 Designing collaborative technologies to support awareness 4.3 Ethnographic studies of collaboration and communication 4.4 Conceptual frameworks 4.4.1 The language/action framework 4.4.2 Distributed cognition 4.1 Introduction Imagine going into school or work each day and sitting in a room all by yourself with no distractions. At first, it might seem blissful. You'd be able to get on with your work. But what if you discovered you had no access to email, phones, the Internet and other people? On top of that there is nowhere to get coffee. How long would you last? Probably not very long. Humans are inherently social: they live together, work together, learn together, play together, interact and talk with each other, and socialize. It seems only natural, therefore, to develop interactive systems that support and extend these different kinds of sociality|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New York: Basic Books|: There are many kinds of sociality and many ways of studying it. In this chapter our focus is on how people communicate and collaborate in their working and everyday lives. We examine how collaborative technologies (also called groupware) have been designed to support and extend communication and collaboration|
Informing design: from theory to pra , 104 Chapter 3 Understanding users The way an interface is designed can greatly affect how well people can perceive, attend, learn, and remember how to carry out their tasks| | New York: Basic Books|: We also look at the social factors that influence the success or failure of user adoption of such technologies. Finally, we examine the role played by ethnographic studies and theoretical frameworks for informing system design. |
Informing design: from theory to pra , 106 Chapter 4 Design for collaboration and communication The main aims of this chapter are to: I Explain what is meant by communication and collaboration| | 106 Chapter 4 Design for collaboration and communication The main aims of this chapter are to: I Explain what is meant by communication and collaboration|
Informing design: from theory to pra , 106 Chapter 4 Design for collaboration and communication The main aims of this chapter are to: I Explain what is meant by communication and collaboration| | Describe the main kinds of social mechanisms that are used by people to communicate and collaborate|
Informing design: from theory to pra , 106 Chapter 4 Design for collaboration and communication The main aims of this chapter are to: I Explain what is meant by communication and collaboration| | Outline the range of collaborative systems that have been developed to support this kind of social behavior|
Informing design: from theory to pra , 106 Chapter 4 Design for collaboration and communication The main aims of this chapter are to: I Explain what is meant by communication and collaboration| | Consider how field studies and socially-based theories can inform the design of collaborative systems|
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration I I A fundamental aspect of everyday life is talking, during which we pass on knowl- l edge to each other. We continuously update each other about news, changes, and developments on a given project, activity, person, or event. For example, friends and families keep each other posted on what's happening at work, school, at the pub, at the club, next door, in soap operas, and in the news. Similarly, people who work together keep each other informed about their social lives and everyday happenings-as well as what is happening at work, for instance when a project is about to be completed, plans for a new project, problems with meeting deadlines, rumors about closures, and so on|
Social mechanisms in communication a ,  | The kinds of knowledge that are circulated in different social circles are diverse, varying among social groups and across cultures. The frequency with which knowledge is disseminated is also highly variable. It can happen continuously throughout the day, once a day, weekly or infrequently. The means by which communication happens is also flexible-it can take place via face to face conversations, telephone, videophone, messaging, email, fax, and letters. Non-verbal communication also plays an important role in augmenting face to face conversation, involving the use of facial expressions, back channeling (the "aha's" and "umms"), voice intonation, gesturing, and other kinds of body language|
Social mechanisms in communication a ,  | All this may appear self-evident, especially when one reflects on how we interact with one another. Less obvious is the range of social mechanisms and practices that have evolved in society to enable us to be social and maintain social order|
Social mechanisms in communication a ,  | Various rules, procedures, and etiquette have been established whose function is to let people know how they should behave in social groups. Below we describe three main categories of social mechanisms and explore how technological systems have been and can be designed to facilitate these: the use of conversational mechanisms to facilitate the flow of talk and help overcome breakdowns during it the use of coordination mechanisms to allow people to work and interact together the use of awareness mechanisms to find out what is happening, what others are doing and, conversely, to let others know what is happening |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 107 4.2.1 Conversational mechanisms Talking is something that is effortless and comes naturally to most people. And yet holding a conversation is a highly skilled collaborative achievement, having many of the qualities of a musical ensemble. Below we examine what makes up a conversation|
Social mechanisms in communication a , last: | We begin by examining what happens at the beginning: A: Hi there|
Social mechanisms in communication a , last: | B: Hi! C: Hi|
Social mechanisms in communication a , last: | B: Hi! C: Hi|: A: All right? C: Good. How's it going? A: Fine, how are you? C: Good|
Social mechanisms in communication a ,  | B: Hi! C: Hi|: B: OK. How's life treating you? Such mutual greetings are typical. A dialog may then ensue in which the participants take turns asking questions, giving replies, and making statements. Then when one or more of the participants wants to draw the conversation to a close, they do so by using either implicit or explicit cues. An example of an implicit cue is when a participant looks at his watch, signaling indirectly to the other participants that he wants the conversation to draw to a close. The other participants may choose to acknowledge this cue or carry on and ignore it. Either way, the first participant may then offer an explicit signal, by saying, "Well, I must be off now. Got work to do," or, "Oh dear, look at the time. Must dash. Have to meet someone." Following the acknowledgment by the other participants of such implicit and explicit signals, the conversation draws to a close, with a farewell ritual. The different participants take turns saying, "Bye," "Bye then," "See you," repeating themselves several times, until they finally separate|
Social mechanisms in communication a ,  | B: Hi! C: Hi|: Such conversational mechanisms enable people to coordinate their "talk" with one another, allowing them to know how to start and stop. Throughout a conversation further "turn-taking" rules are followed, enabling people to know when to listen, when it is their cue to speak, and when it is time for them to stop again to allow the others to speak. Sacks, Schegloff and Jefferson (1978)-who are famous for their work on conversation analysis-describe these in terms of three basic rules: rule 1-the current speaker chooses the next speaker by asking an opinion, question, or request rule 2-another person decides to start speaking rule 3-the current speaker continues talking The rules are assumed to be applied in the above order, so that whenever there is an opportunity for a change of speaker to occur (e.g., someone comes to the end of a sentence), rule 1 is applied. If the listener to whom the question or opinion is addressed does not accept the offer to take the floor, the second rule is applied and |
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | To facilitate rule following, people use various ways of indicating how long they are going to talk and on what topic. For example, a speaker might say right at the beginning of their turn in the conversation that he has three things to say. A speaker may also explicitly request a change in speaker by saying, "OK, that's all I want to say on that matter. So, what do you think?" to a listener. More subtle cues to let others know that their turn in the conversation is coming to an end include the lowering or raising of the voice to indicate the end of a question or the use of phrases like, "You know what I mean?" or simply, "OK?" Back channeling (uhhuh, mmm), body orientation (e.g., moving away from or closer to someone), gaze (staring straight at someone or glancing away), and gesture (e.g. raising of arms) are also used in different combinations when talking, to signal to others when someone wants to hand over or take up a turn in the conversation|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | Another way in which conversations are coordinated and given coherence is through the use of adjacency pairs (Shegloff and Sacks, 1973). Utterances are assumed to come in pairs in which the first part sets up an expectation of what is to come next and directs the way in which what does come next is heard. For example, A may ask a question to which B responds appropriately: A: So shall we meet at 8:00? B: Um, can we make it a bit later, say 8:30? Sometimes adjacency pairs get embedded in each other, so it may take some time for a person to get a reply to their initial request or statement: A: So shall we meet at 8:00? B: Wow, look at him|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | A: Yes, what a funny hairdo! B: Um, can we make it a bit later, say 8:30? For the most part people are not aware of following conversational mechanisms, and would be hard pressed to articulate how they can carry on a conversation. Furthermore, people don't necessarily abide by the rules all the time. They may interrupt each other or talk over each other, even when the current speaker has clearly indicated a desire to hold the floor for the next two minutes to finish an argument|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | Alternatively, a listener may not take up a cue from a speaker to answer a question or take over the conversation, but instead continue to say nothing even though the speaker may be making it glaringly obvious it is the listener's turn to say something|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | Many a time a teacher will try to hand over the conversation to a student in a seminar, by staring at her and asking a specific question, only to see the student look at the floor, and say nothing. The outcome is an embarrassing silence, followed by either the teacher or another student picking up the conversation again|
Social mechanisms in communication a , 108 Chapter 4 Design for collaboration and communication someone else taking part in the conversation may take up the opportunity and offer a view on the matter. If this does not happen then the third rule is applied and the current speaker continues talking. The rules are cycled through recursively until someone speaks again| | Other kinds of breakdowns in conversation arise when someone says something that is ambiguous and the other person misinterprets it to mean something else. In |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 109 such situations the participants will collaborate to overcome the misunderstanding by using repair mechanisms. Consider the following snippet of conversation between two people: A: Can you tell me the way to get to the Multiplex Ranger cinema? B: Yes, you go down here for two blocks and then take a right (pointing to the right), go on till you get to the lights and then it is on the left|
Social mechanisms in communication a ,  | A: Oh, so I go along here for a couple of blocks and then take a right and the cinema is at the lights (pointing ahead of him)? A: No, you go on this street for a couple of blocks (gesturing more vigorously than before to the street to the right of him while emphasizing the word "this")|
Social mechanisms in communication a ,  | B: Ahhhh! I thought you meant that one: so it's this one (pointing in same direction as the other person)|
Social mechanisms in communication a , last: | A: Uh-hum, yes that's right, this one|
Social mechanisms in communication a ,  | Detecting breakdowns in conversation requires the speaker and listener to be attending to what the other says (or does not say). Once they have understood the nature of the failure, they can then go about repairing it. As shown in the above example, when the listener misunderstands what has been communicated, the speaker repeats what she said earlier, using a stronger voice intonation and more exaggerated gestures. This allows the speaker to repair the mistake and be more explicit to the listener, allowing her to understand and follow better what they are saying. Listeners may also signal when they don't understand something or want further clarification by using various tokens, like "Huh?", "Quoi?" or "What?" (Schegloff, 1982) together with giving a puzzled look (usually frowning). This is especially the case when the speaker says something that is vague. For example, they might say "I want it" to their partner, without saying what it is they want. The partner may reply using a token or, alternatively, explicitly ask, "What do you mean by it?" Taking turns also provides opportunities for the listener to initiate repair or request clarification, or for the speaker to detect that there is a problem and to initiate repair. The listener will usually wait for the next turn in the conversation before interrupting the speaker, to give the speaker the chance to clarify what is being said by completing the utterance (Suchman, 1987)|
Social mechanisms in communication a ,  | How do people repair breakdowns in conversations when using the phone or email? Comment In these settings people cannot see each other and so have to rely on other means of repairing their conversations. Furthermore, there are more opportunities for breakdowns to occur and fewer mechanisms available for repair. When a breakdown occurs over the phone, peo- ple will often shout louder, repeating what they said several times, and use stronger intbnation|
Social mechanisms in communication a ,  | When a breakdown occurs via email, people may literally spell out what they meant, making things much more explicit in a subsequent email. If the message is beyond repair they may resort to another mode of communication that allows greater flexibility of expiession, either telephoning or speaking to the recipient face to face. |
Social mechanisms in communication a , 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication| | 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication|
Social mechanisms in communication a , 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication| | Formal communication involves assigning certain roles to people and prescribing a priori the types of turns that people are allowed to take in a conversation|
Social mechanisms in communication a , 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication| | For example, at a board meeting, it is decided who is allowed to speak, who speaks when, who manages the turn-taking, and what the participants are allowed to talk about|
Social mechanisms in communication a , 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication|last: | In contrast, informal communication is the chat that goes on when people socialize|
Social mechanisms in communication a , 1 10 Chapter 4 Design for collaboration and communication Kinds of conversations Conversations can take a variety of forms, such as an argument, a discussion, a heated debate, a chat, a t6te-8-tete, or giving someone a "telling off." A wellknown distinction in conversation types is between formal and informal communication| | It also commonly happens when people bump into each other and talk briefly. This can occur in corridors, at the coffee machine, when waiting in line, and walking down the street. Informal conversations include talking about impersonal things like the weather (a favorite) and the price of living, or more personal things, like how someone is getting on with a new roommate. It also provides an opportunity to pass on gossip, such as who is going out to dinner with whom. In office settings, such chance conversations have been found to serve a number of functions, including coordinating group work, transmitting knowledge about office culture, establishing trust, and general team building (Kraut et al, 1990). It is also the case that people who are in physical proximity, such as those whose offices or desks are close to one another, engage much more frequently in these kinds of informal chats than those who are in different corridors or buildings. Most companies and organizations are well aware of this and often try to design their office space so that people who need to work closely together are placed close to one another in the same physical space|
Designing collaborative technologi ,  | 4.2.2 Designing collaborative technologies to support conversation As we have seen, "talk" and the way it is managed is integral to coordinating social activities. One of the challenges confronting designers is to consider how the different kinds of communication can be facilitated and supported in settings where there may be obstacles preventing it from happening "naturally." A central concern has been to develop systems that allow people to communicate with each other when they are in physically different locations and thus not able to communicate in the usual face to face manner. In particular, a key issue has been to determine how to allow people to carry on communicating as if they were in the same place, even though they are geographically separated-sometimes many thousands of miles apart|
Designing collaborative technologi ,  | Email, videoconferencing, videophones, computer conferencing, chatrooms and messaging are well-known examples of some of the collaborative technologies that have been developed to enable this to happen. Other less familiar systems are collaborative virtual environments (CVEs) and media spaces. CVEs are virtual worlds where people meet and chat. These can be 3D graphical worlds where users explore rooms and other spaces by teleporting themselves around in the guise of avatars (See Figure 4.1 on Color Plate 5), or text and graphical "spaces" (often called MUDS and MOOS) where users communicate with each other via some |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 1 1 1 form of messaging. Media spaces are distributed systems comprising audio, video, and computer systems that "extend the world of desks, chairs, walls and ceilings" (Harrison et al., 1997), enabling people distributed over space and time to communicate and interact with one another as if they were physically present. The various collaborative technologies have been designed to support different kinds of communication, from informal to formal and from one-to-one to many-to-many conversations. Collectively, such technologies are often referred to as computermediated communication (CMC)|
Social mechanisms in communication a ,  | Do you think it is better to develop technologies that will allow people to talk at a distance as if they were face to face, or to develop technologies that will support new ways of conversing? Comment On the one hand, it seems a good idea to develop technologies supporting people communicating at a distance that emulate the way they hold conversations in face to face situations|
Social mechanisms in communication a , last: | After all, this means of communicating is so well established and second nature to people|
Social mechanisms in communication a , last: | Phones and videoconferencing have been developed to essentially support face to face conversations|
Social mechanisms in communication a ,  | It is important to note, however, that conversations held in this way are not the same as when face to face. People have adapted the way they hold conversations to fit in with the constraints of the respective technologies. As noted earlier, they tend to shout more when misunderstood over the phone. They also tend to speak more loudly when talking on the phone, since they can't monitor how well the person can hear them at the other end of the phone. Likewise, people tend to project themselves more when videoconferencing|
Social mechanisms in communication a , last: | Turn-taking appears to be much more explicit, and greetings and farewells more ritualized|
Social mechanisms in communication a ,  | On the other hand, it is interesting to look at how the new communication technologies have been extending the way people talk and socialize. For example, SMS text messaging has provided people with quite different ways of having a conversation at a distance. People (especially teenagers) have evolved a new form of fragmentary conversation (called "texting") that they continue over long periods. The conversation comprises short phrases that are typed in, using the key pad, commenting on what each is doing or thinking, allowing the other to keep posted on current developments. These kinds of "streamlined" conversations are coordinated simply by taking turns sending and receiving messages. Online chatting has also enabled effectively hundreds and even thousands of people to take part in the same conversations, which is not possible in face to face settings|
Social mechanisms in communication a ,  | The range of systems that support computer-mediated communication is quite diverse. A summary table of the different types is shown in Table 4.1, highlighting how they support, extend and differ from face to face communication. A conventionally accepted classification system of CMC is to categorize them in terms of either synchronous or asynchronous communication. We have also included a third category: systems that support CMC in combination with other collaborative activities, such as meetings, decision-making, learning, and collaborative authoring of documents. Although some communication technologies are not strictly speaking computer-based (e.g., phones, video-conferencing) we have included these in the classification of CMC, as most now are display-based and interacted with or controlled via an interface. (For more detailed overviews of CMC, see Dix et al|
Social mechanisms in communication a , last: | (Chapter 13,1998) and Baecker et al. (Part 111 and IV, 1993). |
Social mechanisms in communication a ,  | Table 4.1 Classification of computer-mediated communication (CMC) into three types: (I) Synchronous communication, (ii) Asynchronous communication and (iii) CMC combined with other activity i. Synchronous communication Where conversations in real time are supported by letting people talk with each other either using their voices or through typing. Both modes seek to support non-verbal communication to varying degrees|
Social mechanisms in communication a , last: | Examples: Talking with voice: video phones, video conferencing (desktop or wall), media spaces|
Social mechanisms in communication a ,  | Talking via typing: text messaging (typing in messages using cell phones), instant messaging (real-time interaction via PCs) chatrooms, collaborative virtual environments (CVEs)|
Social mechanisms in communication a ,  | New kinds of functionality: CVEs allow communication to take place via a combination of graphical representations of self (in the form of avatars) with a separate chatbox or overlaying speech bubbles|
Social mechanisms in communication a ,  | CVEs allow people to represent themselves as virtual characters, taking on new personas (e.g., opposite gender), and expressing themselves in ways not possible in face-to-face settings|
Social mechanisms in communication a ,  | CVEs, MUDS and chatrooms have enabled new forms of conversation mechanisms, such as multi-turn-taking, where a number of people can contribute and keep track of a multi-streaming text-based conversation|
Social mechanisms in communication a , last: | Instant messaging allows users to multitask by holding numerous conversations at once|
Social mechanisms in communication a ,  | Benefits: Not having to physically face people may increase shy people's confidence and self-esteem to converse more in "virtual" public|
Social mechanisms in communication a ,  | It allows people to keep abreast of the goings-on in an organization without having to move from their office|
Social mechanisms in communication a , last: | It enables users to send text and images instantly between people using instant messaging|
Social mechanisms in communication a ,  | In offices, instant messaging allows users to fire off quick questions and answers without the time lag of email or phone-tag|
Social mechanisms in communication a ,  | Problems: Lack of adequate bandwidth has plagued video communication, resulting in poor-quality images that frequently break up, judder, have shadows, and appear as unnatural images|
Social mechanisms in communication a ,  | It is difficult to establish eye contact (normally an integral and subconscious part of face-to-face conversations) in CVEs, video conferencing, and videophones|
Social mechanisms in communication a ,  | Having the possibility of hiding behind a persona, a name, or an avatar in a chatroom gives people the opportunity to behave differently. Sometimes this can result in people becoming aggressive or intrusive|
Social mechanisms in communication a ,  | ii. Asynchronous communication Where communication between participants takes place remotely and at different times. It relies not on timedependent turn-taking but on participants initiating communication and responding to others when they want or are able to do so|
Social mechanisms in communication a ,  | Examples: email, bulletin boards, newsgroups, computer conferencing New kinds offunctionality: Attachments of different sorts (including annotations, images, music) for email and computer conferencing can be sent|
Social mechanisms in communication a , last: | Messages can be archived and accessed using various search facilities|
Social mechanisms in communication a , last: | Benefits: Ubiquity: Can read any place, any time|
Social mechanisms in communication a ,  | Flexibility: Greater autonomy and control of when and how to respond, so can attend to it in own time rather than having to take a turn in a conversation at a particular cue|
Social mechanisms in communication a , last: | Powerful: Can send the same message to many people|
Social mechanisms in communication a ,  | Makes some things easier to say: Do not have to interact with person so can be easier to say things than when face to face (e.g., announcing sudden death of colleague, providing feedback on someone's performance)|
Social mechanisms in communication a , last: | (Continued) 112 |
Social mechanisms in communication a ,  | (Continued) 112 |: Table 4.1 (Continued) ---- Problems: Flaming: When a user writes incensed angry email expressed in uninhibited language that is much stronger than normally used when interacting with the same person face to face. This includes the use of impolite statements, exclamation marks, capitalized sentences or words, swearing, and superlatives. Such "charged" communication can lead to misunderstandings and bad feelings among the recipients|
Social mechanisms in communication a ,  | (Continued) 112 |: Overload: Many people experience message overload, receiving over 30 emails or other messages a day|
Social mechanisms in communication a ,  | (Continued) 112 |: They find it difficult to cope and may overlook an important message while working through their ever increasing pile of email-especially if they have not read it for a few days. Various interface mechanisms have been designed to help people manage their email better, including filtering, threading, and the use of signaling to indicate the level of importance of a message (via the sender or recipient), through color coding, bold font, or exclamation marks placed beside a message|
Social mechanisms in communication a ,  | (Continued) 112 |: False expectations: An assumption has evolved that people will read their messages several times a day and reply to them there and then. However, many people have now reverted to treating email more like postal mail, replying when they have the time to do so|
Social mechanisms in communication a ,  | (Continued) 112 |: iii. CMC combined with other activity People often talk with each other while carrying out other activities. For example, designing requires people to brainstorm together in meetings, drawing on whiteboards, making notes, and using existing designs. Teaching involves talking with students as well as writing on the board and getting students to solve problems collaboratively. Various meeting- and decision- support systems have been developed to help people work or learn while talking together|
Social mechanisms in communication a ,  | (Continued) 112 |: Examples: Customized electronic meeting rooms have been built that support people in face-to-face meetings, via the use of networked workstations, large public displays, and shared software tools, together with various techniques to help decision-making. One of the earliest systems was the University of Arizona's Groupsystem (see Figure 4.2)|
Social mechanisms in communication a ,  | (Continued) 112 |: -- - - - White board Wall mounted projectioiscreen White board Facilitator console and network file server \ Work / Figure 4.2 Schematic diagram of a group meeting room, showing relationship of workstation, whiteboards and video projector|
Social mechanisms in communication a , last: | (Continued) 112 |: (Continued) 113 |
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Networked classrooms: Recently schools and universities have realized the potential of using combinations of technologies to support learning. For example, wireless communication, portable devices and interactive whiteboards are being integrated in classroom settings to allow the teacher and students to learn and communicate with one another in novel interactive ways (see Figure 4.3)|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Argumentation tools which record the design rationale and other arguments used in a discussion that lead to decisions in a design (e.g. gIBIS, Conklin and Begeman, 1989). These are mainly designed for people working in the same physical location|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Shared authoring and drawing tools that allow people to work on the same document at the same time. This can be remotely over the web (e.g., shared authoring tools like Shredit) or on the same drawing surface in the same room using multiple mouse cursors (e.g., KidPad, Benford et al., 2000)|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|last: | New kinds of functionality: Allows new ways of collaboratively creating and editing documents|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|last: | Supports new forms of collaborative learning|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|last: | Integrates different kinds of tools|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Benefits: Supports talking while carrying out other activities at the same time, allowing multi-tasking-which is what happens in face-to-face settings|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|last: | Speed and efficiency: allows multiple people to be working an same document at same time|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them|last: | Greater awareness: allows users to see how one another are progressing in real time|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Problems: WYSIWIS (what you see is what I see): It can be difficult to see what other people are referring to when in remote locations, especially if the document is large and different users have different parts of the document on their screens|
Social mechanisms in communication a , 1 14 Chapter 4 Design for collaboration and communication Table 4.1 (Continued) Figure 4.3 An ACTIVBoard whiteboard developed by Promethean (U.K. company) that allows children to take control of the front-of-class display. This allows them to add comments and type in queries, rather than having to raise their hands and hope the teacher sees them| | Floor control: Users may want to work on the same piece of text or design, potentially resulting in file conflicts. These can be overcome by developing various social and technological floor-control policies. |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 1 15 I e of the earliest technological innovations (besides the telephone and telegraph) devel- 1 ed for supporting conversations at a distance was the videophone. Despite numerous attempts by the various phone companies to introduce them over the last 50 years (see Figure 4.4), they have failed each time. Why do you think this is so? 1 Comment One of the biggest problems with commercial videophones is that the bandwidth is too low, 1 resulting in poor resolution and slow refresh rate. The net effect is the display of unacceptable images: the person in the picture appears to move in sudden jerks; shadows are left behind when a speaker moves, and it is difficult to read lips or establish eye contact. There is also the social acceptability issue of whether people want to look at pocket-sized images of each other when talking. Sometimes you don't want people to see what state you are in or where you are|
Social mechanisms in communication a ,  | Another innovation has been to develop systems that allow people to communicate and interact with each other in ways not possible in the physical world|
Social mechanisms in communication a ,  | Rather than try to imitate or facilitate face to face communication (like the above systems), designers have tried to develop new kinds of interactions. For example, ClearBoard was developed to enable facial expressions of participants to be made visible to others by using a transparent board that showed their face to the others (Ishii et al., 1993). HyperMirror was designed to provide an environment in which the participants could feel they were in the same virtual place even Figure 4.4 (a) One of British Telecom's early videophones and (b) a recent mobile "visualphone" developed in Japan. |
Social mechanisms in communication a , last: | -- I 1 16 Chapter 4 Design for collaboration and communication I |
Social mechanisms in communication a , last: | 4.2 Social mechanisms in communication and collaboration 1 17 I |
Social mechanisms in communication a , 1 18 Chapter 4 Design for collaboration and communication Figure 4.7 Hypermirror in action, showing perception of virtual personal space. (a) A I woman is in one room (indicated by arrow on screen), (b) while a man and another woman in the other room chat to each other. They move apart when they notice they are "overlapping" her and (c) virtual personal space is established| | 1 18 Chapter 4 Design for collaboration and communication Figure 4.7 Hypermirror in action, showing perception of virtual personal space. (a) A I woman is in one room (indicated by arrow on screen), (b) while a man and another woman in the other room chat to each other. They move apart when they notice they are "overlapping" her and (c) virtual personal space is established|
Social mechanisms in communication a , 1 18 Chapter 4 Design for collaboration and communication Figure 4.7 Hypermirror in action, showing perception of virtual personal space. (a) A I woman is in one room (indicated by arrow on screen), (b) while a man and another woman in the other room chat to each other. They move apart when they notice they are "overlapping" her and (c) virtual personal space is established|last: | though they were physically in different places (Morikawa and Maesako, 1998)|
Social mechanisms in communication a , 1 18 Chapter 4 Design for collaboration and communication Figure 4.7 Hypermirror in action, showing perception of virtual personal space. (a) A I woman is in one room (indicated by arrow on screen), (b) while a man and another woman in the other room chat to each other. They move apart when they notice they are "overlapping" her and (c) virtual personal space is established| | Mirror reflections of people in different places were synthesized and projected onto a single screen, so that they appeared side by side in the same virtual space|
Social mechanisms in communication a , 1 18 Chapter 4 Design for collaboration and communication Figure 4.7 Hypermirror in action, showing perception of virtual personal space. (a) A I woman is in one room (indicated by arrow on screen), (b) while a man and another woman in the other room chat to each other. They move apart when they notice they are "overlapping" her and (c) virtual personal space is established| | In this way, the participants could see both themselves and others in the same seamless virtual space. Observations of people using the system showed how quickly they adapted to perceiving themselves and others in this way. For example, participants quickly became sensitized to the importance of virtua1,personal space, moving out of the way if they perceived they were overlapping someone else on the screen (see Figure 4.7)|
Coordination mechanisms Coordinati ,  | 4.2.3 Coordination mechanisms Coordination takes place when a group of people act or interact together to achieve something. For example, consider what is involved in playing a game of basketball. Teams have to work out how to play with each other and to plan a set of tactics that they think will outwit the other team. For the game to proceed both teams need to follow (and sometimes contravene) the rules of the game. An incredible amount of coordination is required within a team and between the competing teams in order to play|
Coordination mechanisms Coordinati ,  | In general, collaborative activities require us to coordinate with each other, whether playing a team game, moving a piano, navigating a ship, working on a large software project, taking orders and serving meals in a restaurant, constructing a bridge or playing tennis. In particular, we need to figure out how to interact with one another to progress with our various activities. To help us we use a number of coordinating mechanisms. Primarily, these include: verbal and non-verbal communication schedules, rules and conventions shared external representations |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 1 19 1 Verbal and non-verbal communication I When people are working closely together they talk to each other, issuing commands and letting others know how they are progressing with their part. For example, when two or more people are collaborating together, as in moving a piano, they shout to each other commands like "Down a bit, left a bit, now straight forward" to coordinate their actions with each other. As in a conversation, nods, shakes, winks, glances, and hand-raising are also used in combination with such coordination "talk" to emphasize and sometimes replace it|
Social mechanisms in communication a ,  | In formal settings, like meetings, explicit structures such as agendas, memos, and minutes are employed to coordinate the activity. Meetings are chaired, with secretaries taking minutes to record what is said and plans of actions agreed upon. Such minutes are subsequently distributed to members to remind them of what was agreed in the meeting and for those responsible to act upon what was agreed|
Social mechanisms in communication a ,  | For time-critical and routinized collaborative activities, especially where it is difficult to hear others because of the physical conditions, gestures are frequently used (radio-controlled communication systems may also be used). Various kinds of hand signals have evolved, with their own set of standardized syntax and semantics. For example, the arm and baton movements of a conductor coordinate the different players in an orchestra, while the arm and baton movements of a ground marshal at an airport signal to a pilot how to bring the plane into its allocated gate|
Social mechanisms in communication a ,  | uch communication is non-verbal? Watch a soap opera on the TV and turn down the and look at the kinds and frequency of gestures that are used. Are you able to understand what is going on? How do radio soaps compensate for not being able to use nonverbal gestures? How do people compensate when chatting online? Comment Soaps are good to watch for observing non-verbal behavior as they tend to be overcharged, with actors exaggerating their gestures and facial expressions to convey their emotions. It is often easy to work out what kind of scene is happening from their posture, body movement, gestures, and facial expressions. In contrast, actors on the radio use their voice a lot more, relying on intonation and surrounding sound effects to help convey emotions. When chatting online, people use emoticons and other specially evolved verbal codes|
Social mechanisms in communication a ,  | Schedules, rules, and conventions A common practice in organizations is to use various kinds of schedules to organize the people who are part of it. For example, consider how a university manages to coordinate the people within it with its available resources. A core task is allocating the thousands of lectures and seminars that need to be run each week with the substantially smaller number of rooms available. A schedule has to be devised |
Social mechanisms in communication a , 120 Chapter 4 Design for collaboration and communication that allows students to attend the lectures and seminars for their given courses, taking into account numerous rules and constraints. These include: A student cannot attend more than one lecture at a given time| | 120 Chapter 4 Design for collaboration and communication that allows students to attend the lectures and seminars for their given courses, taking into account numerous rules and constraints. These include: A student cannot attend more than one lecture at a given time|
Social mechanisms in communication a , 120 Chapter 4 Design for collaboration and communication that allows students to attend the lectures and seminars for their given courses, taking into account numerous rules and constraints. These include: A student cannot attend more than one lecture at a given time|last: | A professor cannot give more than one lecture or seminar at a given time|
Social mechanisms in communication a , 120 Chapter 4 Design for collaboration and communication that allows students to attend the lectures and seminars for their given courses, taking into account numerous rules and constraints. These include: A student cannot attend more than one lecture at a given time|last: | A room cannot be allocated to more than one seminar or lecture at a given time|
Social mechanisms in communication a , 120 Chapter 4 Design for collaboration and communication that allows students to attend the lectures and seminars for their given courses, taking into account numerous rules and constraints. These include: A student cannot attend more than one lecture at a given time|last: | Only a certain number of students can be placed in a room, depending on its size. |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 121 I Other coordinating mechanisms that are employed by groups working together are rules and conventions. These can be formal or informal. Formal rules, like the compulsory attendance of seminars, writing monthly reports, and filling in of timesheets, enable organizations to maintain order and keep track of what its members are doing. Conventions, like keeping quiet in a library or removing meal trays after finishing eating in a cafeteria, are a form of courtesy to others|
Social mechanisms in communication a ,  | I Shared external representations I Shared external representations are commonly used to coordinate people. We have already mentioned one example, that of shared calendars that appear on user's monitors as graphical charts, email reminders, and dialog boxes. Other kinds that are commonly used include forms, checklists, and tables. These are presented on public noticeboards or as part of other shared spaces. They can also be attached to documents and folders. They function by providing external information of who is working on what, when, where, when a piece of work is supposed to be finished, and who it goes to next. For example, a shared table of who has completed the checking of files for a design project (see Figure 4.8), provides the necessary information from which other members of the group can at a glance update their model of the current progress of that project. Importantly, such external representations can be readily updated by annotating. If a project is going to take longer than planned, this can be indicated on a chart or table by extending the line representing it, allowing others to see the change when they pass by and glance up at the whiteboard|
Social mechanisms in communication a ,  | Shared externalizations allow people to make various inferences about the changes or delays with respect to their effect on their current activities. Accordingly, Figure 4.8 An external representation used to coordinate collaborative work in the form of a print-out table showing who has completed the checking of files and who is down to do what. |
Social mechanisms in communication a , 122 Chapter 4 Design for collaboration and communication they may need to reschedule their work and annotate the shared workplan. In so doing, these kinds of coordination mechanisms are considered to be tangible, providing important representations of work and responsibility that can be changed and updated as and when needed| | 122 Chapter 4 Design for collaboration and communication they may need to reschedule their work and annotate the shared workplan. In so doing, these kinds of coordination mechanisms are considered to be tangible, providing important representations of work and responsibility that can be changed and updated as and when needed|
Designing collaborative technologi ,  | 4.2.4 Designing collaborative technologies to support coordination Shared calendars, electronic schedulers, project management tools, and workflow tools that provide interactive forms of scheduling and planning are some of the main kinds of collaborative technologies that have been developed to support coordination. A specific mechanism that has been implemented is the use of conventions|
Designing collaborative technologi ,  | For example, a shared workspace system (called POLITeam) that supported email and document sharing to allow politicians to work together at different sites introduced a range of conventions. These included how folders and files should be organized in the shared workspace. Interestingly, when the system was used in practice, it was found that the conventions were often violated (Mark, et al., 1997). For example, one convention that was set up was that users should always type in the code of a file when they were using it. In practice, very few people did this, as pointed out by an administrator: "They don't type in the right code. I must correct them. I must sort the documents into the right archive. And that's annoying"|
Designing collaborative technologi ,  | The tendency of people not to follow conventions can be due to a number of reasons. If following conventions requires additional work that is extraneous to the users' ongoing work, they may find it gets in the way. They may also perceive the convention as an unnecessary burden and "forget" to follow it all the time. Such "productive laziness" (Rogers, 1993) is quite common. A simple analogy to everyday life is forgetting to put the top back on the toothpaste tube: it is a very simple convention to follow and yet we are all guilty sometimes (or even all the time) of not doing this. While such actions may only take a tiny bit of effort, people often don't do them because they perceive them as tedious and unnecessary. However, the consequence of not doing them can cause grief to others|
Designing collaborative technologi ,  | When designing coordination mechanisms it is important to consider how socially acceptable they are to people. Failure to do so can result in the users not using the system in the way intended or simply abandoning it. A key part is getting the right balance between human coordination and system coordination. Too much system control and the users will rebel. Too little control and the system breaks down. Consider the example of file locking, which is a form of concurrency control|
Designing collaborative technologi ,  | This is used by most shared applications (e.g., shared authoring tools, file-sharing systems) to prevent users from clashing when trying to work on the same part of a shared document or file at the same time. With file locking, whenever someone is working on a file or part of it, it becomes inaccessible to others. Information about who is using the file and for how long may be made available to the other users, to show why they can't work on a particular file. When file-locking mechanisms are used in this way, however, they are often considered too rigid as a form of coordination, primarily because they don't let other users negotiate with the first user about when they can have access to the locked file. |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 123 A more flexible form of coordination is to include a social policy of floor control|
Social mechanisms in communication a ,  | Whenever a user wants to work on a shared document or file, he must initially request "the floor." If no one else is using the specified section or file at that time, then he is given the floor. That part of the document or file then becomes locked, preventing others from having access to it. If other users want access to the file, they likewise make a request for the floor. The current user is then notified and can then let the requester know how long the file will be in use. If not acceptable, the requester can try to negotiate a time for access to the file. This kind of coordination mechanism, therefore, provides more scope for negotiation between users on how to collaborate, rather than simply receiving a point-blank "permission denied" response from the system when a file is being used by someone else. |
Social mechanisms in communication a , 124 Chapter 4 Design for collaboration and communication Why are whiteboards so useful for coordinating projects? How might electronic whiteboards be designed to extend this practice? I Comment Physical whiteboards are very good as coordinating tools as they display information that is external and public, making it highly visible for everyone to see. Furthermore, the information can be easily annotated to show up-to-date modifications to a schedule. Whiteboards also have a gravitational force, drawing people to them. They provide a meeting place for people to discuss and catch up with latest developments| | 124 Chapter 4 Design for collaboration and communication Why are whiteboards so useful for coordinating projects? How might electronic whiteboards be designed to extend this practice? I Comment Physical whiteboards are very good as coordinating tools as they display information that is external and public, making it highly visible for everyone to see. Furthermore, the information can be easily annotated to show up-to-date modifications to a schedule. Whiteboards also have a gravitational force, drawing people to them. They provide a meeting place for people to discuss and catch up with latest developments|
Social mechanisms in communication a , 124 Chapter 4 Design for collaboration and communication Why are whiteboards so useful for coordinating projects? How might electronic whiteboards be designed to extend this practice? I Comment Physical whiteboards are very good as coordinating tools as they display information that is external and public, making it highly visible for everyone to see. Furthermore, the information can be easily annotated to show up-to-date modifications to a schedule. Whiteboards also have a gravitational force, drawing people to them. They provide a meeting place for people to discuss and catch up with latest developments| | Electronic whiteboards have the added advantage that important information can be animated to make it stand out. Important information can also be displayed on multiple displays throughout a building and can be extracted from existing databases and software, thereby making the project coordinator's work much easier. The boards could also be used to support on-the-fly meetings in which individuals could use electronic pens to sketch out ideas-that could then be stored electronically. In such settings they could also be interacted with via wireless handheld computers, allowing information to be "scraped" off or "squirted onto the whiteboard|
Social mechanisms in communication a , 124 Chapter 4 Design for collaboration and communication Why are whiteboards so useful for coordinating projects? How might electronic whiteboards be designed to extend this practice? I Comment Physical whiteboards are very good as coordinating tools as they display information that is external and public, making it highly visible for everyone to see. Furthermore, the information can be easily annotated to show up-to-date modifications to a schedule. Whiteboards also have a gravitational force, drawing people to them. They provide a meeting place for people to discuss and catch up with latest developments| | I 4.2.5 Awareness mechanisms Awareness involves knowing who is around, what is happening, and who is talking with whom (Dourish and Bly, 1992). For example, when we are at a party, we move around the physical space, observing what is going on and who is talking to whom, eavesdropping on others' conversations and passing on gossip to others. A specific kind of awareness is peripheral awareness. This refers to a person's ability to maintain and constantly update a sense of what is going on in the physical and social context, through keeping an eye on what is happening in the periphery of their vision. This might include noting whether people are in a good or bad mood by the way they are talking, how fast the drink and food is being consumed, who has entered or left the room, how long someone has been absent, and whether the lonely guy in the corner is finally talking to someone-all while we are having a conversation with someone else. The combination of direct observations and peripheral monitoring keeps people informed and updated of what is happening in the world|
Social mechanisms in communication a , 124 Chapter 4 Design for collaboration and communication Why are whiteboards so useful for coordinating projects? How might electronic whiteboards be designed to extend this practice? I Comment Physical whiteboards are very good as coordinating tools as they display information that is external and public, making it highly visible for everyone to see. Furthermore, the information can be easily annotated to show up-to-date modifications to a schedule. Whiteboards also have a gravitational force, drawing people to them. They provide a meeting place for people to discuss and catch up with latest developments| | Similar ways of becoming aware and keeping aware take place in other contexts, such as a place of study or work. Importantly, this requires fathoming when is an appropriate time to interact with others to get and pass information on. Seeing a professor slam the office door signals to students that this is definitely not a good time to ask for an extension on an assignment deadline. Conversely, seeing teachers with beaming faces, chatting openly to other students suggests they are in a good mood and therefore this would be a good time to ask them if it would be all right to miss next week's seminar because of an important family engagement. The knowledge that someone is amenable or not rapidly spreads through a company, school, or other institution. People are very eager to pass on both good and bad news to others and will go out of their way to gossip, loitering in corridors, hanging around at the photocopier and coffee machine "spreading the word." |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 125 Figure 4.9 An external representation used to signal to others a person's availability|
Social mechanisms in communication a ,  | In addition to monitoring the behaviors of others, people will organize their work and physical environment to enable it to be successfully monitored by others|
Social mechanisms in communication a ,  | This ranges from the use of subtle cues to more blatant ones. An example of a subtle cue is when someone leaves their dorm or office door slightly ajar to indicate that they can be approached. A more blatant one is the complete closing of their door together with a "do not disturb" notice prominently on it, signaling to everyone that under no circumstances should they be disturbed (see Figure 4.9)|
Social mechanisms in communication a ,  | Overhearing and overseeing People who work closely together also develop various strategies for coordinating their work, based on an up-to-date awareness of what the others are doing. This is especially so for interdependent tasks, where the outcome of one person's activity is needed for others to be able to carry out their tasks. For example, when putting on a show, the performers will constantly monitor what one another is doing in order to coordinate their performance efficiently|
Social mechanisms in communication a , last: | The metaphorical expression "closely-knit teams" exemplifies this way of collaborating|
Social mechanisms in communication a ,  | People become highly skilled in reading and tracking what others are doing and the information they are attending to. A well-known study of this phenomenon is described by Christian Heath and Paul Luff (1992), who looked at how two controllers worked together in a control room in the London Underground|
Social mechanisms in communication a ,  | An overriding observation was that the actions of one controller were tied very closely to what the other was doing. One of the controllers was responsible for the movement of trains on the line (controller A), while the other was responsible for providing information to passengers about the current service (controller B). In many instances, it was found that controller B overheard what controller A was doing and saying, and acted accordingly-even though controller A had not said anything explicitly to him. For example, on overhearing controller A discussing a problem with a train driver over the in-cab intercom system, controller B inferred from the ensuing conversation that there was going to be a disruption to the service |
Social mechanisms in communication a , 126 Chapter 4 Design for collaboration and communication and so started announcing this to the passengers on the platform before controller A had even finished talking with the train driver. At other times, the two controllers keep a lookout for each other, monitoring the environment for actions and events which they might have not noticed but may be important for them to know about so that they can act appropriately| | 126 Chapter 4 Design for collaboration and communication and so started announcing this to the passengers on the platform before controller A had even finished talking with the train driver. At other times, the two controllers keep a lookout for each other, monitoring the environment for actions and events which they might have not noticed but may be important for them to know about so that they can act appropriately|
Social mechanisms in communication a , 126 Chapter 4 Design for collaboration and communication and so started announcing this to the passengers on the platform before controller A had even finished talking with the train driver. At other times, the two controllers keep a lookout for each other, monitoring the environment for actions and events which they might have not noticed but may be important for them to know about so that they can act appropriately| | hat do you think happens when one person of a closely knit team does not see or hear ething or misunderstands what has been said, while the others in the group assume they have seen, heard, or understood what has been said? Comment In such circumstances, the person is likely to carry on as normal. In some cases this will result in inappropriate behavior. Repair mechanisms will then need to be set in motion. The knowledgeable participants may notice that the other person has not acted in the manner expected. They may then use one of a number of subtle repair mechanisms, say coughing or glancing at something that needs attending to. If this doesn't work, they may then resort to explicitly stating aloud what had previously been signaled implicitly. Conversely, the unaware participant may wonder why the event hasn't happened and, likewise, look over at the other people, cough to get their attention or explicitly ask them a question|
Social mechanisms in communication a , 126 Chapter 4 Design for collaboration and communication and so started announcing this to the passengers on the platform before controller A had even finished talking with the train driver. At other times, the two controllers keep a lookout for each other, monitoring the environment for actions and events which they might have not noticed but may be important for them to know about so that they can act appropriately| | The kind of repair mechanism employed at a given moment will depend on a number of factors, including the relationship among the participants (e.g., whether one is more senior than the others-this determines who can ask what), perceived fault or responsibility for the breakdown and the severity of the outcome of not acting there and then on the new information|
Designing collaborative technologi ,  | 4.2.6 Designing collaborative technologies to support awareness The various observations about awareness have led system developers to consider how best to provide awareness information for people who need to work together but who are not in the same physical space. Various technologies have been employed along with the design of specific applications to convey information about what people are doing and the progress of their ongoing work. As mentioned previously, audio-video links have been developed to enable remote colleagues to keep in touch with one another. Some of these systems have also been developed to provide awareness information about remote partners, allowing them to find out what one another is doing. One of the earliest systems was Portholes, developed at Xerox PARC research labs (Dourish and Bly, 1992). The system presented regularly-updated digitized video images of people in their offices from a number of different locations (in the US and UK). These were shown in a matrix display on people's workstations. Clicking on one of the images had the effect of bringing up a dialog box providing further information about that individual (e.g., name, phone number) together with a set of lightweight action buttons (e.g., email the person, listen to a pre-recorded audio snippet). The system provided changing images of people throughout the day and night in their offices, letting others see at a glance whether they were in their offices, what they were working on, and who was around (see Figure 4.10). Informal evaluation of the |
Social mechanisms in communication a ,  | 4.2 Social mechanisms in communication and collaboration 127 Figure 4.10 A screen dump of Portholes, showing low resolution monochrome images from offices in the US and UK PARC sites. (Permission from Xerox Research Centre, Europe) set-up suggested that having access to such information led to a shared sense of community|
Social mechanisms in communication a ,  | The emphasis in the design of these early awareness systems was largely on supporting peripheral monitoring, allowing people to see each other and their progress. Dourish and Bellotti (1992) refer to this as shared feedback. More recent distributed awareness systems provide a different kind of awareness information|
Social mechanisms in communication a ,  | Rather than place the onus on participants to find out about each other, they have been designed to allow users to notify each other about specific kinds of events|
Social mechanisms in communication a ,  | Thus, there is less emphasis on monitoring and being monitored and more on explicitly letting others know about things. Notification mechanisms are also used to provide information about the status of shared objects and the progress of collaborative tasks|
Social mechanisms in communication a ,  | Hence, there has been a shift towards supporting a collective "stream of consciousness" that people can attend to when they want to, and likewise provide information for when they want to. An example of a distributed awareness system is Elvin, developed at the University of Queensland (Segall and Arnold, 1997), which provides a range of client services. A highly successful client is Tickertape, which is a lightweight instant messaging system, showing small color-coded messages that scroll from right to left across the screen (Fitzpatrick et a]., 1999). It has been most useful as a "chat" and local organizing tool, allowing people in different locations to effortlessly send brief messages and requests to the public tickertape display (see Figure 4.11). It has been used for a range of functions, including organizing shared |
Social mechanisms in communication a , 128 Chapter 4 Design for collaboration and communication Figure 4.1 1 The Tickertape and Tickerchat interface for ELVIN awareness service| | 128 Chapter 4 Design for collaboration and communication Figure 4.1 1 The Tickertape and Tickerchat interface for ELVIN awareness service|
Social mechanisms in communication a , 128 Chapter 4 Design for collaboration and communication Figure 4.1 1 The Tickertape and Tickerchat interface for ELVIN awareness service| | events (e.g. lunch dates), making announcements, and as an "always-on" communication tool for people working together on projects but who are not physically colocated|
Social mechanisms in communication a , 128 Chapter 4 Design for collaboration and communication Figure 4.1 1 The Tickertape and Tickerchat interface for ELVIN awareness service| | It is also often used as a means of mediating help between people. For example, when I was visiting the University of Queensland, I asked for help over Tickertape. Within minutes, I was inundated with replies from people logged onto the system who did not even know me. At the time, I was having problems working out the key mappings between the PC that I was using in Australia and a Unix editor I couldn't find a way of quitting from on a remote machine in the UK. The suggestions that appeared on Tickertape quickly led to a discussion among the participants, and within five minutes someone had come over to my desk and sorted the problem out for me! In addition to presenting awareness information as streaming text messages, more abstract forms of representation have been used. For example, a communication tool called Babble, developed at IBM (Erickson et al., 1999), provides a dynamic visualization of the participants in an ongoing chat-like conversation. A large 2D circle is depicted with colored marbles on each user's monitor. Marbles inside the circle convey those individuals active in the current conversation. Marbles outside the circle convey users involved in other conversations. The more active a participant is in the conversation, the more the corresponding marble is moved towards the center of the circle. Conversely, the less engaged a person is in the ongoing conversation, the more the marble moves towards the periphery of the circle (see Figure 4.12)|
Social mechanisms in communication a , 0 Figure 4.12 The Babble interface, with - dynamic visualization of participants in ongoing conversation. | | 0 Figure 4.12 The Babble interface, with - dynamic visualization of participants in ongoing conversation. |
~thno~ra~hic studies of collaboratio ,  | 4.3 ~thno~ra~hic studies of collaboration and communication 1 29 4.3 Ethnographic studies of collaboration and communication One of the main approaches to informing the design of collaborative technologies that takes into account social concerns is carrying out an ethnographic study (a type of field study). Observations of the setting, be it home, work, school, public place, or other setting, are made, examining the current work and other collaborative practices people engage in. The way existing technologies and everyday artifacts are used is also analyzed. The outcome of such studies can be very illuminating, revealing how people currently manage in their work and everyday environments. They also provide a basis from which to consider how such existing settings might be improved or enhanced through the introduction of new technologies, and can also expose problematic assumptions about how collaborative technologies will or should be used in a setting (for more on how to use ethnography to inform design, see Chapter 9; how to do ethnography is covered in Chapter 12)|
~thno~ra~hic studies of collaboratio ,  | Many studies have analyzed in detail how people carry out their work in different settings (Plowman et al., 1995). The findings of these studies are used both to inform the design of a specific system, intended for a particular workplace, and more generally, to provide input into the design of new technologies. They can also highlight problems with existing system design methods. For example, an early study by Lucy Suchman (1983) looked at the way existing office technologies were being designed in relation to how people actually worked. She observed what really happened in a number of offices and found that there was a big mismatch between the way work was actually accomplished and the way people were supposed to work using the office technology provided. She argued that designers would be much better positioned to develop systems that could match the way people behave and use technology, if they began by considering the actual details of work practice|
~thno~ra~hic studies of collaboratio ,  | In her later, much-cited study of how pairs of users interacted with an interactive help system-intended as a facility for using with a photocopier-Suchman (1987) again stressed the point that the design of interactive systems would greatly benefit from analyses that focused on the unique details of the user's particular situation-rather than being based on preconceived models of how people ought to (and will) follow instructions and procedures. Her detailed analysis of how the help system was unable to help users in many situations, highlighted the inadequacy of basing the design of an interactive system purely on an abstract user model|
~thno~ra~hic studies of collaboratio ,  | Since Suchman's seminal work, a large number of ethnographic studies have examined how work gets done in a range of companies (e.g., fashion, design, multimedia, newspapers) and local government. Other settings have also recently come under scrutiny to see how technologies are used and what people do at home, in public places, in schools, and even cyberspace. Here, the objective has been to understand better the social aspects of each setting and then to come up with implications for the design of future technologies that will support and extend these. For more on the way user studies can inform future technologies, see the interview at the end of this chapter with Abigail Sellen. |
~thno~ra~hic studies of collaboratio , 130 Chapter 4 Design for collaboration and communication 4.4 Conceptual frameworks A number of conceptual frameworks of the "social" have been adapted from other disciplines, like sociology and anthropology. As with the conceptual frameworks derived from cognitive approaches, the aim has been to provide analytic frameworks and concepts that are more amenable to design concerns. Below, we briefly describe two well known approaches, that have quite distinct origins and ways of informing interaction design. These are: Languagelaction framework Distributed cognition The first describes how a model of the way people communicate was used to inform the design of a collaborative technology. The second describes a theory that is used primarily to analyze how people carry out their work, using a variety of technologies| | 130 Chapter 4 Design for collaboration and communication 4.4 Conceptual frameworks A number of conceptual frameworks of the "social" have been adapted from other disciplines, like sociology and anthropology. As with the conceptual frameworks derived from cognitive approaches, the aim has been to provide analytic frameworks and concepts that are more amenable to design concerns. Below, we briefly describe two well known approaches, that have quite distinct origins and ways of informing interaction design. These are: Languagelaction framework Distributed cognition The first describes how a model of the way people communicate was used to inform the design of a collaborative technology. The second describes a theory that is used primarily to analyze how people carry out their work, using a variety of technologies|
The language/action framework The  ,  | 4.4.1 The language/action framework The basic premise of the language/action framework is that people act through language (Winograd and Flores, 1986). It was developed to inform the design of systems to help people work more effectively through improving the way they communicate with one another. It is based on various theories of how people use language in their everyday activities, most notably speech act theory|
The language/action framework The  ,  | Speech act theory is concerned with the functions utterances have in conversations (Austin, 1962; Searle, 1969). A common function is a request that is asked indirectly (known as an indirect speech act). For example, when someone says, "It's hot in here" they may really be asking if it would be OK to open the window because they need some fresh air. Speech acts range from formalized statements (e.g., I hereby declare you man and wife) to everyday utterances (e.g., how about dinner?)|
The language/action framework The  ,  | There are five categories of speech acts: Assertives-commit the speaker to something being the case Commissives--commit the speaker to some future action Declarations-pronounce something has happened Directives-get the listener to do something Expressives-express a state of affairs, such as apologizing or praising someone Each utterance can vary in its force. For example, a command to do something has quite a different force from a polite comment about the state of affairs|
The language/action framework The  ,  | The languagelaction approach was developed further into a framework called conversations for action (CfA). Essentially, this framework describes the sequence of actions that can follow from a speaker making a request of someone else. It depicts a conversation as a kind of "dance" (see Figure 4.13) involving a series of steps that are seen as following the various speech acts. Different dance steps ensue depending on the speech acts followed. The most straightforward kind of dance involves progressing from state 1 through to state 5 of the conversation, |
Conceptual frameworks 1 3 1 - A: Dec ,  | 4.4 Conceptual frameworks 1 3 1 - A: Declare / A: Reject A: Withdraw 6: Withdraw \ 1 Figure 4.1 3 Conversation for action (CfA) diagram (from Winograd and Flores, 1986, p. 65)|
Conceptual frameworks 1 3 1 - A: Dec ,  | in a linear order. For example, A (state 1) may request B to do homework (state 2), B may promise to do it after she has watched a TV program (state 3), B may then report back to A that the homework is done (state 4) and A, having looked at it, declares that this is the case (state 5). In reality, conversation dances tend to be more complex. For example, A may look at the homework and see that it is very shoddy and request that B complete it properly. The conversation is thus moved back a step. B may promise to do the homework but may in fact not do it at all, thereby canceling their promise (state 7), or A may say that B doesn't need to do it any more (state 9). B may also suggest an alternative, like cooking dinner (moving to state 6)|
Conceptual frameworks 1 3 1 - A: Dec ,  | The CfA framework was used as the basis of a conceptual model for a commercial software product called the Coordinator. The goal was to develop a system to facilitate communication in a variety of work settings, like sales, finance, general management, and planning. The Coordinator was designed to enable electronic messages to be sent between people in the form of explicit speech acts. When sending someone a request, say "Could you get the report to me", the sender was also required to select the menu option "request." This was placed in the subject header of the message, thereby explicitly specifying the nature of the speech act. Other speech-act options included offer, promise, inform, and question (see Figure 4.14)|
Conceptual frameworks 1 3 1 - A: Dec ,  | The system also asked the user to fill in the dates by which the request should be completed. Another user receiving such a message had the option of responding with another labeled speech act. These included: acknowledge promise counter-offer decline free form |
Conceptual frameworks 1 3 1 - A: Dec ,  | - - - - - - 132 Chapter 4 Design for collaboration and communication Table A: Menu items for initiating a new conversation|
Conceptual frameworks 1 3 1 - A: Dec , last: | Request Sender wants receiver to do something|
Conceptual frameworks 1 3 1 - A: Dec , last: | Offer Sender offers to do something, pending acceptance|
Conceptual frameworks 1 3 1 - A: Dec , last: | Promise Sender promises to do something (request is implicit)|
Conceptual frameworks 1 3 1 - A: Dec , last: | What if Opens a joint exploration of a space of possibilities|
Conceptual frameworks 1 3 1 - A: Dec , last: | Inform Sender provides information|
Conceptual frameworks 1 3 1 - A: Dec , last: | Question A request for information|
Conceptual frameworks 1 3 1 - A: Dec , last: | Note A simple exchange of messages (as in ordinary E-mail)|
Conceptual frameworks 1 3 1 - A: Dec , last: | Figure 4.1 4 Menu items for initiating a conversation|
Conceptual frameworks 1 3 1 - A: Dec ,  | Thus, the Coordinator was designed to provide a straightforward conversational structure, allowing users to make clear the status of their work and, likewise, to be clear about the status of others' work in terms of various commitments|
Conceptual frameworks 1 3 1 - A: Dec ,  | To reiterate, a core rationale for developing this system was to try to improve people's ability to communicate more effectively. Earlier research had shown how communication could be improved if participants were able to distinguish among the kinds of commitments people make in conversation and also the time scales for achieving them. These findings suggested to Winograd and Flores that they might achieve their goal by designing a communication system that enabled users to develop a better awareness of the value of using "speech acts." Users would do this by being explicit about their intentions in their email messages to one another|
Conceptual frameworks 1 3 1 - A: Dec ,  | Normally, the application of a theory backed up with empirical research is regarded as a fairly innocuous and systematic way of informing system design. However, in this instance it opened up a very large can of worms. Much of the research community at the time was incensed by the assumptions made by Winograd and Flores in applying speech act theory to the design of the Coordinator System|
Conceptual frameworks 1 3 1 - A: Dec ,  | Many heated debates ensued, often politically charged. A major concern was the extent to which the system prescribed how people should communicate. It was pointed out that asking users to specify explicitly the nature of their implicit speech acts was contrary to what they normally do in conversations. Forcing people to communicate in such an artificial way was regarded as highly undesirable. While some people may be very blatant about what they want doing, when they want it done by, and what they are prepared to do, most people tend to use more subtle and indirect forms of communication to advance their collaborations with others|
Conceptual frameworks 1 3 1 - A: Dec ,  | The problem that Winograd and Flores came up against was people's resistance to radically change their way of communicating|
Conceptual frameworks 1 3 1 - A: Dec ,  | Indeed, many of the people who tried using the Coordinator System in their work organizations either abandoned it or resorted to using only the free-form message facility, which had no explicit demands associated with it. In these con- |
Conceptual frameworks 133 texts, the ,  | 4.4 Conceptual frameworks 133 texts, the system failed because it was asking too much of the users to change the way they communicated and worked. However, it should be noted that the Coordinator was successful in other kinds of organizations, namely those that are highly structured and need a highly structured system to support them. In particular, the most successful use of the Coordinator and its successors has been in organizations, like large manufacturing divisions of companies, where there is a great need for considerable management of orders and where previous support has been mainly in the form of a hodgepodge of paper forms and inflexible task-specific data processing applications (Winograd, 1994). 1 4.4.2 Distributed cognition In the previous chapter we described how traditional approaches to modeling cognition have focussed on what goes on inside one person's head. We also mentioned that there has been considerable dissatisfaction with this approach, as it ignores how people interact with one another and their use of artifacts and external representations in their everyday and working activities. To redress this situation, Ed Hutchins and his colleagues developed the distributed cognition approach as a new paradigm for conceptualizing human work activities (e.g., Hutchins, 1995) (see Figure 4.15)|
Conceptual frameworks 133 texts, the , last: | The distributed cognition approach describes what happens in a cognitive system|
Conceptual frameworks 133 texts, the ,  | Typically, this involves explaining the interactions among people, the artifacts processes / Inputs (sensory) Outputs (motor behavior) representations Figure 4.15 Comparison of traditional and distributed cognition approaches. |
Conceptual frameworks 133 texts, the , 134 Chapter 4 Design for collaboration and communication I I Air traffic controller (ATC) control center alert aob Propagation of representational states: 1 ATC gives clearance to pilot to fly to higher altitude (verbal) 2 Pilot changes altitude meter (mental and physical) 3 Captain observes pilot (visual) 4 Captain flies to higher altitude (mental and physical) Figure 4.1 6 A cognitive system in which information is propagated through different media| | 134 Chapter 4 Design for collaboration and communication I I Air traffic controller (ATC) control center alert aob Propagation of representational states: 1 ATC gives clearance to pilot to fly to higher altitude (verbal) 2 Pilot changes altitude meter (mental and physical) 3 Captain observes pilot (visual) 4 Captain flies to higher altitude (mental and physical) Figure 4.1 6 A cognitive system in which information is propagated through different media|
Conceptual frameworks 133 texts, the , 134 Chapter 4 Design for collaboration and communication I I Air traffic controller (ATC) control center alert aob Propagation of representational states: 1 ATC gives clearance to pilot to fly to higher altitude (verbal) 2 Pilot changes altitude meter (mental and physical) 3 Captain observes pilot (visual) 4 Captain flies to higher altitude (mental and physical) Figure 4.1 6 A cognitive system in which information is propagated through different media| | they use, and the environment they are working in. An example of a cognitive system is an airline cockpit, where a top-level goal is to fly the plane. This involves: the pilot, co-pilot and air traffic controller interacting with one another the pilot and co-pilot interacting with the instruments in the cockpit the pilot and co-pilot interacting with the environment in which the plane is flying (e.g., sky, runway)|
Conceptual frameworks 133 texts, the , 134 Chapter 4 Design for collaboration and communication I I Air traffic controller (ATC) control center alert aob Propagation of representational states: 1 ATC gives clearance to pilot to fly to higher altitude (verbal) 2 Pilot changes altitude meter (mental and physical) 3 Captain observes pilot (visual) 4 Captain flies to higher altitude (mental and physical) Figure 4.1 6 A cognitive system in which information is propagated through different media| | A primary objective of the distributed cognition approach is to describe these interactions in terms of how information is propagated through different media. By this is meant how information is represented and re-represented as it moves across individuals and through the array of artifacts that are used (e.g., maps, instrument readings, scribbles, spoken word) during activities. These transformations of information are referred to as changes in representational state|
Conceptual frameworks 133 texts, the , 134 Chapter 4 Design for collaboration and communication I I Air traffic controller (ATC) control center alert aob Propagation of representational states: 1 ATC gives clearance to pilot to fly to higher altitude (verbal) 2 Pilot changes altitude meter (mental and physical) 3 Captain observes pilot (visual) 4 Captain flies to higher altitude (mental and physical) Figure 4.1 6 A cognitive system in which information is propagated through different media| | This way of describing and analyzing a cognitive activity contrasts with other cognitive approaches (e.g., the information processing model) in that it focuses not on what is happening inside the heads of each individual but on what is happening across individuals and artifacts. For example, in the cognitive system of the cockpit, a number of people and artifacts are involved in the activity of "flying to a higher altitude." The air traffic controller initially tells the co-pilot when it is safe to fly to a higher altitude. The co-pilot then alerts the pilot, who is flying the plane, by moving a knob on the instrument panel in front of them, indicating that it is now safe to fly (see Figure 4.16). Hence, the information concerning this activity is transformed |
Conceptual Frameworks 135 through di ,  | 4.4 Conceptual Frameworks 135 through different media (over the radio, through the co-pilot, and via a change in the position of an instrument)|
Conceptual Frameworks 135 through di ,  | A distributed cognition analysis typically involves examining: the distributed problem solving that takes place (including the way people work together to solve a problem) the role of verbal and non-verbal behavior (including what is said, what is implied by glances, winks, etc., and what is not said) the various coordinating mechanisms that are used (e.g., rules, procedures) the various communicative pathways that take place as a collaborative activity progresses how knowledge is shared and accessed I In addition, an important part of a distributed cognition analysis is to identify I the problems, breakdowns, and concomitant problem-solving processes that emerge to deal with them. The analysis can be used to predict what would happen to the way information is propagated through a cognitive system, using a different arrangement of technologies and artifacts and what the consequences of this would be for the current work setting. This is especially useful when designing and evaluating new collaborative technologies. |
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Assignment The aim of this design activity is for you to analyze the design of a collaborative virtual environment (CVE) with respect to how it is designed to support collaboration and communication|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory|last: | Visit an existing CVE (many are freely downloadable) such as V-Chat (vchat.microsoft|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | com), one of the many Worlds Away environments (www.worlds.net), or the Palace (www.communities.com). Try to work out how they have been designed to take into account the following: (a) General social issues What is the purpose of the CVE? What kinds of conversation mechanisms are supported? What kinds of coordination mechanisms are provided? What kinds of social protocols and conventions are used? What kinds of awareness information is provided? Does the mode of communication and interaction seem natural or awkward? (b) Specific interaction design issues What form of interaction and communication is supported (e.g., textlaudiolvideo)? What other visualizations are included? What information do they convey? How do users switch between different modes of interaction (e.g., exploring and chatting)? Is the switch seamless? Are there any social phenomena that occur specific to the context of the CVE that wouldn't happen in face to face settings (e.g., flaming)? (c) Design issues What other features might you include in the CVE to improve communication and collaboration? |
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Further reading 137 Summary In this chapter we have looked at some core aspects of sociality, namely communication and collaboration. We examined the main social mechanisms that people use in different settings in order to collaborate. A number of collaborative technologies have been designed to support and extend these mechanisms. We looked at representative examples of these, highlighting core interaction design concerns. A particular concern is social acceptability that is critical for the success or failure of technologies intended to be used by groups of people working or communicating together. We also discussed how ethnographic studies and theoretical frameworks can play a valuable role when designing new technologies for work and other settings|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Key points Social aspects are the actions and interactions that people engage in at home, work, school, and in public|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | The three main kinds of social mechanism used to coordinate and facilitate social aspects are conversation, coordination, and awareness|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory|last: | Talk and the way it is managed is integral to coordinating social activities|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Many kinds of computer-mediated communication systems have been developed to enable people to communicate with one another when in physically different locations|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | External representations, rules, conventions, verbal and non-verbal communication are all used to coordinate activities among people|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | It is important to take into account the social protocols people use in face to face collaboration when designing collaborative technologies|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Keeping aware of what others are doing and letting others know what you are doing are important aspects of collaborative working and socializing|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Ethnographic studies and conceptual frameworks play an important role in understanding the social issues to be taken into account in designing collaborative systems|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Getting the right level of control between users and system is critical when designing collaborative systems|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Further reading DIX, A., FINLAY, J., ABOWD, G., AND BEALE, R. (1998) Human-Computer Interaction. Upper Saddle River, NJ: Prentice Hall. This textbook provides a comprehensive overview of groupware systems and the field of CSCW in Chapters 13 and 14|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | ENGESTROM, Y AND MIDDLETON, D. (1996) (eds.) Cognition and Communication at Work. Cambridge: Cambridge University Press. A good collection of classic ethnographic studies that examine the relationship be- tween different theoretical perspectives and field studies of work practices|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | PREECE, J. (2000) Online Communities: Designing Usability, Supporting Sociability. New York: John Wiley and Sons|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory|last: | This book combines usability and sociability issues to do with designing online communities|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | BAECKER, R. M., GRUDIN, J., BUXTON, W. A. S., AND GREENBERG, S. (eds.) (1995) Readings in Human-Computer Interaction: Toward the Year 2000, (second edition) San Francisco, Ca.: Morgan Kaufmann, 1995|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | BAECKER, R. M. (ed.) (1993) Readings in Groupware and Computer-Supported Cooperative Work: Assisting HumanHuman Collaboration, San Mateo, Ca.: Morgan Kaufmann|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | These two collections of readings include a number of representative papers from the field of CSCW, ranging from social to system architecture issues|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | MUNRO, A.J., HOOK, K. AND BENYON, D.(eds.) (1999) Social Navigation of Information Space. New York: Springer Verlag|
Conceptual Frameworks 135 through di , 136 Chapter 4 Design For collaboration and communication There are several other well known conceptual frameworks that are used to analyze how people collaborate and communicate, including activity theory, ethnomethodology, situated action and common ground theory| | Provides a number of illuminating papers that explore how people navigate information spaces in real and virtual worlds and how people interact with one another in them. |
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | She has a background in coanitive science and " human factors engineering, having obtained her doctorate at the University of California, Son Diego. Prior to this Abiaail worked at Xerox Research Labs in Cambridge, UK, and Apple Computer Inc. She has also worked as an academic researcher at the Computer Systems Research Institute at the University of Toronto, Canada and the Applied Psychology Unit in Cambridge, UK. She has written widely on the social and cognitive aspects of paper use, video conferencing, input devices, human memory, and human error, ail with an eye to the design of new technologies|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: Could you tell me what you do at Hewlett Packard Research Labs? AS: Sure, I've been at HP Labs for a number of years now as a member of its User Studies and Design Group. This is a smallish group consisting of five social scientists and three designers. Our work can best be described as doing three things: we do projeqts that are group-led around particular themes, likt for example, how people use digital music or how people capture documents using scanning technology. We do consulting work for development teams at HP, and thirdly, we do a little bit of our own individual work, like writing papers and books, and giving talks|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: Right. Could you tell me about user studies, what they are and why you consider them important? AS: OK. User studies essentially involve looking at how people behave either in their natural habitats or in the laboratory, both with old technologies and with new ones. I think there are many different questions that these kinds of studies can help you answer. Let me name a few. One question is: who is going to be the potential user for a particular device or service that you are thinking of developing? A second question-which I think is key-is, what is the potential value of a particular product for a user? Once we know this, we can then ask, for a particular situation or task, what features do we want to deliver and how best should we deliver those features? This includes, for example, what would the interface look like? Finally, I think user studies are important to understand how users' lives may change and how they will be affected by introducing a new technology. This has to take into account the social, physical, and technological context into which it will be introduced|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: So it sounds like you have a set of general questions you have in mind when you do a user study. Could you now describe how you would do a user study and what kinds of things you would be looking for? AS: Well, I think there are two different classes of user studies and both are quite different in the ways you go about them. There are evaluation studies, where we take a concept, a prototype or even a developed technology and look at how it is used and then try to modify or improve it based on what we find|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | The second class of user studies is more about discovering what people's unmet needs may be. This means trying to develop new concepts and ideas for things that people may never have thought of before. This is difficult because you can't necessarily just ask people what they would like or what they would use. Instead, you have to make inferences from studying people in different situations and try to understand from this what they might need or value|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: In the book we mention the importance of taking into account social aspects, such as awareness of others, how people communicate with each other and so on. Do you think these issues are important when you are doing these two kinds of user studies? AS: Well, yes, and in particular I think social aspects really are playing to that second class of user study I mentioned where you are trying to discover what people's unmet needs or requirements may be. Here you are trying to get rich descriptions about what people do in the context of their everyday liveswhether this is in their working lives, their home lives, or lives on the move. I'd say getting the social aspects understood is often very important in trying to understand what value new products and services might |
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | Interview 139 bring to people's day-to-day activities, and also how they would fit into those existing activities|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: And what about cognitive aspects, such as how people carry out their tasks, what they remember, what they are bad at remembering? Is that also important to look into when you are doing these kinds of studies? AS: Yes, if you think about evaluation studies, then cognitive aspects are extremely important. Looking at cognitive aspects can help you understand the nature of the user interaction, in particular what processes are going on in their heads. This includes issues like learning how users perceive a device and how they form a mental model of how something works. Cognitive issues are especially important to consider when we want to contrast one device with another or think about new and better ways in which we might design an interface|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: I wonder if you could describe to me briefly one of your recent studies where you have looked at cognitive and social aspects|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | AS: How about a recent study we did to do with building devices for reading digital documents? When we first set out on this study, before we could begin to think about how to build such devices, we had to begin by asking, "What do we mean by reading?" It turned out there was not a lot written about the different ways people read in their day-to-day lives. So the first thing we did was a very broad study looking at how people read in work situations. The technique we used here was a combination of asking people to fill out a diary about their reading activities during the course of a day and interviewing them at the end of each day. The interviews were based around what was written in the diaries, which turned out to be a good way of unpacking more details about what people had been doing|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | That initial study allowed us to categorize all the different ways people were reading. What we found out is that actually you can't talk about reading in a generic sense but that it falls into at least 10 different categories. For example, sometimes people skim read, sometimes they read for the purpose of writing something, and sometimes they read very reflectively and deeply, marking up their documents as they go|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | What quickly emerged from this first study was that if you're designing a device for reading it might look very different depending on the kind of reading the users are doing. So, for example, if they're reading by themselves, the screen size and viewing angle may not be as important as if they're reading with others. If they're skim reading, the ability to quickly flick through pages is important. And if they're reading and writing, then this points to the need for a penbased interface. All of these issues become important design considerations|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | This study then led to the development of some design concepts and ideas for new kinds of reading devices. At this stage we involved designers to develop different "props" to get feedback and reactions from potential users. A prop could be anything from a quick sketch to an animation to a styrofoam 3D mockup. Once you have this initial design work, you can then begin to develop working prototypes and test them with realistic tasks in both laboratory and natural settings. Some of this work we have already completed, but the project has had an impact on several different research and development efforts|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: Would you say that user studies are going to become an increasingly important part of the interaction design process, especially as new technologies like ubiquitous computing and handheld devices come into being-and where no one really knows what applications to develop? AS: Yes. I think the main contribution of user studies, say, 15 years ago was in the area of evaluation and usability testing. I think that role is changing now in that user studies researchers are not only those who evaluate devices and interfaces but also those who develop new concepts. Also, another important development is a change in the way the research is carried out. More and more I am finding that teams are drawing together people from other disciplines, such as sociologists, marketing people, designers, and people from business and technology development|
Conceptual Frameworks 135 through di , 138 Chapter 4 Design for collaboration and communication Abigail Sellen is a senior researcher at Hewlett Packard Labs in Bristol, UK. Her work involves carrying out user studies to inform the development of future products, including appliances and web-based services| | YR: So they are essentially working as a multidisciplinary team. Finally, what is it like to work in a large organization like HP, with so many different departments? AS: One thing about working for a large organization is that you get a lot of variety in what you can do. You can pick and choose to some extent and, depending on the organization, don't have to be tied to a particular product. If, on the other hand, you work |
Conceptual Frameworks 135 through di , 140 Chapter 4 Design for collaboration and communication for a smaller organization such as a start-up com- teams. They put huge pressures on you because they pany, inevitably there is lots of pressure to get things have huge pressures on them. You really have to out the door quickly. Things are often very focused. work at effectively incorporating user studies findWhether large or small, however, I think one of the ings into the development process. This can be inhardest things I have found in working for corporate credibly challenging, but it's also satisfying to have research is learning to work with the development an impact on real products. | | 140 Chapter 4 Design for collaboration and communication for a smaller organization such as a start-up com- teams. They put huge pressures on you because they pany, inevitably there is lots of pressure to get things have huge pressures on them. You really have to out the door quickly. Things are often very focused. work at effectively incorporating user studies findWhether large or small, however, I think one of the ings into the development process. This can be inhardest things I have found in working for corporate credibly challenging, but it's also satisfying to have research is learning to work with the development an impact on real products. |
Conceptual Frameworks 135 through di , 140 Chapter 4 Design for collaboration and communication for a smaller organization such as a start-up com- teams. They put huge pressures on you because they pany, inevitably there is lots of pressure to get things have huge pressures on them. You really have to out the door quickly. Things are often very focused. work at effectively incorporating user studies findWhether large or small, however, I think one of the ings into the development process. This can be inhardest things I have found in working for corporate credibly challenging, but it's also satisfying to have research is learning to work with the development an impact on real products. | | Understanding how interfaces affect users 5.1 Introduction 5.2 What are affective aspects? 5.3 Expressive interfaces 5.4 User frustration 5.5 A debate: the application of anthropomorphism to interaction design 5.6 Virtual characters: agents 5.6.1 Kinds of agents 5.6.2 General design concerns: believability of virtual characters 5.1 Introduction An overarching goal of interaction design is to develop interactive systems that elicit positive responses from users, such as feeling at ease, being comfortable, and enjoying the experience of using them. More recently, designers have become interested in how to design interactive products that elicit specific kinds of emotional responses in users, motivating them to learn, play, be creative, and be social. There is also a growing concern with how to design websites that people can trust, that make them feel comfortable about divulging personal information or making a purchase|
Conceptual Frameworks 135 through di , 140 Chapter 4 Design for collaboration and communication for a smaller organization such as a start-up com- teams. They put huge pressures on you because they pany, inevitably there is lots of pressure to get things have huge pressures on them. You really have to out the door quickly. Things are often very focused. work at effectively incorporating user studies findWhether large or small, however, I think one of the ings into the development process. This can be inhardest things I have found in working for corporate credibly challenging, but it's also satisfying to have research is learning to work with the development an impact on real products. |last: | We refer to this newly emerging area of interaction design as affective aspects|
Conceptual Frameworks 135 through di , 140 Chapter 4 Design for collaboration and communication for a smaller organization such as a start-up com- teams. They put huge pressures on you because they pany, inevitably there is lots of pressure to get things have huge pressures on them. You really have to out the door quickly. Things are often very focused. work at effectively incorporating user studies findWhether large or small, however, I think one of the ings into the development process. This can be inhardest things I have found in working for corporate credibly challenging, but it's also satisfying to have research is learning to work with the development an impact on real products. | | In this chapter we look at how and why the design of computer systems cause certain kinds of emotional responses in users. We begin by looking in general at expressive interfaces, examining the role of an interface's appearance on users and how it affects usability. We then examine how computer systems elicit negative responses, e.g., user frustration. Following this, we present a debate on the controversial topic of anthropomorphism and its implications for designing applications to have human-like qualities. Finally, we examine the range of virtual characters designed to motivate people to learn, buy, listen, etc., and consider how useful and appropriate they are. |
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people| | 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people|last: | Outline the problems of user frustration and how to reduce them|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people|last: | Debate the pros and cons of applying anthropomorphism in interaction design|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people|last: | Assess the believability of different kinds of agents and virtual characters|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people|last: | Enable you to critique the persuasive impact of e-commerce agents on customers|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people| | What are affective aspects? In general, the term "affective" refers to producing an emotional response. For example, when people are happy they smile. Affective behavior can also cause an emotional response in others. So, for example, when someone smiles it can cause others to feel good and smile back. Emotional skills, especially the ability to express and recognize emotions, are central to human communication. Most of us are highly skilled at detecting when someone is angry, happy, sad, or bored by recognizing their facial expressions, way of speaking, and other body signals. We are also very good at knowing what emotions to express in given situations. For example, when someone has just heard they have failed an exam we know it is not a good time to smile and be happy. Instead we try to empathize|
Conceptual Frameworks 135 through di , 142 Chapter 5 Understanding how interfaces affect users The main aims of this chapter are to: Explain what expressive interfaces are and the affects they can have on people| | It has been suggested that computers be designed to recognize and express emotions in the same way humans do (Picard, 1998). The term coined for this approach is "affective computing". A long-standing area of research in artificial intelligence and artificial life has been to create intelligent robots and other computer-based systems that behave like humans and other creatures. One wellknown project is MIT's COG, in which a number of researchers are attempting to build an artificial two-year-old. One of the offsprings of COG is Kismet (Breazeal, 1999), which has been designed to engage in meaningful social interactions with humans (see Figure 5.1). Our concern in this chapter takes a different approach: how can interactive systems be designed (both deliberately and inadvertently) to make people respond in certain ways? Figure 5.1 Kismet the robot expressing surprise, anger, and happiness. |
Expressive interfaces 143 5.3 Expres ,  | 5.3 Expressive interfaces 143 5.3 Expressive interfaces A well-known approach to designing affective interfaces is to use expressive icons and other graphical elements to convey emotional states. These are typically used to indicate the current state of a computer. For example, a hallmark of the Apple computer is the icon of a smiling Mac that appears on the screen when the machine is first started (see Figure 5.2(a)). The smiling icon conveys a sense of friendliness, inviting the user to feel at ease and even smile back. The appearance of the icon on the screen can also be very reassuring to users, indicating that their computer is working fine. This is especially useful when they have just rebooted the computer after it has crashed and where previous attempts to reboot have failed (usually indicated by a sad icon face-see Figure 5.2(b)). Other ways of conveying the status of a system are through the use of: dynamic icons, e.g., a recycle bin expanding when a file is placed into it animations, e.g., a bee flying across the screen indicating that the computer is doing something, like checking files spoken messages, using various kinds of voices, telling the user what needs to be done various sounds indicating actions and events (e.g. window closing, files being dragged, new email arriving) One of the benefits of these kinds of expressive embellishments is that they provide reassuring feedback to the user that can be both informative and fun|
Expressive interfaces 143 5.3 Expres ,  | The style of an interface, in terms of the shapes, fonts, colors, and graphical elements that are used and the way they are combined, influences how pleasurable it is to interact with. The more effective the use of imagery at the interface, the more engaging and enjoyable it can be (Mullet and Sano, 1995). Conversely, if little thought is given to the appearance of an interface, it can turn out looking like a dog's dinner. Until recently, HCI has focused primarily on getting the usability right, with little attention being paid to how to design aesthetically pleasing interfaces|
Expressive interfaces 143 5.3 Expres ,  | Interestingly, recent research suggests that the aesthetics of an interface can Figure 5.2 (a) Smiling and (b) sad Apple Macs. |
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)| | 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)|last: | A question of style or stereotype? Figure 5.4 shows two differently designed dialog boxes|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)| | Describe how they differ in terms of style. Of the two, which one do you prefer? Why? Which one do you think (i) Europeans would like the most and (ii) Americans would like the most? Comment Aaron Marcus, a graphic designer, created the two designs in an attempt to provide appealing interfaces. Dialog box A was designed for white American females while dialog box B was designed for European adult male intellectuals. The rationale behind Marcus's ideas was that European adult male intellectuals like "suave prose, a restrained treatment of information density, and a classical approach to font selection (e.g., the use of serif type in axial symmetric layouts similar to those found in elegant bronze European building identification signs)." In contrast, white American females "prefer a more detailed presentation, curvilinear shapes and the absence of some of the more-brutal terms . . . favored by male software engineers." When the different interfaces were empirically tested by Teasley et al. (1994), their results did not concur with Marcus's assumptions. In particular, they found that the European dialog box was liked the best by all people and was considered most appropriate for all users. Moreover, the round dialog box designed for women was strongly disliked by everyone|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)|last: | The assumption that women like curvilinear features clearly was not true in this context|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)| | At the very least, displaying the font labels in a circular plane makes them more difficult to read than when presented in the conventionally accepted horizontal plane|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)| | Another popular kind of expressive interface is the friendly interface agent. A general assumption is that novices will feel more at ease with this kind of "companion" and will be encouraged to try things out, after listening, watching, following, and interacting with them. For example, Microsoft pioneered a new class of agentbased software, called Bob, aimed at new computer users (many of whom were seen as computer-phobic). The agents were presented as friendly characters, including a friendly dog and a cute bunny. An underlying assumption was that having these kinds of agents on the screen would make the users feel more comfortable and at ease with using the software. An interface metaphor of a warm, cozy living room, replete with fire, furnishings, and furniture was provided (see Figure 5.5)- again intended to convey a comfortable feeling|
Expressive interfaces 143 5.3 Expres , 144 Chapter 5 Understanding how interfaces affect users have a positive effect on people's perception of the system's usability (Tractinsky, 1997). Moreover, when the "look and feel" of an interface is pleasing (e.g., beautiful graphics, nice feel to the way the elements have been put together, welldesigned fonts, elegant use of images and color) users are likely to be more tolerant of its usability (e.g., they may be prepared to wait a few more seconds for a website to download). As we have argued before, interaction design should not just be about usability per se, but should also include aesthetic design, such as how pleasurable an interface is to look at (or listen to). The key is to get the right balance between usability and other design concerns, like aesthetics (See Figure 5.3 on Color Plate 6)| | Since the creation of Bob, Microsoft has developed other kinds of agents, including the infamous "Clippy" (a paper clip that has human-like qualities), as part |
Expressive interfaces 143 5.3 Expres , 2 lt PLEASE SPECIFY TYPE Family [V Linespace -1 Width pzEqq Weight ml,,,\ Slant Alignment Efects Reverse Outline Shadow 1 a Underline Helvetica 12114pt Condensed Bold Roman > f Figure 5.4 Square and round dialog boxes designed by Aaron Marcus (1993): (a) dialog box designed for white American women, and (b) dialog box designed for European adult male intellectuals. | | 2 lt PLEASE SPECIFY TYPE Family [V Linespace -1 Width pzEqq Weight ml,,,\ Slant Alignment Efects Reverse Outline Shadow 1 a Underline Helvetica 12114pt Condensed Bold Roman > f Figure 5.4 Square and round dialog boxes designed by Aaron Marcus (1993): (a) dialog box designed for white American women, and (b) dialog box designed for European adult male intellectuals. |
Expressive interfaces 143 5.3 Expres , 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software|last: | 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software|
Expressive interfaces 143 5.3 Expres , 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software| | of their Windows '98 operating environment.' The agents typically appear at the bottom of the screen whenever the system "thinks" the user needs help carrying out a particular task. They, too, are depicted as cartoon characters, with friendly warm personalities. As mentioned in Chapter 2, one of the problems of using agents in this more general context is that some users do not like them. More experienced users who have developed a reasonably good mental model of the system often find such agent helpers very trying and quickly find them annoying intrusions, especially when they distract them from their work. (We return to anthropomorphism and the design of interface agents later in Section 5.5)|
Expressive interfaces 143 5.3 Expres , 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software| | Users themselves have also been inventive in expressing their emotions at the computer interface. One well-known method is the use of emoticons. These are keyboard symbols that are combined in various ways to convey feelings and emotions by siqulating facial expressions like smiling, winking, and frowning on the screen. The meaning of an emoticon depends on the content of the message and where it is placed in the message. For example, a smiley face placed at the end of a message can mean that the sender is happy about a piece of news she has just written about. Alternatively, if it is placed at the end of a comment in the body of the message, it usually indicates that this comment is not intended to be taken seriously|
Expressive interfaces 143 5.3 Expres , 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software| | Most emoticons are designed to be interpreted with the viewer's head tilted over to the left (a result of the way the symbols are represented on the screen)|
Expressive interfaces 143 5.3 Expres , 146 Chapter 5 Understanding how interfaces affect users Figure 5.5 "At home with Bob" software| | Some of the best known ones are presented in Table 5.1. A recently created shorthand language, used primarily by teenagers when online chatting or texting is the use of abbreviated words. These are formed by keying in various numbers and let- 'on the Mac version of Microsoft's Office 2001, Clippy was replaced by an anthropomorphized Mac computer with big feet and a hand that conveys various gestures and moods. |
User frustration 147 Table 5.1 Some  , last: | 5.4 User frustration 147 Table 5.1 Some commonly used emoticons|
User frustration 147 Table 5.1 Some  ,  | Emotion Expression Emoticon Possible meanings Happy Smile :) or :D (i) Happiness, or (ii) previous comment not to be taken seriously I Sad Mouth down :( or :- Disappointed, unhappy I Cheeky Wink I ) or ) Previous comment meant as tonguein-cheek 1 Mad Brows raised >: Mad about something , Very angry Angry face >:-( Very angry, cross Embarrassed Mouth open :O Embarrassed, shocked Sick Looking sick :x Feeling ill Nai've Schoolboyish look <:-) Smiley wearing a dunce's cap to convey that the sender is about to ask a stupid question|
User frustration 147 Table 5.1 Some  ,  | ters in place of words, e.g., "I 1 2 CU 2nite7 '. As well as being creative, the shorthand can convey emotional connotations|
User frustration 147 Table 5.1 Some  ,  | Expressive forms like emoticons, sounds, icons, and interface agents have been primarily used to (i) convey emotional states andlor (ii) elicit certain kinds of emotional responses in users, such as feeling at ease, comfort, and happiness. However, in many situations computer interfaces inadvertently elicit negative emotional responses|
User frustration 147 Table 5.1 Some  , last: | By far the most common is user frustration, to which we now turn our attention|
User frustration Everyone at some ti ,  | 5.4 User frustration Everyone at some time or other gets frustrated when using a computer. The effect ranges from feeling mildly amused to extremely angry. There are myriads of reasons why such emotional responses occur: when an application doesn't work properly or crashes when a system doesn't do what the user wants it to do when a user's expectations are not met when a system does not provide sufficient information to let the user know what to do when error messages pop up that are vague, obtuse, or condemning when the appearance of an interface is too noisy, garish, gimmicky, or patronizing when a system requires users to carry out many steps to perform a task, only to discover a mistake was made somewhere along the line and they need to start all over again |
User frustration Everyone at some ti , 148 Chapter 5 Understanding how interfaces affect users Provide specific examples for each of the above categories from your own experience, when you have become frustrated with an interactive device (e.g., telephone, VCR, vending machine, PDA, computer). In doing this, write down any further types of frustration that come to mind. Then prioritize them in terms of how annoying they are. What are the worst types? Comment In the text below we provide examples of common frustrations experienced when using computer systems. The worst include unhelpful error messages and excessive housekeeping tasks. You no doubt came up with many more| | 148 Chapter 5 Understanding how interfaces affect users Provide specific examples for each of the above categories from your own experience, when you have become frustrated with an interactive device (e.g., telephone, VCR, vending machine, PDA, computer). In doing this, write down any further types of frustration that come to mind. Then prioritize them in terms of how annoying they are. What are the worst types? Comment In the text below we provide examples of common frustrations experienced when using computer systems. The worst include unhelpful error messages and excessive housekeeping tasks. You no doubt came up with many more|
User frustration Everyone at some ti , 148 Chapter 5 Understanding how interfaces affect users Provide specific examples for each of the above categories from your own experience, when you have become frustrated with an interactive device (e.g., telephone, VCR, vending machine, PDA, computer). In doing this, write down any further types of frustration that come to mind. Then prioritize them in terms of how annoying they are. What are the worst types? Comment In the text below we provide examples of common frustrations experienced when using computer systems. The worst include unhelpful error messages and excessive housekeeping tasks. You no doubt came up with many more| | Often user frustration is caused by bad design, no design, inadvertent design, or ill-thought-out design. It is rarely caused deliberately. However, its impact on users can be quite drastic and make them abandon the application or tool. Here, we present some examples of classic user-frustration provokers that could be avoided or reduced by putting more thought into the design of the conceptual model|
User frustration Everyone at some ti , 1. Gimmicks Cause: When a users' expectations are not met and they are instead presented with a gimmicky display| | 1. Gimmicks Cause: When a users' expectations are not met and they are instead presented with a gimmicky display|
User frustration Everyone at some ti , 1. Gimmicks Cause: When a users' expectations are not met and they are instead presented with a gimmicky display| | Level of frustration: Mild This can happen when clicking on a link to a website only to discover that it is still "under construction." It can be still more annoying when the website displays a road-sign icon of "men at work" (see Figure 5.6). Although the website owner may think such signs amusing, it serves to underscore the viewer's frustration at having made the effort to go to the website only to be told that it is incomplete (or not even started in some cases). Clicking on links that don't work is also frustrating|
User frustration Everyone at some ti , 1. Gimmicks Cause: When a users' expectations are not met and they are instead presented with a gimmicky display| | How to avoid or help reduce the frustration: By far the best strategy is to avoid using gimmicks to cover up the real crime. In this example it is much better to put material live on the web only when it is complete and working properly. People very rarely return to sites when they see icons like the one in Figure 5.6|
User frustration Everyone at some ti , 2. Error Messages Cause: When a system or application crashes and provides an "unexpected" error message| | 2. Error Messages Cause: When a system or application crashes and provides an "unexpected" error message|
User frustration Everyone at some ti , 2. Error Messages Cause: When a system or application crashes and provides an "unexpected" error message| | Level of frustration: High Error messages have a long history in computer interface design, and are notorious for their incomprehensibility. For example, Nielsen (1993) describes an early system that was developed that allowed only for one line of error messages. Whenever the Figure 5.6 Men at work icon sign indicating "website under construction." According to AltaVista, there were over 12 million websites containing the phrase "under construction" in January 2001. |
User frustration 149 error message w ,  | 5.4 User frustration 149 error message was too long, the system truncated it to fit on the line, which the users would spend ages trying to decipher. The full message was available only by pressing the PF1 (help key) function key. While this may have seemed like a natural design solution to the developers, it was not at all obvious to the users. A much better design solution would have been to use the one line of the screen to indicate how to find more information about the current error ("press the PF1 key for explanation")|
User frustration 149 error message w ,  | The use of cryptic language and developer's jargon in error messages is a major contributing factor in user frustration. It is one thing to have to cope when something goes wrong but it is another to have to try to understand an obscure message that pops up by way of explanation. One of my favorites, which sometimes appears on the screen when I'm trying to do something perfectly reasonable like paste some I text into a document, using a word processor, is: "The application Word Wonder has unexpectedly quit due to a Type 2 error." It is very clear from what the system has just done (closed the application very rapidly) that it has just crashed, so such feedback is not very helpful. Letting the user know that the error is of a Type 2 kind is also not very useful. How is the average user meant to understand this? Is there a list of error types ready at hand to tell the user how to solve the problem for each error? Moreover, such a reference invites the user to worry about how many more error types there might be. The tone of the message is also annoying. The adjective "unexpectedly" seems condescending, implying almost that it is the fault of the user rather than the computer. Why include such a word at all? After all, how else could the application have quit? One could never imagine the opposite situation: an error message pops up saying, "The application has expectedly quit, due to poor coding in the operating system." How to avoid or help reduce the frustration: Ideally, error messages should be treated as how-to-fix-it messages. Instead of explicating what has happened, they should state the cause of the problem and what the user needs to do to fix it. Shneiderman (1998) has developed a detailed set of guidelines on how to develop helpful messages that are easy to read and understand|
User frustration 149 error message w , last: | Box 5.1 summarizes the main recommendations. |
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | SYNTAX ERROR INVALID FILENAME INVALID DATA APPLICATION ZETA HAS UNEXPECTEDLY QUIT DUE TO A TYPE 4 ERROR DRIVE ERROR: ABORT, RETRY OR FAIL? 1 Comment How specific the given advice can be will depend on the kind of system it is. Here are sugges- I tions for hypothetical systems|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur|last: | SYNTAX ERROR-There is a problem with the way you have typed the command|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur|last: | Check for typos|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | Check for typos|: INVALID FILENAME-Choose another file name that uses only 20 characters or less and is lower case without any spaces|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | Check for typos|: INVALID DATA-There is a problem with the data you have entered. Try again, checking that no decimal points are used|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | Check for typos|: APPLICATION ZETA HAS UNEXPECTEDLY QUIT DUE TO A TYPE 4 ERROR-The application you were working on crashed because of an internal memory problem. Try rebooting and increasing the amount of allocated memory to the application|
User frustration 149 error message w , 150 Chapter 5 Understanding how interfaces affect users Below are some common error messages expressed in harsh computer jargon that can be quite threatening and offensive. Rewrite them in more usable, useful, and friendly language that would help users to understand the cause of the problem and how to fix it. For each message, imagine a specific context where such a problem might occur| | Check for typos|: DRIVE ERROR: ABORT, RETRY OR FAIL?-There is a problem with reading your disk. Try inserting it again|
User frustration 149 error message w , 3. Overburdening the user Cause: Upgrading software so that users are required to carry out excessive housekeeping tasks Level of frustration: Medium to high Another pervasive frustrating user experience is upgrading a piece of software. It is now common for users to'have to go through this housekeeping task on a regular basis, especially if they run a number of applications. More often than not it tends to be a real chore, being very time-consuming and requiring the user to do a whole range of things, like resetting preferences, sorting out extensions, checking other configurations, and learning new ways of doing things. Often, problems can develop that are not detected till some time later, when a user tries an operation that worked fine before but mysteriously now fails. A common problem is that settings get lost or do not copy over properly during the upgrade. As the number of options for customizing an application or operating system increases for each new upgrade, so, too, does the headache of having to reset all the relevant preferences. Wading through myriads of dialog boxes and menus and figuring out which checkbox to | | 3. Overburdening the user Cause: Upgrading software so that users are required to carry out excessive housekeeping tasks Level of frustration: Medium to high Another pervasive frustrating user experience is upgrading a piece of software. It is now common for users to'have to go through this housekeeping task on a regular basis, especially if they run a number of applications. More often than not it tends to be a real chore, being very time-consuming and requiring the user to do a whole range of things, like resetting preferences, sorting out extensions, checking other configurations, and learning new ways of doing things. Often, problems can develop that are not detected till some time later, when a user tries an operation that worked fine before but mysteriously now fails. A common problem is that settings get lost or do not copy over properly during the upgrade. As the number of options for customizing an application or operating system increases for each new upgrade, so, too, does the headache of having to reset all the relevant preferences. Wading through myriads of dialog boxes and menus and figuring out which checkbox to |
User frustration 151 "You do not hav ,  | 5.4 User frustration 151 "You do not have the plug-in needed to view the audiolx-pn-real-audio plugin-type information on this page. To get plug-in now, view plug-in directory" Figure 5.7a Typical message in dialog box that appears when trying to run an applet on a website that needs a plug-in the user does not have|
User frustration 151 "You do not hav ,  | click on, can be a very arduous task. To add to the frustration, users may also discover that several of their well-learned procedures for carrying out tasks have been substantially changed in the upgrade|
User frustration 151 "You do not hav ,  | A pet frustration of mine over the years has been trying to run various websites that require me to install a new plug-in. Achieving this is never straightforward. I have spent huge amounts of time trying to install what I assume to be the correct plug-in-only to discover that it is not yet available or incompatible with the operating system or machine I am using|
User frustration 151 "You do not hav ,  | What typically happens is I'll visit a tempting new website, only to discover that my browser is not suitably equipped to view it. When my browser fails to run the applet, a helpful dialog box will pop up saying that a plug-in of X type is required|
User frustration 151 "You do not hav ,  | It also usually directs me to another website from where the plug-in can be downloaded (see Figure 5.7a). Websites that offer such plug-ins, however, are not organized around my specific needs but are designed more like hardware stores (a bad conceptual model), offering hundreds (maybe even thousands) of plug-ins covering all manner of applications and systems. Getting the right kind of plug-in from the vast array available requires knowing a number of things about your machine and the kind of network you are using. In going through the various options WEB PLUG-IN DIRECTORY Here is where you find the links to all of the plug-ins available on the net. Simply find a plug-in you're interested in, view what platforms it currently (or will 'soon') support and click on its link. If you know of a plug-in not listed on this page please take a moment and tell us about it with our all new reporting system! Plug-ins by Category The Full List This is the whole list, but I gotta warn ya its getting big MultiMedia Multi-Media Plug-Ins, AVI, QuickTime, ShockWave ..|
User frustration 151 "You do not hav , last: | Graphics Graphic Plug-Ins, PNG, CMX, DWG ..|
User frustration 151 "You do not hav ,  | Sound Sound & MIDI Plug-Ins, MIDI, ReadAudio, Truespeech ... Document Document Viewer Plug-Ins, Acrobat, Envoy, MS Word ... Productivity Productivity Plug-Ins, Map Viewers, Spell Checkers.. . VRMU3-D VRML & QD3D Plug-Ins Plug-ins by platform I Macintosh Macintosh Plug-Ins 032 IBM 0512 Plug-Ins Unix Unix Plug-Ins Windows Windows Plug-Ins Figure 5.7b Directory of plug-ins available on a plug-in site directed to from Netscape. |
User frustration 151 "You do not hav , 152 Chapter 5 Understanding how interfaces affect users to narrow down which plug-in is required, it is easy to overlook something and end up with an inappropriate plug-in. Even when the right plug-in has been downloaded and placed in the appropriate system folder, it may not work. A number of other things usually need to be done, like specifying mime-type and suffix. The whole process can end up taking huge amounts of time, rather than the couple of minutes most users would assume| | 152 Chapter 5 Understanding how interfaces affect users to narrow down which plug-in is required, it is easy to overlook something and end up with an inappropriate plug-in. Even when the right plug-in has been downloaded and placed in the appropriate system folder, it may not work. A number of other things usually need to be done, like specifying mime-type and suffix. The whole process can end up taking huge amounts of time, rather than the couple of minutes most users would assume|
User frustration 151 "You do not hav , 152 Chapter 5 Understanding how interfaces affect users to narrow down which plug-in is required, it is easy to overlook something and end up with an inappropriate plug-in. Even when the right plug-in has been downloaded and placed in the appropriate system folder, it may not work. A number of other things usually need to be done, like specifying mime-type and suffix. The whole process can end up taking huge amounts of time, rather than the couple of minutes most users would assume| | How to avoid or help reduce the frustration: Users should not have to spend large amounts of time on housekeeping tasks|
User frustration 151 "You do not hav , 152 Chapter 5 Understanding how interfaces affect users to narrow down which plug-in is required, it is easy to overlook something and end up with an inappropriate plug-in. Even when the right plug-in has been downloaded and placed in the appropriate system folder, it may not work. A number of other things usually need to be done, like specifying mime-type and suffix. The whole process can end up taking huge amounts of time, rather than the couple of minutes most users would assume| | Upgrading should be an effortless and largely automatic process. Designers need to think carefully about the trade-offs incurred when introducing upgrades, especially the amount of relearning required. Plug-ins that users have to search for, download, and set up themselves should be phased out and replaced with more powerful browsers that automatically download the right plug-ins and place them in the appropriate desktop folder reliably, or, better still, interpret the different file types themselves|
User frustration 151 "You do not hav , 4. Appearance Cause: When the appearance of an interface is unpleasant Level of frustration: Medium As mentioned earlier, the appearance of an interface can affect its usability. Users get annoyed by: websites that are overloaded with text and graphics, making it difficult to find the information desired and slow to access * flashing animations, especially banner ads, which are very distracting the copious use of sound effects and Muzak, especially when selecting options, carrying out actions, starting up CD-ROMs, running tutorials, or watching website demos featuritis-an excessive number of operations, represented at the interface as banks of icons or cascading menus childish designs that keep popping up on the screen, such as certain kinds of helper agents poorly laid out keyboards, pads, control panels, and other input devices that cause the user to press the wrong keys or buttons when trying to do something else How to avoid or help reduce the frustration: Interfaces should be designed to be simple, perceptually salient, and elegant and to adhere to usability design principles, well-thought-out graphic design principles, and ergonomic guidelines (e.g. Mullet and Sano, 1996)| | 4. Appearance Cause: When the appearance of an interface is unpleasant Level of frustration: Medium As mentioned earlier, the appearance of an interface can affect its usability. Users get annoyed by: websites that are overloaded with text and graphics, making it difficult to find the information desired and slow to access * flashing animations, especially banner ads, which are very distracting the copious use of sound effects and Muzak, especially when selecting options, carrying out actions, starting up CD-ROMs, running tutorials, or watching website demos featuritis-an excessive number of operations, represented at the interface as banks of icons or cascading menus childish designs that keep popping up on the screen, such as certain kinds of helper agents poorly laid out keyboards, pads, control panels, and other input devices that cause the user to press the wrong keys or buttons when trying to do something else How to avoid or help reduce the frustration: Interfaces should be designed to be simple, perceptually salient, and elegant and to adhere to usability design principles, well-thought-out graphic design principles, and ergonomic guidelines (e.g. Mullet and Sano, 1996)|
Dealing with user frustration One  ,  | 5.3.1 Dealing with user frustration One way of coping with computer-induced frustration is to vent and take it out on the computer or other users. As mentioned in Chapter 3, a typical response to seeing the cursor freeze on the screen is repeatedly to bash every key on the keyboard. |
A debate: the application of anthrop ,  | 5.5 A debate: the application of anthropomorphism to interaction design 153 Another way of venting anger is through flaming. When upset or annoyed by a piece of news or something in an email message, people may overreact and respond by writing things in email that they wouldn't dream of saying face to face|
A debate: the application of anthrop ,  | They often use keyboard symbols to emphasize their anger or frustration, e.g., exclamation marks (!!!!), capital letters (WHY DID YOU DO THAT?) and repeated question marks (??????) that can be quite offensive to those on the receiving end. While such venting behavior can make the user feel temporarily less frustrated, it can be very unproductive and can annoy the recipients. Anyone who has received a flame knows just how unpleasant it is|
A debate: the application of anthrop ,  | In the previous section, we provided some suggestions on how systems could be improved to help reduce commonly caused frustrations. Many of the ideas discussed throughout the book are also concerned with designing technologies and interfaces that are usable, useful, and enjoyable. There will always be situations, however, in which systems do not function in the way users expect them to, or in which the user misunderstands something and makes a mistake. In these circumstances, error messages (phrased as "how-to-fix-it" advice) should be provided that explain what the user needs to do|
A debate: the application of anthrop ,  | Another way of providing information is through online help, such as tips, handy hints, and contextualized advice. Like error messages, these need to be designed to guide users on what to do next when they get stuck and it is not obvious from the interface what to do. The signaling used at the interface to indicate that such online help is available needs careful consideration. A cartoon-based agent with a catchy tune may seem friendly and helpful the first time round but can quickly become annoying. A help icon or command that is activated by the users themselves when they want help is often preferable|
A debate: the application of anthrop ,  | 5.5 A debate: the application of anthropomorphism to interaction design In this section we present a debate. Read through the arguments for and against the motion and then the evidence provided. Afterwards decide for yourself whether you support the motion. |
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further|
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | Background A controversial debate in interaction design is whether to exploit the phenomenon of anthropomorphism (the propensity people have to attribute human qualities to objects). It is something that people do naturally in their everyday lives and is commonly exploited in the design of technologies (e.g., the creation of humanlike animals and plants in cartoon films, the design of toys that have human qualities). The approach is also becoming more widespread in interaction design, through the introduction of agents in a range of domains|
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | What is anthropomorphism? It is well known that people readily attribute human qualities to their pets and their cars, and, conversely, are willing to accept human attributes that have been assigned by others to cartoon characters, robots, toys, and other inanimate objects. Advertisers are well aware of this phenomenon and often create humanlike characters out of inanimate objects to promote their products. For example, breakfast cereals, butter, and fruit drinks have all been transmogrified into characters with human qualities (they move, talk, have personalities, and show emotions), enticing the viewer to buy them. Children are especially susceptible to this kind of "magic," as witnessed in their love of cartoons, where all manner of inanimate objects are brought to life with humanlike qualities|
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | Examples of its application to system design The finding that people, especially children, have a propensity to accepting and enjoying objects that have been given humanlike qualities has led many designers into capitalizing on it, most prevalently in the design of human-computer dialogs modeled on how humans talk to each other. A range of animated screen characters, such as agents, friends, advisors and virtual pets, have also been developed|
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | Anthropomorphism has also been used in the development of cuddly toys that are embedded with computer systems. Commercial products like ~cti~ates~~ have been designed to try to encourage children to learn through playing with the cuddly toys. For example, Barney attempts to motivate play in children by using human-based speech and movement (Strommen, 1998). The toys are programmed to react to the child and make comments while watching TV together or working together on a computer-based task (see Figure 1.2 in Color Plate 1). In particular, Barney is programmed to congratulate the child whenever he or she gets a right answer and also to react to the content on screen with appropriate emotions (e.g., cheering at good news and expressing concern at bad news)|
A debate: the application of anthrop , 154 Chapter 5 Understanding how interfaces affect users I The motion The use of anthropomorphism in interaction design is an effective technique and should be exploited further| | Arguments for exploiting this behavior An underlying argument in favor of the anthropomorphic approach is that furnishing interactive systems with personalities and other humanlike attributes makes them more enjoyable and fun to interact with. It is also assumed that they can moti- |
A debate: the application of anthrop ,  | 5.5 A debate: the application of anthropomorphism to interaction design 155 vate people to carry out the tasks suggested (e.g., learning material, purchasing goods) more strongly than if they are presented in cold, abstract computer language|
A debate: the application of anthrop , last: | Being addressed in first person (e.g., "Hello Chris! Nice to see you again|
A debate: the application of anthrop ,  | Welcome back. Now what were we doing last time? Oh yes, exercise 5. Let's start again.") is much more endearing than being addressed in the impersonal third person ("User 24, commence exercise 5'7, especially for children. It can make them feel more at ease and reduce their anxiety. Similarly, interacting with screen characters like tutors and wizards can be much pleasanter than interacting with a cold dialog box or blinking cursor on a blank screen. Typing a question in plain English, using a search engine like Ask Jeeves (which impersonates the well-known fictitious butler), is more natural and personable than thinking up a set of keywords, as required by other search engines. At the very least, anthropomorphic interfaces are a harmless bit of fun|
A debate: the application of anthrop ,  | Arguments against exploiting this behavior There have been many criticisms of the anthropomorphic approach. Shneiderman (1998), one of the best known critics, has written at length about the problems of attributing human qualities to computer systems. His central argument is that anthropomorphic interfaces, especially those that use first-person dialog and screen characters, are downright deceptive. An unpleasant side effect is that they can make people feel anxious, resulting in them feeling inferior or stupid. A screen tutor that wags its finger at the user and says, "Now, Chris, that's not right! Try again. You can do better." is likely to feel more humiliating than a system dialog box saying, "Incorrect. Try again." Anthropomorphism can also lead people into a false sense of belief, enticing them to confide in agents called "software bots" that reside in chatrooms and other electronic spaces, pretending to be conversant human beings. By far the most common complaint against computers pretending to have human qualities, however, is that people find them very annoying and frustrating. Once users discover that the system cannot really converse like a human or does not possess real human qualities (like having a personality or being sincere), they become quickly disillusioned and subsequently distrust it. E-commerce sites that pretend to be caring by presenting an assortment of virtual assistants, receptionists, and other such helpers are seen for what they really are-artificial and flaky. Children and adults alike also are quickly bored and annoyed with applications that are fronted by artificial screen characters (e.g., tutor wizards) and simply ignore whatever they might suggest|
A debate: the application of anthrop ,  | Evidence for the motion A number of studies have investigated people's reactions and responses to computers that have been designed to be more humanlike. A body of work reported by Reeves and Nass (1996) has identified several benefits of the anthropomorphic approach|
A debate: the application of anthrop ,  | They found that computers that were designed to flatter and praise users when they did something right had a positive impact on how they felt about themselves|
A debate: the application of anthrop ,  | For example, an educational program was designed to say, "Your question makes an interesting and useful distinction. Great job!" after a user had contributed |
A debate: the application of anthrop , 156 Chapter 5 Understanding how interfaces affect users a new question to it. Students enjoyed the experience and were more willing to continue working with the computer than were other students who were not praised by the computer for doing the same things. In another study, Walker et al. (1994) compared people's responses to a talking-face display and an equivalent text-only one and found that people spent more time with the talking-face display than the textonly one. When given a questionnaire to fill in, the face-display group made fewer mistakes and wrote down more comments. In a follow-up study, Sproull et al| | 156 Chapter 5 Understanding how interfaces affect users a new question to it. Students enjoyed the experience and were more willing to continue working with the computer than were other students who were not praised by the computer for doing the same things. In another study, Walker et al. (1994) compared people's responses to a talking-face display and an equivalent text-only one and found that people spent more time with the talking-face display than the textonly one. When given a questionnaire to fill in, the face-display group made fewer mistakes and wrote down more comments. In a follow-up study, Sproull et al|
A debate: the application of anthrop , 156 Chapter 5 Understanding how interfaces affect users a new question to it. Students enjoyed the experience and were more willing to continue working with the computer than were other students who were not praised by the computer for doing the same things. In another study, Walker et al. (1994) compared people's responses to a talking-face display and an equivalent text-only one and found that people spent more time with the talking-face display than the textonly one. When given a questionnaire to fill in, the face-display group made fewer mistakes and wrote down more comments. In a follow-up study, Sproull et al| | (1996) again found that users reacted quite differently to the two interfaces, with users presenting themselves in a more positive light to the talking-face display and generally interacting with it more|
A debate: the application of anthrop , 156 Chapter 5 Understanding how interfaces affect users a new question to it. Students enjoyed the experience and were more willing to continue working with the computer than were other students who were not praised by the computer for doing the same things. In another study, Walker et al. (1994) compared people's responses to a talking-face display and an equivalent text-only one and found that people spent more time with the talking-face display than the textonly one. When given a questionnaire to fill in, the face-display group made fewer mistakes and wrote down more comments. In a follow-up study, Sproull et al| | Evidence against the motion Sproull et al.'s studies also revealed, however, that the talking-face display made some users feel somewhat disconcerted and displeased. The choice of a stern talking face may have been a large contributing factor. Perhaps a different kind of response would have been elicited if a friendlier smiling face had been used|
A debate: the application of anthrop , 156 Chapter 5 Understanding how interfaces affect users a new question to it. Students enjoyed the experience and were more willing to continue working with the computer than were other students who were not praised by the computer for doing the same things. In another study, Walker et al. (1994) compared people's responses to a talking-face display and an equivalent text-only one and found that people spent more time with the talking-face display than the textonly one. When given a questionnaire to fill in, the face-display group made fewer mistakes and wrote down more comments. In a follow-up study, Sproull et al| | Nevertheless, a number of other studies have shown that increasing the "humanness" of an interface is counterproductive. People can be misled into believing that a computer is like a human, with human levels of intelligence. For example, one study investigating user's responses to interacting with agents at the interface represented as human guides found that the users expected the agents to be more humanlike than they actually were. In particular, they expected the agents to have personality, emotion, and motivation-even though the guides were portrayed on the screen as simple black and white static icons (see Figure 5.8). Furthermore, the users became disappointed when they discovered the agents did not have any of these characteristics (Oren et al., 1990). In another study comparing an anthropomorphic interface that spoke in the first person and was highly personable (HI THERE, JOHN! IT'S NICE TO MEET YOU, I SEE YOU ARE READY NOW) with a mechanistic one that spoke in third person (PRESS THE ENTER KEY TO Figure 5.8 Guides of historical characters. |
Virtual characters: agents 157 I BEG ,  | 5.6 Virtual characters: agents 157 I BEGIN SESSION), the former was rated by college students as less honest and it made them feel less responsible for their actions (Quintanar et al., 1982)|
Virtual characters: agents 157 I BEG ,  | Casting your vote: On the basis of this debate and any other articles on the topic (see Section 5.6 and the recommended readings at the end of this chapter) together with your experiences with anthropomorphic interfaces, make up your mind whether you are for or against the motion|
Virtual characters: agents ~ As ment ,  | 5.6 Virtual characters: agents ~ As mentioned in the debate above, a whole new genre of cartoon and life-like characters has begun appearing on our computer screens-as agents to help us search I the web, as e-commerce assistants that give us information about products, as characters in video games, as learning companions or instructors in educational programs, and many more. The best known are videogame stars like Lara Croft and Super Mario. Other kinds include virtual pop stars (See Figure 5.9 on Color Plate 6), virtual talk-show hosts, virtual bartenders, virtual shop assistants, and virtual newscasters. Interactive pets (e.g., Aibo) and other artificial anthropomorphized characters (e.g., Pokemon, Creatures) that are intended to be cared for and played with by their owners have also proved highly popular|
Kinds of agents Below we categoriz ,  | 5.6.1 Kinds of agents Below we categorize the different kinds of agents in terms of the degree to which they anthropomorphize and the kind of human or animal qualities they emulate|
Kinds of agents Below we categoriz ,  | These are (1) synthetic characters, (2) animated agents, (3) emotional agents, and (4) embodied conversational interface agents|
Kinds of agents Below we categoriz , 1. Synthetic characters These are commonly designed as 3D characters in video games or other forms of entertainment, and can appear as a first-person avatar or a third-person agent| | 1. Synthetic characters These are commonly designed as 3D characters in video games or other forms of entertainment, and can appear as a first-person avatar or a third-person agent|
Kinds of agents Below we categoriz , 1. Synthetic characters These are commonly designed as 3D characters in video games or other forms of entertainment, and can appear as a first-person avatar or a third-person agent| | Much effort goes into designing them to be lifelike, exhibiting realistic human movements, like walking and running, and having distinct personalities and traits|
Kinds of agents Below we categoriz , 1. Synthetic characters These are commonly designed as 3D characters in video games or other forms of entertainment, and can appear as a first-person avatar or a third-person agent| | The design of the characters' appearance, their facial expressions, and how their lips move when talking are also considered important interface design concerns|
Kinds of agents Below we categoriz , 1. Synthetic characters These are commonly designed as 3D characters in video games or other forms of entertainment, and can appear as a first-person avatar or a third-person agent| | Bruce Blumberg and his group at MIT are developing autonomous animated creatures that live in virtual 3D environments. The creatures are autonomous in that they decide what to do, based on what they can sense of the 3D world, and how they feel, based on their internal states. One of the earliest creatures to be developed was Silas T. Dog (Blumberg, 1996). The 3D dog looks like a cartoon creature (colored bright yellow) but is designed to behave like a real dog (see Figure 5.10). For example, he can walk, run, sit, wag his tail, bark, cock his leg, chase sticks, and rub his head on people when he is happy. He navigates through his world by using his "nose" and synthetic vision. He also has been programmed with various internal goals and needs that he tries to satisfy, including wanting to play |
Kinds of agents Below we categoriz , 158 Chapter 5 Understanding how interfaces affect users Figure 5.1 0 User interacting with Silas the dog in (a) physical world (b) virtual world, and 1 (c) close-up of Silas| | 158 Chapter 5 Understanding how interfaces affect users Figure 5.1 0 User interacting with Silas the dog in (a) physical world (b) virtual world, and 1 (c) close-up of Silas|
Kinds of agents Below we categoriz , 158 Chapter 5 Understanding how interfaces affect users Figure 5.1 0 User interacting with Silas the dog in (a) physical world (b) virtual world, and 1 (c) close-up of Silas| | and have company. He responds to events in the environment; for example, he becomes aggressive if a hamster enters his patch|
Kinds of agents Below we categoriz , 158 Chapter 5 Understanding how interfaces affect users Figure 5.1 0 User interacting with Silas the dog in (a) physical world (b) virtual world, and 1 (c) close-up of Silas| | A person can interact with Silas by making various gestures that are detected by a computer-vision system. For example, the person can pretend to throw a stick, which is recognized as an action that Silas responds to. An image of the person is also projected onto a large screen so that he can be seen in relation to Silas (see Figure 5.10)|
Kinds of agents Below we categoriz , 158 Chapter 5 Understanding how interfaces affect users Figure 5.1 0 User interacting with Silas the dog in (a) physical world (b) virtual world, and 1 (c) close-up of Silas| | Depending on his mood, Silas will run after the stick and return it (e.g., when he is happy and playful) or cower and refuse to fetch it (e.g., when he is hungry or sad)|
Kinds of agents Below we categoriz , 2. Animated agents These are similar to synthetic characters except they tend to be designed to play a collaborating role at the interface. Typically, they appear at the side of the screen as tutors, wizards and helpers intended to help users perform a task. This might be designing a presentation, writing an essay or learning about a topic. Most of the characters are designed to be cartoon-like rather than resemble human beings| | 2. Animated agents These are similar to synthetic characters except they tend to be designed to play a collaborating role at the interface. Typically, they appear at the side of the screen as tutors, wizards and helpers intended to help users perform a task. This might be designing a presentation, writing an essay or learning about a topic. Most of the characters are designed to be cartoon-like rather than resemble human beings|
Kinds of agents Below we categoriz , 2. Animated agents These are similar to synthetic characters except they tend to be designed to play a collaborating role at the interface. Typically, they appear at the side of the screen as tutors, wizards and helpers intended to help users perform a task. This might be designing a presentation, writing an essay or learning about a topic. Most of the characters are designed to be cartoon-like rather than resemble human beings| | An example of an animated agent is Herman the Bug, who was developed by Intellimedia at North Carolina State University to teach children from kindergarten to high school about biology (Lester et al., 1997). Herman is a talkative, quirky insect that flies around the screen and dives into plant structures as it provides problemsolving advice to students (See Figure 5.11 on Color Plate 7). When providing its explanations it performs a range of activities including walking, flying, shrinking, expanding, swimming, bungee jumping, acrobatics, and teleporting. Its behavior includes 30 animated segments, 160 canned audio clips, and a number of songs. Herman offers advice on how to perform tasks and also tries to motivate students to do them|
Kinds of agents Below we categoriz , 3. Emotional agents These are designed with a predefined personality and set of emotions that are manipulated by users. The aim is to allow people to change the moods or emotions of agents and see what effect it has on their behavior. Various mood changers are pro- | | 3. Emotional agents These are designed with a predefined personality and set of emotions that are manipulated by users. The aim is to allow people to change the moods or emotions of agents and see what effect it has on their behavior. Various mood changers are pro- |
Virtual characters: agents 159 vided ,  | 5.6 Virtual characters: agents 159 vided at the interface in the form of sliders and icons. The effect of requesting an animated agent to become very happy, sad, or grumpy is seen through changes to their behavior, For example, if a user moves a slider to a "scared" position on an emotional scale, the agent starts behaving scared, hiding behind objects and making frightened facial expressions|
Virtual characters: agents 159 vided ,  | The Woggles are one of the earliest forms of emotional agents (Bates, 1994). A group of agents was designed to appear on the screen that played games with one another, such as hide and seek. They were designed as different colored bouncy balls with cute facial expressions. Users could change their moods (e.g., from happy to sad) by moving various sliders, which in turn changed their movement (e.g., they bounced less), facial expression (e.g., they no longer smiled), and how willing they were to play with the other Woggles (See Figure 5.12 on Color Plate 7)|
Virtual characters: agents 159 vided , 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development| | 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development|
Virtual characters: agents 159 vided , 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development| | Rea is an embodied real-estate agent with a humanlike body that she uses in humanlike ways during a conversation (Cassell, 2000). In particular, she uses eye gaze, body posture, hand gestures, and facial expressions while talking (See Figure 5.13 on Color Plate 8). Although the dialog appears relatively simple, it involves a sophisticated underlying set of conversational mechanisms and gesture-recognition techniques. An example of an actual interaction with Rea is: Mike approaches the screen and Rea turns to face him and says: "Hello. How can I help you?" Mike: "I'm looking to buy a place near MIT." Rea nods, indicating she is following|
Virtual characters: agents 159 vided , 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development|last: | Rea: "I have a house to show you" (picture of a house appears on the screen)|
Virtual characters: agents 159 vided , 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development|last: | "It is in Somerville." Mike: "Tell me about it." Rea looks up and away while she plans what to say|
Virtual characters: agents 159 vided , 4. Embodied conversational interface agents Much of the research on embodied conversational interface agents has been concerned with how to emulate human conversation. This has included modeling various conversational mechanisms such as: recognizing and responding to verbal and non-verbal input generating verbal and non-verbal output coping with breakdowns, turn-taking and other conversational mechanisms giving signals that indicate the state of the conversation as well as contributing new suggestions for the dialog (Cassell, 2000, p.72) In many ways, this approach is the most anthropomorphic in its aims of all the agent research and development|last: | Rea: "It's big." Rea makes an expansive gesture with her hands. |
Virtual characters: agents 159 vided , 160 Chapter 5 Understanding how interfaces affect users Mike brings his hands up as if to speak, so Rea does not continue, waiting for him to speak| | 160 Chapter 5 Understanding how interfaces affect users Mike brings his hands up as if to speak, so Rea does not continue, waiting for him to speak|
Virtual characters: agents 159 vided , 160 Chapter 5 Understanding how interfaces affect users Mike brings his hands up as if to speak, so Rea does not continue, waiting for him to speak| | Mike: "Tell me more about it." Rea: "Sure thing. It has a nice garden . . ." Which of the various kinds of agents described above do you think are the most convincing? Is it those that try to be as humanlike as possible or those that are designed to be simple, cartoon-based animated characters? Comment We argue that the agents that are the most successful are ironically those that are least 1 like humans. The reasons for this include that they appear less phony and are not trying to pretend they are more intelligent or human than they really are. However, others 1 would argue that the more humanlike they are, the more believable they are and hence the more convincing. I 5.6.2 General design concerns Believability of virtual characters One of the major concerns when designing agents and virtual characters is how to make them believable. By believability is meant "the extent to which users interacting with an agent come to believe that it has its own beliefs, desires and personality" (Lester and Stone, 1997, p 17). In other words, a virtual character that a person can believe in is taken as one that allows users to suspend their disbelief. A key aspect is to match the personality and mood of the character to its actions. This requires deciding what are appropriate behaviors (e.g., jumping, smiling, sitting, raising arms) for different kinds of emotions and moods. How should the emotion "very happy" be expressed? Through a character jumping up and down with a big grin on its face? What about moderately happy-through a character jumping up and down with a small grin on its face? How easy is it for the user to distinguish between these two and other emotions that are expressed by the agents? How many emotions are optimal for an agent to express? Appearance The appearance of an agent is very important in making it believable. Parsimony and simplicity are key. Research findings suggest that people tend to prefer simple cartoon-based screen characters to detailed images that try to resemble the human form as much as possible (Scaife and Rogers, 2001). Other research has also found that simple cartoon-like figures are preferable to real people pretending to be artificial agents. A project carried out by researchers at Apple Computer Inc. in the 80s found that people reacted quite differently to different representations of the same interface agent. The agent in question, called Phil, was created as part of a promotional |
Virtual characters: agents 1 61 Figu ,  | 5.6 Virtual characters: agents 1 61 Figure 5.1 4 Two versions of Phil, the agent assistant that appeared in Apple's promotional video called the Knowledge Navigator (a) as a real actor pretending to be a computer agent and (b) as a cartoon being an agent|
Virtual characters: agents 1 61 Figu , last: | Phil was created by Doris Mitsch and the actor Phil was Scott Freeman|
Virtual characters: agents 1 61 Figu ,  | video called "The Knowledge Navigator." He was designed to respond and behave just like a well-trained human assistant. In one version, he was played by a real actor that appeared on a university professor's computer screen. Thus, he was portrayed as an artificial agent but was played by a real human. The actor was a smartly dressed assistant wearing a white shirt and bow tie. He was also extremely polite. He performed a number of simple tasks at the computer interface, such as reminding the professor of his appointments for that day and alerting him to phone calls waiting|
Virtual characters: agents 1 61 Figu ,  | Many people found this version of Phil unrealistic. After viewing the promotional video, people complained about him, saying that he seemed too stupid. In another version, Phil was designed as a simple line-drawn cartoon with limited animation (see Figure 5.14) and was found to be much more likeable (see Laurel, 1993)|
Virtual characters: agents 1 61 Figu ,  | Behavior Another important consideration in making virtual characters believable is how convincing their behavior is when performing actions. In particular, how good are they at pointing out relevant objects on the screen to the user, so that the user knows what they are referring to? One way of achieving this is for the virtual character to "lead" with its eyes. For example, Silas the dog turns to look at an object or a person before he actually walks over to it (e.g., to pick the object up or to invite the person to play). A character that does not lead with its eyes looks very mechanical and as such not very life-like (Maes, 1995)|
Virtual characters: agents 1 61 Figu ,  | As mentioned previously, an agent's actions need also to match their underlying emotional state. If the agent is meant to be angry, then its body posture, movements, and facial expression all need to be integrated to show this. How this can be achieved effectively can be learned from animators, who have a long tradition in this field. For example, one of their techniques is to greatly exaggerate expressions |
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Mode of interaction The way the character communicates with the user is also important. One approach has been towards emulating human conversations as much as possible to make the character's way of talking more convincing. However, as mentioned in the debate above, a drawback of this kind of masquerading is that people can get annoyed easily and feel cheated. Paradoxically, a more believable and acceptable dialog with a virtual character may prove to be one that is based on a simple art@cial mode of interaction, in which prerecorded speech is played at certain choice points in the interaction and the user's responses are limited to selecting menu options. The reason why this mode of interaction may ultimately prove more effective is because the user is in a better position to understand what the agent is capable of doing|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | There is no pretence of a stupid agent pretending to be a smart human|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Assignment This assignment requires you to write a critique of the persuasive impact of virtual sales agents on customers. Consider what it would take for a virtual sales agent to be believable, trustworthy, and convincing, so that customers would be reassured and happy to buy something based on its recommendations|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | (a) Look at some e-commerce sites that use virtual sales agents (use a search engine to find sites or start with Miss Boo at boo.com, which was working at time of printing) and answer the following: What do the virtual agents do? What type of agent are they? Do they elicit an emotional response from you? If so, what is it? What kind of personality do they have? How is this expressed? What kinds of behavior do they exhibit? What are their facial expressions like? What is their appearance like? Is it realistic or cartoon-like? Where do they appear on the screen? How do they communicate with the user (text or speech)? Is the level of discourse patronizing or at the right level? Are the agents helpful in guiding the customer towards making a purchase? Are they too pushy? What gender are they? Do you think this makes a difference? Would you trust the agents to the extent that you would be happy to buy a product from them? If not, why not? What else would it take to make the agents persuasive? |
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Further reading 163 (b) Next, look at an e-commerce website that does not include virtual sales agents but is based on a conceptual model of browsing (e.g., Amazon.com). How does it compare with the agent-based sites you have just looked at? Is it easy to find information about products? What kind of mechanism does the site use to make recommendations and guide the user in making a purchase? Is any kind of personalization used at the interface to make the user feel welcome or special? Would the site be improved by having an agent? Explain your reasons either way|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | (c) Finally, discuss which site you would trust most and give your reasons for this|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Summary This chapter has described the different ways interactive products can be designed (both deliberately and inadvertently) to make people respond in certain ways. The extent to which users will learn, buy a product online, chat with others, and so on depends on how comfortable they feel when using a product and how well they can trust it. If the interactive product is frustrating to use, annoying, or patronizing, users easily get angry and despondent, and often stop using it. If, on the other hand, the system is a pleasure, enjoyable to use, and makes the users feel comfortable and at ease, then they are likely to continue to use it, make a purchase, return to the website, continue to learn, etc. This chapter has described various interface mechanisms that can be used to elicit positive emotional responses in users and ways of avoiding negative ones|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Key points Affective aspects of interaction design are concerned with the way interactive systems make people respond in emotional ways|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | Well-designed interfaces can elicit good feelings in people|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | Aesthetically pleasing interfaces can be a pleasure to use|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | Expressive interfaces can provide reassuring feedback to users as well as be informative and fun|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | Badly designed interfaces often make people frustrated and angry|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | Anthropomorphism is the attribution of human qualities to objects|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | An increasingly popular form of anthropomorphism is to create agents and other vixtual characters as part of an interface|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | People are more accepting of believable interface agents|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character|last: | People often prefer simple cartoon-like agents to those that attempt to be humanlike|
Virtual characters: agents 1 61 Figu , 162 Chapter 5 Understanding how interfaces affect users and movements as a way of conveying and drawing attention to an emotional state of a character| | Further reading TURKLE, S. (1995) Life on the Screen. New York: Simon and puter-based applications. Sherry Turkle discusses at length Schuster. This classic covers a range of social impact and af- how computers, the Internet, software, and the design of infective aspects of how users interact with a variety of corn- terfaces affect our identities. |
Virtual characters: agents 1 61 Figu , 164 Chapter 5 Understanding how interfaces affect users Two very good papers on interface agents can be found in MAES, P. (1995) Artificial life meets entertainment: lifelike Brenda Laurel's (ed.) The Art of Human-Computer Interface autonomous agents. Communications of the ACM, 38. (ll), Design (1990) Reading, MA.: Addison Wesley: 108-114. Pattie Maes has written extensively about the role and design of intelligent agents at the interface. This paper LAUREL, B. (1990) Interface agents: metaphor with charac- provides a good review of some of her work in this field| | 164 Chapter 5 Understanding how interfaces affect users Two very good papers on interface agents can be found in MAES, P. (1995) Artificial life meets entertainment: lifelike Brenda Laurel's (ed.) The Art of Human-Computer Interface autonomous agents. Communications of the ACM, 38. (ll), Design (1990) Reading, MA.: Addison Wesley: 108-114. Pattie Maes has written extensively about the role and design of intelligent agents at the interface. This paper LAUREL, B. (1990) Interface agents: metaphor with charac- provides a good review of some of her work in this field|
Virtual characters: agents 1 61 Figu , 164 Chapter 5 Understanding how interfaces affect users Two very good papers on interface agents can be found in MAES, P. (1995) Artificial life meets entertainment: lifelike Brenda Laurel's (ed.) The Art of Human-Computer Interface autonomous agents. Communications of the ACM, 38. (ll), Design (1990) Reading, MA.: Addison Wesley: 108-114. Pattie Maes has written extensively about the role and design of intelligent agents at the interface. This paper LAUREL, B. (1990) Interface agents: metaphor with charac- provides a good review of some of her work in this field| | ter, 355-366 Excerpts from a lively debate between Pattie Maes and Ben OREN. T., SALOMON, G., KREITMAN, K., AND DON. A. (1990) Shneiderman on "Direct manipulation vs. interface agents" Guides: characterizing the interface, 367-381 can be found ACM Interactions Magazine, 4 (6) (1997), 4241. |
Virtual characters: agents 1 61 Figu , 164 Chapter 5 Understanding how interfaces affect users Two very good papers on interface agents can be found in MAES, P. (1995) Artificial life meets entertainment: lifelike Brenda Laurel's (ed.) The Art of Human-Computer Interface autonomous agents. Communications of the ACM, 38. (ll), Design (1990) Reading, MA.: Addison Wesley: 108-114. Pattie Maes has written extensively about the role and design of intelligent agents at the interface. This paper LAUREL, B. (1990) Interface agents: metaphor with charac- provides a good review of some of her work in this field| | Chapter 6 The process of interaction design 6.1 Introduction 6.2 What is interaction design about? 6.2.1 Four basic activities of interaction design 6.2.2 Three key characteristics of the interaction design process 6.3 Some practical issues 6.3.1 Who are the users? 6.3.2 What do we mean by "needs"? 6.3.3 How do you generate alternative designs? 6.3.4 How do you choose among alternative designs? 6.4 Lifecycle models: showing how the activities are related 6.4.1 A simple lifecycle model for interaction design 6.4.2 Lifecycle models in software engineering 6.4.3 Lifecycle models in HCI 6.1. Introduction Design is a practical and creative activity, the ultimate intent of which is to develop a product that helps its users achieve their goals. In previous chapters, we looked at different kinds of interactive products, issues you need to take into account when doing interaction design and some of the theoretical basis for the field. This chapter is the first of four that will explore how we can design and build interactive products|
Virtual characters: agents 1 61 Figu , 164 Chapter 5 Understanding how interfaces affect users Two very good papers on interface agents can be found in MAES, P. (1995) Artificial life meets entertainment: lifelike Brenda Laurel's (ed.) The Art of Human-Computer Interface autonomous agents. Communications of the ACM, 38. (ll), Design (1990) Reading, MA.: Addison Wesley: 108-114. Pattie Maes has written extensively about the role and design of intelligent agents at the interface. This paper LAUREL, B. (1990) Interface agents: metaphor with charac- provides a good review of some of her work in this field| | Chapter 1 defined interaction design as being concerned with "designing interactive products to support people in their everyday and working lives." But how do you go about doing this? Developing a product must begin with gaining some understanding of what is required of it, but where do these requirements come from? Whom do you ask about them? Underlying good interaction design is the philosophy of user-centered design, i.e., involving users throughout development, but who are the users? Will they know what they want or need even if we can find them to ask? For an innovative product, users are unlikely to be able to envision what is possible, so where do these ideas come from? In this chapter, we raise and answer these kinds of questions and discuss the four basic activities and key characteristics of the interaction design process that |
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics| | 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics|
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics|last: | The main aims of this chapter are to: Consider what 'doing' interaction design involves|
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics|last: | Ask and provide answers for some important questions about the interaction design process|
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics|last: | Introduce the idea of a lifecycle model to represent a set of activities and how they are related|
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics| | Describe some lifecycle models from software engineering and HCI and discuss how they relate to the process of interaction design|
Virtual characters: agents 1 61 Figu , 166 Chapter 6 The process of interaction design were introduced in Chapter 1. We also introduce a lifecycle model of interaction design that captures these activities and characteristics|last: | Present a lifecycle model of interaction design|
What is interaction design about? Th ,  | 6.2 What is interaction design about? There are many fields of design, for example graphic design, architectural design, industrial and software design. Each discipline has its own interpretation of "designing." We are not going to debate these different interpretations here, as we are focussing on interaction design, but a general definition of "design" is informative in beginning to understand what it's about. The definition of design from the Oxford English Dictionary captures the essence of design very well: "(design is) a plan or scheme conceived in the mind and intended for subsequent execution." The act of designing therefore involves the development of such a plan or scheme. For the plan or scheme to have a hope of ultimate execution, it has to be informed with knowledge about its use and the target domain, together with practical constraints such as materials, cost, and feasibility. For example, if we conceived of a plan for building multi-level roads in order to overcome traffic congestion, before the plan could be executed we would have to consider drivers' attitudes to using such a construction, the viability of the structure, engineering constraints affecting its feasibility, and cost concerns|
What is interaction design about? Th ,  | In interaction design, we investigate the artifact's use and target domain by taking a user-centered ap'proach to development. This means that users' concerns direct the development rather than technical concerns|
What is interaction design about? Th ,  | Design is also about trade-offs, about balancing conflicting requirements. If we take the roads plan again, there may be very strong environmental arguments for stacking roads higher (less countryside would be destroyed), but these must be balanced against engineering and financial limitations that make the proposition less attractive. Getting the balance right requires experience, but it also requires the development and evaluation of alternative solutions. Generating alternatives is a key principle in most design disciplines, and one that should be encouraged in interaction design. As Marc Rettig suggested: "To get a good idea, get lots of ideas" (Rettig, 1994). However, this is not necessarily easy, and unlike many design disciplines, interaction designers are not generally trained to generate alternative designs|
What is interaction design about? Th ,  | However, the ability to brainstorm and contribute alternative ideas can be learned, and techniques from other design disciplines can be successfully used in interaction |
What is interaction design about? 16 ,  | 6.2 What is interaction design about? 167 I design. For example, Danis and Boies (2000) found that using techniques from graphic design that encouraged the generation of alternative designs stimulated innovative interactive systems design. See also the interview with Gillian Crampton Smith at the end of this chapter for her views on how other aspects of traditional design can help produce good interaction design|
What is interaction design about? 16 ,  | Although possible, it is unlikely that just one person will be involved in developing and using a system and therefore the plan must be communicated. This requires it to be captured and expressed in some suitable form that allows review, revision, and improvement. There are many ways of doing this, one of the simplest ~ being to produce a series of sketches. Other common approaches are to write a description in natural language, to draw a series of diagrams, and to build prototypes|
What is interaction design about? 16 ,  | A combination of these techniques is likely to be the most effective. When users are involved, capturing and expressing a design in a suitable format is especially important since they are unlikely to understand jargon or specialist notations. In fact, a form that users can interact with is most effective, and building prototypes of one form or another (see Chapter 8) is an extremely powerful approach|
What is interaction design about? 16 ,  | So interaction design involves developing a plan which is informed by the product's intended use, target domain, and relevant practical considerations. Alternative designs need to be generated, captured, and evaluated by users. For the evaluation to be successful, the design must be expressed in a form suitable for users to interact with|
What is interaction design about? 16 ,  | Imagine that you want to design an electronic calendar or diary for yourself. You might use this system to plan your time, record meetings and appointments, mark down people's birthdays, and so on, basically the kinds of things you might do with a paper-based calendar|
What is interaction design about? 16 ,  | Draw a sketch of the system outlining its functionality and its general look and feel. Spend about five minutes on this|
What is interaction design about? 16 ,  | Having produced an outline, now spend five minutes reflecting on how you went about tackling this activity. What did you do first? Did you have any particular artifacts or experience to base your design upon? What process did you go through? Comment The sketch I produced is shown in Figure 6.1. AS you can see, I was quite heavily influenced by the paper-based books I currently use! I had in mind that this calendar should allow me to record meetings and appointments, so I need a section representing the days and months|
What is interaction design about? 16 ,  | But I also need a section to take notes. I am a prolific note-taker, and so for me this was a key requirement. Then I began to wonder about how I could best use hyperlinks. I certainly want to keep addresses and telephone numbers in my calendar, so maybe there could be a link between, say, someone's name in the calendar and their entry in my address book that will give me their contact details when I need them? But I still want the ability to be able to turn page by page, for when I'm scanning or thinking about how to organize my time. A search facility would be useful too|
What is interaction design about? 16 ,  | The first thing that came into my head when I started doing this was my own paper-based book where I keep appointments, maps, telephone numbers, and other small notes. I also thought about my notebook and how convenient it would be to have the two combined|
What is interaction design about? 16 ,  | Then I sat and sketched different ideas about how it might look (although I'm not very good at sketching). The sketch in Figure 6.1 is the version I'm happiest with. Note that my sketch |
What is interaction design about? 16 , 168 Chapter 6 The process of interaction design link to address book i links always available link to notes section turn to next page Figure 6.1 An outline sketch of an electronic calendar| | 168 Chapter 6 The process of interaction design link to address book i links always available link to notes section turn to next page Figure 6.1 An outline sketch of an electronic calendar|
What is interaction design about? 16 , 168 Chapter 6 The process of interaction design link to address book i links always available link to notes section turn to next page Figure 6.1 An outline sketch of an electronic calendar| | has a strong resemblance to a paper-based book, yet I've also tried to incorporate electronic capabilities. Maybe once I have evaluated this design and ensured that the tasks I want to perform are supported, then I will be more receptive to changing the look away from a paper-based "look and feel." The exact steps taken to produce a product will vary from designer to designer, from product to product, and from organization to organization. In this activity, you may have started by thinking about what you'd like such a system to do for you, or you may have been thinking about an existing paper calendar. You may have mixed together features of different systems or other record-keeping support. Having got or arrived at an idea of what you wanted, maybe you then imagined what it might look like, either through sketching with paper and pencil or in your mind|
Four basic activities of interacti ,  | 6.2.1 Four basic activities of interaction design Four basic activities for interaction design were introduced in Chapter 1, some of which you will have engaged in when doing Activity 6.1. These are: identifying needs and establishing requirements, developing alternative designs that meet those requirements, building interactive versions so that they can be communicated and assessed, and evaluating them, i.e., measuring their acceptability. They are fairly generic activities and can be found in other designs disciplines too. For example, in architectural design (RIBA, 1988) basic requirements are established in a work stage called "inception", alternative design options are considered in a "feasibility" stage and "the brief" is developed through outline proposals and scheme de- |
What is interaction design about? 16 ,  | 6.2 What is interaction design about? 169 sign. During this time, prototypes may be built or perspectives may be drawn to give clients a better indication of the design being developed. Detail design specifies all components, and working drawings are produced. Finally, the job arrives on site and building commences|
What is interaction design about? 16 ,  | We will be expanding on each of the basic activities of interaction design in the next two chapters. Here we give only a brief introduction to each|
What is interaction design about? 16 ,  | Identifying needs and establishing requirements In order to design something to support people, we must know who our target users are and what kind of support an interactive product could usefully provide|
What is interaction design about? 16 ,  | These needs form the basis of the product's requirements and underpin subsequent design and development. This activity is fundamental to a user-centered approach, and is very important in interaction design; it is discussed further in Chapter 7|
What is interaction design about? 16 ,  | Developing alternative designs This is the core activity of designing: actually suggesting ideas for meeting the requirements|
What is interaction design about? 16 ,  | This activity can be broken up into two sub-activities: conceptual design and physical design. Conceptual design involves producing the conceptual model for the ~roduct, and a conceptual model describes what the product should do, behave and look like. Physical design considers the detail of the product including the colors, sounds, and images to use, menu design, and icon design. Alternatives are considered at every point. You met some of the ideas for conceptual design in Chapter 2; we go into more detail about conceptual and physical design in Chapter 8|
What is interaction design about? 16 ,  | Building interactive versions of the designs Interaction design involves designing interactive products. The most sensible way for users to evaluate such designs, then, is to interact with them. This requires an interactive version of the designs to be built, but that does not mean that a software version is required. There are different techniques for achieving "interaction," not all of which require a working piece of software. For example, paper-based prototypes are very quick and cheap to build and are very effective for identifying problems in the early stages of design, and through role-playing users can get a real sense of what it will be like to interact with the product. This aspect is also covered in Chapter 8|
What is interaction design about? 16 ,  | Evaluating designs Evaluation is the process of determining the usability and acceptability of the product or design that is measured in terms of a variety of criteria including the number of errors users make using it, how appealing it is, how well it matches the requirements, and so on. Interaction design requires a high level of user involvement throughout development, and this enhances the chances of an acceptable product being delivered|
What is interaction design about? 16 , last: | In most design situations you will find a number of activities concerned with |
What is interaction design about? 16 , 170 Chapter 6 The process of interaction design I quality assurance and testing to make sure that the final product is "fit-for-purpose." Evaluation does not replace these activities, but complements and enhances them| | 170 Chapter 6 The process of interaction design I quality assurance and testing to make sure that the final product is "fit-for-purpose." Evaluation does not replace these activities, but complements and enhances them|
What is interaction design about? 16 , 170 Chapter 6 The process of interaction design I quality assurance and testing to make sure that the final product is "fit-for-purpose." Evaluation does not replace these activities, but complements and enhances them|last: | We devote Chapters 10 through 14 to the important subject of evaluation|
What is interaction design about? 16 , 170 Chapter 6 The process of interaction design I quality assurance and testing to make sure that the final product is "fit-for-purpose." Evaluation does not replace these activities, but complements and enhances them| | The activities of developing alternative designs, building interactive versions of the design, and evaluation are intertwined: alternatives are evaluated through the interactive versions of the designs and the results are fed back into further design|
What is interaction design about? 16 , 170 Chapter 6 The process of interaction design I quality assurance and testing to make sure that the final product is "fit-for-purpose." Evaluation does not replace these activities, but complements and enhances them| | This iteration is one of the key characteristics of the interaction design process, which we introduced in Chapter 1|
Three key characteristics of the i ,  | 6.2.2 Three key characteristics of the interaction design process I There are three characteristics that we believe should form a key part of the interaction design process. These are: a user focus, specific usability criteria, and iteration|
Three key characteristics of the i ,  | The need to focus on users has been emphasized throughout this book, so you will not be surprised to see that it forms a central plank of our view on the interaction design process. While a process cannot, in itself, guarantee that a development will involve users, it can encourage focus on such issues and provide opportunities for evaluation and user feedback. I Specific usability and user experience goals should be identified, clearly documented, and agreed upon at the beginning of the project. They help designers to choose between different alternative designs and to check on progress as the product is developed|
Three key characteristics of the i ,  | Iteration allows designs to be refined based on feedback. As users and designers engage with the domain and start to discuss requirements, needs, hopes and aspirations, then different insights into what is needed, what will help, and what is feasible will emerge. This leads to a need for iteration, for the activities to inform each other and to be repeated. However good the designers are and however clear the users may think their vision is of the required artifact, it will be necessary to revise ideas in light of feedback, several times. This is particularly true if you are trying to innovate. Innovation rarely emerges whole and ready to go. It takes time, evolution, trial and error, and a great deal of patience. Iteration is inevitable because designers never get the solution right the first time (Gould and Lewis, 1985)|
Three key characteristics of the i , last: | We shall return to these issues and expand upon them in Chapter 9|
Some practical issues Before we cons ,  | 6.3 Some practical issues Before we consider hbw the activities and key characteristics of interaction design can be pulled together into a coherent process, we want to consider some questions highlighted by the discussion so far. These questions must be answered if we are going to be able to "do" interaction design in practice. These are: Who are the users? What do we mea; by needs? How do you generate alternative designs? How do you choose among alternatives? |
Some practical issues 1 71 6.3.1 Who ,  | 6.3 Some practical issues 1 71 6.3.1 Who are the users? In Chapter 1, we said that an overarching objective of interaction design is to optimize the interactions people have with computer-based products, and that this requires us to support needs, match wants, and extend capabilities. We also stated above that the activity of identifying these needs and establishing requirements was fundamental to interaction design. However, we can't hope to get very far with this intent until we know who the users are and what they want to achieve. As a starting point, therefore, we need to know who we consult to find out the users' requirements and needs|
Some practical issues 1 71 6.3.1 Who ,  | Identifying the users may seem like a straightforward activity, but in fact there are many interpretations of "user." The most obvious definition is those people who interact directly with the product to achieve a task. Most people would agree with this definition; however, there are others who can also be thought of as users. For example, Holtzblatt and Jones (1993) include in their definition of "users" those who manage direct users, those who receive products from the system, those who test the system, those who make the purchasing decision, and those who use competitive products. Eason (1987) identifies three categories of user: primary, secondary and tertiary. Primary users are those likely to be frequent hands-on users of the system; secondary users are occasional users or those who use the system through an intermediary; and tertiary users are those affected by the introduction of the system or who will influence its purchase|
Some practical issues 1 71 6.3.1 Who ,  | The trouble is that there is a surprisingly wide collection of people who all have a stake in the development of a successful product. These people are called stakeholders. Stakeholders are "people or organizations who will be affected by the system and who have a direct or indirect influence on the system requirements" (Kotonya and Sommerville, 1998). Dix et al. (1993) make an observation that is very pertinent to a user-centered view of development, that "It will frequently be the case that the formal 'client' who orders the system falls very low on the list of those affected. Be very wary of changes which take power, influence or control from some stakeholders without returning something tangible in its place." Generally speaking, the group of stakeholders for a particular product is going to be larger than the group of people you'd normally think of as users, although it will of course include users. Based on the definition above, we can see that the group of stakeholders includes the development team itself as well as its managers, the direct users and their managers, recipients of the product's output, people who may lose their jobs because of the introduction of the new product, and so on|
Some practical issues 1 71 6.3.1 Who ,  | For example, consider again the calendar system in Activity 6.1. According to the description we gave you, the user group for the system has just one member: you. However, the stakeholders for the system would also include people you make appointments with, people whose birthdays you remember, and even companies that produce paper-based calendars, since the introduction of an electronic calendar may increase competition and force them to operate differently. |
Some practical issues 1 71 6.3.1 Who , 172 Chapter 6 The process of interaction design This last point may seem a little exaggerated for just one system, but if you think of others also migrating to an electronic version, and abandoning their paper calendars, then you can see how the companies may be affected by the introduction of the system| | 172 Chapter 6 The process of interaction design This last point may seem a little exaggerated for just one system, but if you think of others also migrating to an electronic version, and abandoning their paper calendars, then you can see how the companies may be affected by the introduction of the system|
Some practical issues 1 71 6.3.1 Who , 172 Chapter 6 The process of interaction design This last point may seem a little exaggerated for just one system, but if you think of others also migrating to an electronic version, and abandoning their paper calendars, then you can see how the companies may be affected by the introduction of the system| | The net of stakeholders is really quite wide! We do not suggest that you need to involve all of the stakeholders in your user-centered approach, but it is important to be aware of the wider impact of any product you are developing. Identifying the stakeholders for your project means that you can make an informed decision about who should be involved and to what degree|
Some practical issues 1 71 6.3.1 Who , 172 Chapter 6 The process of interaction design This last point may seem a little exaggerated for just one system, but if you think of others also migrating to an electronic version, and abandoning their paper calendars, then you can see how the companies may be affected by the introduction of the system| | Who do you think are the stakeholders for the check-out system of a large supermarket? Comment First, there are the check-out operators. These are the people who sit in front of the machine and pass the customers' purchases over the bar code reader, receive payment, hand over receipts, etc. Their stake in the success and usability of the system is fairly clear and direct|
Some practical issues 1 71 6.3.1 Who , 172 Chapter 6 The process of interaction design This last point may seem a little exaggerated for just one system, but if you think of others also migrating to an electronic version, and abandoning their paper calendars, then you can see how the companies may be affected by the introduction of the system| | Then you have the customers, who want the system to work properly so that they are charged the right amount for the goods, receive the correct receipt, are served quickly and efficiently. Also, the customers want the check-out operators to be satisfied and happy in their work so that they don't have to deal with a grumpy assistant. Outside of this group, you then have supermarket managers and supermarket owners, who also want the assistants to be happy and efficient and the customers to be satisfied and not complaining. They also don't want to lose money because the system can't handle the payments correctly. Other people who will be affected by the success of the system include other supermarket employees such as warehouse staff, supermarket suppliers, supermarket owners' families, and local shop owners whose business would be affected by the success or failure of the system. We wouldn't suggest that you should ask the local shop owner about requirements for the supermarket check-out system. However, you might want to talk to warehouse staff, especially if the system links in with stock control or other functions|
What do we mean by "needs"? If you ,  | 6.3.2 What do we mean by "needs"? If you had asked someone in the street in the late 1990s what she 'needed', I doubt that the answer would have included interactive television, or a jacket which was wired for communication, or a smart fridge. If you presented the same person with these possibilities and asked whether she would buy them if they were available, then the answer would have been different. When we talk about identifying needs, therefore, it's not simply a question of asking people, "What do you need?" and then supplying it, because people don't necessarily know what is possible (see Suzanne Robertson's interview at the end of Chapter 7 for "un-dreamed-of" requirements)|
What do we mean by "needs"? If you ,  | Instead, we have to approach it by understanding the characteristics and capabilities of the users, what they are trying to achieve, how they achieve it currently, and whether they would achieve their goals more effectively if they were supported differently|
What do we mean by "needs"? If you ,  | There are many dimensions along which a user's capabilities and characteristics may vary, and that will have an impact on the product's design. You have met |
Some practical issues 173 some of th ,  | 6.3 Some practical issues 173 some of these in Chapter 3. For example, a person's physical characteristics may affect the design: size of hands may affect the size and positioning of input buttons, and motor abilities may affect the suitability of certain input and output devices; height is relevant in designing a physical kiosk, for example; and strength in designing a child's toy-a toy should not require too much strength to operate, but may require strength greater than expected for the target age group to change batteries or perform other operations suitable only for an adult. Cultural diversity and experience may affect the terminology the intended user group is used to, or how nervous about technology a set of users may be|
Some practical issues 173 some of th ,  | If a product is a new invention, then it can be difficult to identify the users and representative tasks for them; e.g., before microwave ovens were invented, there were no users to consult about requirements and there were no representative tasks to identify. Those developing the oven had to imagine who might want to use such an oven and what they might want to do with it|
Some practical issues 173 some of th ,  | It may be tempting for designers simply to design what they would like, but their ideas would not necessarily coincide with those of the target user group. It is imperative that representative users from the real target group be consulted. For example, a company called Netpliance was developing a new "Internet appliance," i.e., a product that would seamlessly integrate all the services necessary for the user to achieve a specific task on the Internet (Isensee et al., 2000). They took a user-centered approach and employed focus group studies and surveys to understand their customers' needs. The marketing department led these efforts, but developers observed the focus groups to learn more about their intended user group|
Some practical issues 173 some of th ,  | Isensee et al. (p. 60) observe that "It is always tempting for developers to create products they would want to use or similar to what they have done before. However, in the Internet appliance space, it was essential to develop for a new audience that desires a simpler product than the computer industry has previously provided." In these circumstances, a good indication of future behavior is current or past behavior. So it is always useful to start by understanding similar behavior that is already established. Apart from anything else, introducing something new into people's lives, especially a new "everyday" item such as a microwave oven, requires a culture change in the target user population, and it takes a long time to effect a culture change. For example, before cell phones were so widely available there were no users and no representative tasks available for study, per se|
Some practical issues 173 some of th ,  | But there were standard telephones and so understanding the tasks people perform with, and in connection with, standard telephones was a useful place to start. Apart from making a telephone call, users also look up people's numbers, take messages for others not currently available, and find out the number of the last person to ring them. These kinds of behavior have been translated into memories for the telephone, answering machines, and messaging services for mobiles. In order to maximize the benefit of e-commerce sites, traders have found that referring back to customers' non-electronic habits and behaviors can be a good basis for enhancing e-commerce activity (CHI panel, 2000; Lee et al., 2000). |
Some practical issues 173 some of th ,  | I 174 Chapter 6 The process of interaction design 6.3.3 How do you generate alternative designs? A common human tendency is to stick with something that we know works. We probably recognize that a better solution may exist out there somewhere, but it's very easy to accept this one because we know it works-it's "good enough." Settling for a solution that is good enough is not, in itself, necessarily "bad," but it may be undesirable because good alternatives may never be considered, and considering alternative solutions is a crucial step in the process of design. But where do these alternative ideas come from? One answer to this question is that they come from the individual designer's flair and creativity. While it is certainly true that some people are able to produce wonderfully inspired designs while others struggle to come up with any ideas at all, very little in this world is completely new. Normally, innovations arise through cross-fertilization of ideas from different applications, the evolution of an existing product through use and observation, or straightforward copying of other, similar products. For example, if you think of something commonly believed to be an "invention," such as the steam engine, this was in fact inspired by the observation that the steam from a kettle boiling on the stove lifted the lid. Clearly there was an I amount of creativity and engineering involved in making the jump from a boiling kettle to a steam engine, but the kettle provided the inspiration to translate experi- I ence gained in one context into a set of principles that could be applied in another|
Some practical issues 173 some of th ,  | As an example of evolution, consider the word processor. The capabilities of suites of office software have gradually increased from the time they first appeared. Initially, a word processor was just an electronic version of a typewriter, but gradually other capabilities, including the spell-checker, thesaurus, style sheets, graphical capabilities, etc., were added. |
Some practical issues 1 75 So althou ,  | 6.3 Some practical issues 1 75 So although creativity and invention are often wrapped in mystique, we do understand something of the process and of how creativity can be enhanced or inspired|
Some practical issues 1 75 So althou ,  | We know, for instance, that browsing a collection of designs will inspire designers to consider alternative perspectives, and hence alternative solutions. The field of case-based reasoning (Maher and Pu, 1997) emerged from the observation that designers solve new problems by drawing on knowledge gained from solving previous similar problems. As Schank (1982; p. 22) puts it, "An expert is someone who gets reminded of just the right prior experience to help him in processing his current experiences." And while those experiences may be the designer's own, they can equally well be others'|
Some practical issues 1 75 So althou ,  | A more pragmatic answer to this question, then, is that alternatives come from looking at other, similar designs, and the process of inspiration and creativity can be enhanced by prompting a designer's own experience and by looking at others' ideas and solutions. Deliberately seeking out suitable sources of inspiration is a valuable step in any design process. These sources may be very close to the intended new product, such as competitors' products, or they may be earlier versions of similar systems, or something completely different|
Some practical issues 1 75 So althou ,  | nsider again the calendar system introduced at the beginning of the chapter. Reflecting the process again, what do you think inspired your outline design? See if you can identify any elements within it that you believe are truly innovative|
Some practical issues 1 75 So althou ,  | Comment For my design, I haven't seen an electronic calendar, although I have seen plenty of other software-based systems. My main sources of inspiration were my current paper-based books|
Some practical issues 1 75 So althou ,  | Some of the things you might have been thinking of include your existing paper-based calendar, and other pieces of software you commonly use and find helpful or easy to use in some way. Maybe you already have access to an electronic calendar, which will have given you some ideas, too. However, there are probably other aspects that make the design somehow unique to you and may be innovative to a greater or lesser degree|
Some practical issues 1 75 So althou ,  | All this having been said, under some circumstances the scope to consider alternative designs may be limited. Design is a process of balancing constraints and constantly trading off one set of requirements with another, and the constraints may be such that there are very few viable alternatives available. As another example, if you are designing a software system to run under the Windows operating system, then elements of the design will be prescribed because you must conform to the Windows "look and feel," and to other constraints intended to make Windows programs consistent for the user. We shall return to style guides and standards in Chapter 8|
Some practical issues 1 75 So althou ,  | If you are producing an upgrade to an existing system, then you may face other constraints, such as wanting to keep the familiar elements of it and retain the same "look and feel." However, this is not necessarily a rigid rule. Kent Sullivan reports that when designing the Windows 95 operating system to replace the Windows 3.1 and Windows for Workgroups 3.11 operating systems, they initially focused too much on consistency with the earlier versions (Sullivan, 1996). |
Some practical issues 1 75 So althou , 176 Chapter 6 The process of interaction design |last: | 176 Chapter 6 The process of interaction design |
Some practical issues 1 75 So althou , 1 6.3 Some ~ractical issues 1 77 |last: | 1 6.3 Some ~ractical issues 1 77 |
Some practical issues 1 75 So althou , 1 6.3 Some ~ractical issues 1 77 |last: | - - - - - - - - - - - - 178 Chapter 6 The process of interaction design |
Some practical issues 179 6.3.4 How  ,  | 6.3 Some practical issues 179 6.3.4 How do you choose among alternative designs? Choosing among alternatives is about making design decisions: Will the device use keyboard entry or a touch screen? Will the device provide an automatic memory function or not? These decisions will be informed by the information gathered about users and their tasks, and by the technical feasibility of an idea. Broadly speaking, though, the decisions fall into two categories: those that are about externally visible and measurable features, and those that are about characteristics internal to the system that cannot be observed or measured without dissecting it|
Some practical issues 179 6.3.4 How  ,  | For example, externally visible and measurable factors for a building design include the ease of access to the building, the amount of natural light in rooms, the width of corridors, and the number of power outlets. In a photocopier, externally visible and measurable factors include the physical size of the machine, the speed and quality of copying, the different sizes of paper it can use, and so on. Underlying each of these factors are other considerations that cannot be observed or studied without dissecting the building or the machine. For example, the number of |
Some practical issues 179 6.3.4 How  ,  | I 180 Chapter 6 The process of interaction design power outlets will be dependent on how the wiring within the building is designed and the capacity of the main power supply; the choice of materials used in a photocopier may depend on its friction rating and how much it deforms under certain conditions|
Some practical issues 179 6.3.4 How  ,  | In an interactive product there are similar factors that are externally visible and measurable and those that are hidden from the users' view. For example, exactly why the response time for a query to a database (or a web page) is, say, 4 seconds will almost certainly depend on technical decisions made when the database was constructed, but from the users' viewpoint the important observation is the fact that it does take 4 seconds to respond|
Some practical issues 179 6.3.4 How  ,  | In interaction design, the way in which the users interact with the product is considered the driving force behind the design and so we concentrate on the externally visible and measurable behavior. Detailed internal workings are important only to the extent that they affect the external behavior. This does,not mean that design decisions concerning a system's internal behavior are any less important: however, the tasks that the user will perform should influence design decisions no less than technical issues|
Some practical issues 179 6.3.4 How  ,  | So, one answer to the question posed above is that we choose between alternative designs by letting users and stakeholders interact with them and by discussing their experiences, preferences and suggestions for improvement. This is fundamental to a user-centered approach to development. This in turn means that the designs must be available in a form that can be reasonably evaluated with users, not in technical jargon or notation that seems impenetrable to them|
Some practical issues 179 6.3.4 How  ,  | One form traditionally used for communicating a design is documentation, e.g., a description of how something will work or a diagram showing its components|
Some practical issues 179 6.3.4 How  ,  | The trouble is that a static description cannot capture the dynamics of behavior, and for an interaction device we need to communicate to the users what it will be like to actually operate it|
Some practical issues 179 6.3.4 How  ,  | In many design disciplines, prototyping is used to overcome potential client misunderstandings and to test the technical feasibility of a suggested design and its production. Prototyping involves producing a limited version of the product with the purpose of answering specific questions about the design's feasibility or appropriateness|
Some practical issues 179 6.3.4 How  ,  | Prototypes give a better impression of the user experience than simple descriptions can ever do, and there are different kinds of prototyping that are suitable for different stages of development and for eliciting different kinds of information|
Some practical issues 179 6.3.4 How  ,  | One experience illustrating the benefits of prototyping is described in Box 6.2. So one important aspect of choosing among alternatives is that prototypes should be built and evaluated by users. We'll revisit the issue of prototyping in Chapter 8|
Some practical issues 179 6.3.4 How  ,  | Another basis on which to choose between alternatives is "quality," but this requires a clear understanding of what "quality" means. People's views of what is a quality product vary, and we don't always write it down. Whenever we use anything we have some notion of the level of quality we are expecting, wanting, or needing. Whether this level of quality is expressed formally or informally does not matter. The point is that it exists and we use it consciously or subconsciously to evaluate alternative items. For example, if you have to wait too long to download |
Some practical issues 181 a web page ,  | 6.3 Some practical issues 181 a web page, then you are likely to give up and try a different site-you are applying a certain measure of quality associated with the time taken to download the web page. If one cell phone makes it easy to perform a critical function while another involves several complicated key sequences, then you are likely to buy the former rather than the latter. You are applying a quality criterion concerned with efficiency|
Some practical issues 181 a web page ,  | Now, if you are the only user of a product, then you don't necessarily have to express your definition of "quality" since you don't have to communicate it to anyone else. However, as we have seen, most projects involve many different stakeholder groups, and you will find that each of them has a different definition of quality and different acceptable limits for it. For example, although all stakeholders may agree on targets such as "response time will be fast" or "the menu structure will be easy to use," exactly what each of them means by this is likely to vary. Disputes are inevitable when, later in development, it transpires that "fast" to one set of stakeholders meant "under a second," while to another it meant "between 2 and 3 seconds." Capturing these different views in clear unambiguous language early in development takes you halfway to producing a product that will be regarded as "good" by all your stakeholders. It helps to clarify expectations, provides a benchmark against which products of the development process can be measured, and gives you a basis on which to choose among alternatives|
Some practical issues 181 a web page ,  | The process of writing down formal, verifiable-and hence measurable-usability criteria is a key characteristic of an approach to interaction design called usability engineering that has emerged over many years and with various proponents (Whiteside |
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | Consider the calendar system that you designed in Activity 6.1. Suggest some usability criteria that you could use to determine the calendar's quality. You will find it helpful to think in terms of the usability goals introduced in Chapter 1: effectiveness, efficiency, safety, utility, learnability, and memorability. Be as specific as possible. Check your criteria by considering exactly what you would measure and how you would measure its performance|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | Having done that, try to do the same thing for the user experience goals introduced in Chapter 1; these relate to whether a system is satisfying, enjoyable, motivating, rewarding, and so on|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | Comment Finding measurable characteristics for some of these is not easy. Here are some suggestions, but you may have found others. Note that the criteria must be measurable and very specific|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | Effectiveness: Identifying measurable criteria for this goal is particularly difficult since it is a combination of the other goals. For example, does the system support you in keeping appointments, taking notes, and so on. In other words, is the calendar used? EBciency: Assuming that there is a search facility in the calendar, what is the response time for finding a specific day or a specific appointment? Safety: How often does data get lost or does the user press the wrong button? This may be measured, for example, as the number of times this happens per hour of use|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | Utility: How many functions offered by the calendar are used every day, how many every week, how many every month? How many tasks are difficult to complete in a reasonable time because functionality is missing or the calendar doesn't support the right subtasks? Learnability: How long does it take for a novice user to be able to do a series of set tasks, e.g., make an entry into the calendar for the current date, delete an entry from the current date, edit an entry in the following day? Memorability: If the calendar isn't used for a week, how many functions can you remember how to perform? How long does it take you to remember how to perform your most frequent task? Finding measurable characteristics for the user experience criteria is even harder, though|
Some practical issues 181 a web page , 182 Chapter 6 The process of interaction design et al., 1988; Nielsen, 1993). Usability engineering involves specifying quantifiable measures of product performance, documenting them in a usability specification, and assessing the product against them. One way in which this approach is used is to make changes to subsequent versions of a system based on feedback from carefully documented results of usability tests for the earlier version. We shall return to this idea later when we discuss evaluation| | How do you measure satisfaction, fun, motivation or aesthetics? What is entertaining to one person may be boring to another; these kinds of criteria are subjective, and so cannot be measured objectively|
Lifecycle models: showing how the ac ,  | 6.4 Lifecycle models: showing how the activities are related Understanding what activities are involved in interaction design is the first step to being able to do it, but it is also important to consider how the activities are related |
Lifecycle models: showing how the ac ,  | 6.4 Lifecycle models: showing how the activities relate 183 to one another so that the full development process can be seen. The term lifecycle model1 is used to represent a model that captures a set of activities and how they are related. Sophisticated models also incorporate a description of when and how to move from one activity to the next and a description of the deliverables for each activity. The reason such models are popular is that they allow developers, and particularly managers, to get an overall view of the development effort so that progress can be tracked, deliverables specified, resources allocated, targets set, and SO on|
Lifecycle models: showing how the ac ,  | Existing models have varying levels of sophistication and complexity. For projects involving only a few experienced developers, a simple process would probably be adequate. However, for larger systems involving tens or hundreds of developers with hundreds or thousands of users, a simple process just isn't enough to provide the management structure and discipline necessary to engineer a usable product|
Lifecycle models: showing how the ac ,  | So something is needed that will provide more formality and more discipline. Note that this does not mean that innovation is lost or that creativity is stifled. It just I means that a structured process is used to provide a more stable framework for creativity|
Lifecycle models: showing how the ac ,  | However simple or complex it appears, any lifecycle model is a simplified version of reality. It is intended as an abstraction and, as with any good abstraction, only the amount of detail required for the task at hand should be included|
Lifecycle models: showing how the ac ,  | Any organization wishing to put a lifecycle model into practice will need to add detail specific to its particular circumstances and culture. For example, Microsoft wanted to maintain a small-team culture while also making possible the development of very large pieces of software. To this end, they have evolved a process that has been called "synch and stabilize," as described in Box 6.3|
Lifecycle models: showing how the ac ,  | In the next subsection, we introduce our view of what a lifecycle model for interaction design might look like that incorporates the four activities and the three key characteristics of the interaction design process discussed above. This will form the basis of our discussion in Chapters 7 and 8. Depending on the kind of system being developed, it may not be possible or appropriate to follow this model for every element of the system, and it is certainly true that more detail would be required to put the lifecycle into practice in a real project|
Lifecycle models: showing how the ac ,  | Many other lifecycle models have been developed in fields related to interaction design, such as software engineering and HCI, and our model is evolved from these ideas. To put our interaction design model into context we include here a description of five lifecycle models, three from software engineering and two from HCI, and consider how they relate to it|
Lifecycle models: showing how the ac ,  | 'Somme~ille (2001) uses the term process model to mean what we call a lifecycle model, and refers to the waterfall model as the software lifecycle. Pressman (1992) talks about paradigms. In HCI the term "lifecycle model" is used more widely. For this reason, and because others use "process model" to represent something that is more detailed than a lifecycle model (e.g., Comer, 1997) we have chosen to use lifecycle model. |
Lifecycle models: showing how the ac , 184 Chapter 6 The process of interaction design |last: | 184 Chapter 6 The process of interaction design |
Lifecycle models: showing how the ac , last: | 6.4 Lifecycle models: showing how the activities relate 185 |
Lifecycle models: showing how the ac ,  | I 186 Chapter 6 The process of interaction design I 6.4.1 A simple lifecycle model for interaction design We see the activities of interaction design as being related as shown in Figure 6.7|
Lifecycle models: showing how the ac ,  | This model incorporates iteration and encourages a user focus. While the outputs from each activity are not specified in the model, you will see in Chapter 7 that our description of establishing requirements includes the need to identify specific usability criteria|
Lifecycle models: showing how the ac ,  | The model is not intended to be prescriptive; that is, we are not suggesting that this is how all interactive products are or should be developed. It is based on our observations of interaction design and on information we have gleaned in the research for this book. It has its roots in the software engineering and HCI Iifecycle models described below, and it represents what we believe is practiced in the field|
Lifecycle models: showing how the ac ,  | Most projects start with identifying needs and requirements. The project may have arisen because of some evaluation that has been done, but the lifecycle of the new (or modified) product can be thought of as starting at this point. From this activity, some alternative designs are generated in an attempt to meet the needs and requirements that have been identified. Then interactive versions of the designs are developed and evaluated. Based on the feedback from the evaluations, the team may need to return to identifying needs or refining requirements, or it may go straight into redesigning. It may be that more than one alternative design follows this iterative cycle in parallel with others, or it may be that one alternative at a time is considered. Implicit in this cycle is that the final product will emerge in an evolutionary fashion from a rough initial idea through to the finished product. Exactly how this evolution happens may vary from project to project, and we return to this issue in Chapter 8. The only factor limiting the number of times through the cycle is the resources available, but whatever the number is, development ends with an evaluation activity that ensures the final product meets the prescribed usability criteria|
Lifecycle models: showing how the ac , last: | Final product Figure 6.7 A simple interaction design model. |
Lifecycle models: showing how the ac ,  | 6.4 Lifecycle models: showing how the activities relate 187 I 6.4.2 Lifecycle models in software engineering I Software engineering has spawned many lifecycle models, including the waterfall, the spiral, and rapid applications development (RAD). Before the waterfall was first proposed in 1970, there was no generally agreed approach to software development, but over the years since then, many models have been devised, reflecting in part the wide variety of approaches that can be taken to developing software. We choose to include these specific lifecycle models for two reasons: First, because they are representative of the models used in industry and they have all proved to be successful, and second, because they show how the emphasis in software development has gradually changed to include a more iterative, 1 user-centered view|
Lifecycle models: showing how the ac ,  | The waterfall lifecycle model The waterfall lifecycle was the first model generally known in software engineering and forms the basis of many lifecycles in use today. This is basically a linear model in which each step must be completed before the next step can be started (see Figure 6.8). For example, requirements analysis has to be completed before Figure 6.8 The waterfall lifecycle model of software development. |
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | Some feedback to earlier stages was acknowledged as desirable and indeed practical soon after this lifecycle became widely used (Figure 6.8 does show some limited feedback between phases). But the idea of iteration was not embedded in the waterfall's philosophy. Some level of iteration is now incorporated in most versions of the waterfall, and review sessions among developers are commonplace|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed|last: | However, the opportunity to review and evaluate with users was not built into this model|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | The spiral lifecycle model For many years, the waterfall formed the basis of most software developments, but in 1988 Barry Boehm (1988) suggested the spiral model of software development (see Figure 6.9). Two features of the spiral model are immediately clear from Figure 6.9: risk analysis and prototyping. The spiral model incorporates them in an iterative framework that allows ideas and progress to be repeatedly checked and evaluated. Each iteration around the spiral may be based on a different lifecycle model and may have different activities|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | In the spiral's case, it was not the need for user involvement that inspired the introduction of iteration but the need to identify and control risks. In Boehm's approach, development plans and specifications that are focused on the risks involved in developing the system drive development rather than the intended functionality, as was the case with the waterfall. Unlike the waterfall, the spiral explicitly encourages alternatives to be considered, and steps in which problems or potential problems are encountered to be re-addressed|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | The spiral idea has been used by others for interactive devices (see Box 6.4). A more recent version of the spiral, called the WinWin spiral model (Boehm et al., 1998), explicitly incorporates the identification of key stakeholders and their respective "win" conditions, i.e., what will be regarded as a satisfactory outcome for each stakeholder group. A period of stakeholder negotiation to ensure a "win-win" result is included|
Lifecycle models: showing how the ac , 188 Chapter 6 The process of interaction design design can begin. The names given to these steps varies, as does the precise definition of each one, but basically, the lifecycle starts with some requirements analysis, moves into design, then coding, then implementation, testing, and finally maintenance. One of the main flaws with this approach is that requirements change over time, as businesses and the environment in which they operate change rapidly. This means that it does not make sense to freeze requirements for months, or maybe years, while the design and implementation are completed| | Rapid Applications Development (RAD) During the 1990s the drive to focus upon users became stronger and resulted in a number of new approaches to development. The Rapid Applications Development (RAD) approach attempts to take a user-centered view and to minimize the risk caused by requirements changing during the course of the project. The ideas be- |
Lifecycle models: showing how the ac ,  | 6.4 Lifecycle models: showing how the activities relate 189 Review Cumulative through steps ----___ Plan next phases Develop, verify next-level product Figure 6.9 The spiral lifecycle model of software development|
Lifecycle models: showing how the ac ,  | hind RAD began to emerge in the early 1990s, also in response to the inappropriate nature of the linear lifecycle models based on the waterfall. Two key features of a RAD project are: Time-limited cycles of approximately six months, at the end of which a system or partial system must be delivered. This is called time-boxing. In effect, this breaks down a large project into many smaller projects that can deliver products incrementally, and enhances flexibility in terms of the development techniques used and the maintainability of the final system. |
Lifecycle models: showing how the ac , 190 Chapter 6 The process of interaction design JAD (Joint Application Development) workshops in which users and developers come together to thrash out the requirements of the system (Wood and Silver, 1995). These are intensive requirements-gathering sessions in which difficult issues are faced and decisions are made. Representatives from each identified stakeholder group should be involved in each workshop so that all the relevant views can be heard| | 190 Chapter 6 The process of interaction design JAD (Joint Application Development) workshops in which users and developers come together to thrash out the requirements of the system (Wood and Silver, 1995). These are intensive requirements-gathering sessions in which difficult issues are faced and decisions are made. Representatives from each identified stakeholder group should be involved in each workshop so that all the relevant views can be heard|
Lifecycle models: showing how the ac , 190 Chapter 6 The process of interaction design JAD (Joint Application Development) workshops in which users and developers come together to thrash out the requirements of the system (Wood and Silver, 1995). These are intensive requirements-gathering sessions in which difficult issues are faced and decisions are made. Representatives from each identified stakeholder group should be involved in each workshop so that all the relevant views can be heard| | A basic RAD lifecycle has five phases (see Figure 6.10): project set-up, JAD workshops, iterative design and build, engineer and test final prototype, implementation review. The popularity of RAD has led to the emergence of an industrystandard RAD-based method called DSDM (Dynamic Systems Development Method) (Millington and Stapleton, 1995). This was developed by a non-profit-making DSDM consortium made up of a group of companies that recognized the need for some standardization in the field. The first of nine principles stated as underlying DSDM is that "active user involvement is imperative." The DSDM lifecycle is more complicated than the one we've shown here. It involves five phases: feasibility study, business study, functional model iteration, design and build iteration, and implementation|
Lifecycle models: showing how the ac , 190 Chapter 6 The process of interaction design JAD (Joint Application Development) workshops in which users and developers come together to thrash out the requirements of the system (Wood and Silver, 1995). These are intensive requirements-gathering sessions in which difficult issues are faced and decisions are made. Representatives from each identified stakeholder group should be involved in each workshop so that all the relevant views can be heard| | This is only a generic process and must be tailored for a particular organization. ~ w closely do you think the RAD lifecycle model relates to the interaction design model scribed in Section 6.4.1? Comment RAD and DSDM explicitly incorporate user involvement, evaluation and iteration. User involvement, however, appears to be limited to the JAD workshop, and iteration appears to be limited to the design and build phase. The philosophy underlying the interaction design model is present, but the flexibility appears not to be. Our interaction design process would be appropriately used within the design and build stage|
Lifecycle models: showing how the ac , 190 Chapter 6 The process of interaction design JAD (Joint Application Development) workshops in which users and developers come together to thrash out the requirements of the system (Wood and Silver, 1995). These are intensive requirements-gathering sessions in which difficult issues are faced and decisions are made. Representatives from each identified stakeholder group should be involved in each workshop so that all the relevant views can be heard|last: | Figure 6.10 A basic RAD lifecycle model of software development. |
Lifecycle models: showing how the ac , last: | 6.4 Lifecycle models: showing how the activities relate 1 91 |
Lifecycle models: showing how the ac , 1 92 Chapter 6 The process of interaction design Russlan Peace hoops Head Toward Kosovo fRI JUN $1 08W6037 BDT 1- 6.4.3 Lifecycle models in HCI Another of the traditions from which interaction design has emerged is the field of HCI (human-computer interaction). Fewer lifecycle models have arisen from this field than from software engineering and, as you would expect, they have a stronger tradition of user focus. We describe two of these here. The first one, the Star, was derived from empirical work on understanding how designers tackled HCI design problems. This represents a very flexible process with evaluation at its core. In contrast, the second one, the usability engineering lifecycle, shows a more structured approach and hails from the usability engineering tradition| | 1 92 Chapter 6 The process of interaction design Russlan Peace hoops Head Toward Kosovo fRI JUN $1 08W6037 BDT 1- 6.4.3 Lifecycle models in HCI Another of the traditions from which interaction design has emerged is the field of HCI (human-computer interaction). Fewer lifecycle models have arisen from this field than from software engineering and, as you would expect, they have a stronger tradition of user focus. We describe two of these here. The first one, the Star, was derived from empirical work on understanding how designers tackled HCI design problems. This represents a very flexible process with evaluation at its core. In contrast, the second one, the usability engineering lifecycle, shows a more structured approach and hails from the usability engineering tradition|
Lifecycle models: showing how the ac , 1 92 Chapter 6 The process of interaction design Russlan Peace hoops Head Toward Kosovo fRI JUN $1 08W6037 BDT 1- 6.4.3 Lifecycle models in HCI Another of the traditions from which interaction design has emerged is the field of HCI (human-computer interaction). Fewer lifecycle models have arisen from this field than from software engineering and, as you would expect, they have a stronger tradition of user focus. We describe two of these here. The first one, the Star, was derived from empirical work on understanding how designers tackled HCI design problems. This represents a very flexible process with evaluation at its core. In contrast, the second one, the usability engineering lifecycle, shows a more structured approach and hails from the usability engineering tradition| | The Star Lifecycle Model About the same time that those involved in software engineering were looking for alternatives to the waterfall lifecycle, so too were people involved in HCI looking for alternative ways to support the design of interfaces. In 1989, the Star lifecycle |
Lifecycle models: showing how the ac , last: | 6.4 Lifecycle models: showing how the activities relate 193 I Figure 6.13 The Star lifecycle model|
Lifecycle models: showing how the ac ,  | model was proposed by Hartson and Hix (1989) (see Figure 6.13). This emerged from some empirical work they did looking at how interface designers went about their work. They identified two different modes of activity: analytic mode and synthetic mode. The former is characterized by such notions as top-down, organizing, judicial, and formal, working from the systems view towards the user's view; the latter is characterized by such notions as bottom-up, free-thinking, creative and ad hoc, working from the user's view towards the systems view. Interface designers move from one mode to another when designing. A similar behavior has been observed in software designers (Guindon, 1990)|
Lifecycle models: showing how the ac ,  | Unlike the lifecycle models introduced above, the Star lifecycle does not specify any ordering of activities. In fact, the activities are highly interconnected: you can move from any activity to any other, provided you first go through the evaluation activity. This reflects the findings of the empirical studies. Evaluation is central to this model, and whenever an activity is completed, its result(s) must be evaluated|
Lifecycle models: showing how the ac ,  | So a project may start with requirements gathering, or it may start with evaluating an existing situation, or by analyzing existing tasks, and so on|
Lifecycle models: showing how the ac , last: | The Star lifecycle model has not been used widely and successfully for large projects in industry|
Lifecycle models: showing how the ac , last: | Consider the benefits of lifecycle models introduced above and suggest why this may be|
Lifecycle models: showing how the ac ,  | Comment One reason may be that the Star lifecycle model is extremely flexible. This may be how designers work in practice, but as we commented above, lifecycle models are popular because "they allow developers, and particularly managers, to get an overall view of the development effort so that progress can be tracked, deliverables specified, resources allocated, targets set, and so on." With a model as flexible as the Star lifecycle, it is difficult to control these issues without substantially changing the model itself|
Lifecycle models: showing how the ac ,  | The Usability Engineering Lifecycle The Usability Engineering Lifecycle was proposed by Deborah Mayhew in 1999 (Mayhew, 1999). Many people have written about usability engineering, and as |
Lifecycle models: showing how the ac ,  | - - 194 Chapter 6 The process of interaction design Figure 6.14 The Usability Engineering Lifecycle. |
Lifecycle models: showing how the ac ,  | 6.4 Lifecycle models: showing how the activities relate 195 0 UETask T Development Task () Decision Point Documentation + Complex Applications - -t Simple Applications (e.g. websites) Figure 6.14 (continued). I Mayhew herself says, "I did not invent the concept of a Usability Engineering Lifecycle|
Lifecycle models: showing how the ac ,  | Nor did I invent any of the Usability Engineering tasks included in the lifecycle . . . .". However, what her lifecycle does provide is a holistic view of usability engineering and a detailed description of how to perform usability tasks, and it specifies how usability tasks can be integrated into traditional software development lifecycles. It is therefore particularly helpful for those with little or no expertise in usability to see how the tasks may be performed alongside more traditional software engineering activities. For example, Mayhew has linked the stages with a general development approach (rapid prototyping) and a specific method (objectoriented software engineering (OOSE, Jacobson et al, 1992)) that have arisen from software engineering|
Lifecycle models: showing how the ac ,  | The lifecycle itself has essentially three tasks: requirements analysis, design1 testingldevelopment, and installation, with the middle stage being the largest and involving many subtasks (see Figure 6.14). Note the production of a set of usability goals in the first task. Mayhew suggests that these goals be captured in a style guide that is then used throughout the project to help ensure that the usability goals are adhered to|
Lifecycle models: showing how the ac ,  | This lifecycle follows a similar thread to our interaction design model but includes considerably more detail. It includes stages of identifying requirements, designing, evaluating, and building prototypes. It also explicitly includes the style guide as a mechanism for capturing and disseminating the usability goals of the project. Recognizing that some projects will not require the level of structure presented in the full lifecycle, Mayhew suggests that some substeps can be skipped if they are unnecessarily complex for the system being developed|
Lifecycle models: showing how the ac ,  | Study the usability engineering lifecycle and identify how this model differs from our interaction design model described in Section 6.4.1, in terms of the iterations it supports|
Lifecycle models: showing how the ac ,  | Comment One of the main differences between Mayhew's model and ours is that in the former the iteration between design and evaluation is contained within the second phase. Iteration between the design/testldevelopment phase and the requirements analysis phase occurs only after the conceptual model and the detailed designs have been developed, prototyped, and |
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Assignment Nowadays, timepieces (such as clocks, wristwatches etc) have a variety of functions. They not only tell the time and date but they can speak to you, remind you when it's time to do something, and provide a light in the dark, among other things. Mostly, the interface for these devices, however, shows the time in one of two basic ways: as a digital number such as 23:40 or through an analog display with two or three hands-one to represent the hour, one for the minutes, and one for the seconds|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | In thb assignment, we want you to design an innovative timepiece for your own use. This could be in the form of a wristwatch, a mantelpiece clock, an electronic clock, or any other kind of clock you fancy. Your goal is to be inventive and exploratory. We have broken this as- I signment down into the following steps to make it clearer: I (a) Think about the interactive product you are designing: what do you want it to do I for you? Find 3-5 potential users and ask them what they would want. Write a list of requirements for the clock, together with some usability criteria based on the de- 1 finition of usability used in Chapter 1|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | (b) Look around for similar devices and seek out other sources of inspiration that you might find helpful. Make a note of any findings that are interesting, useful or insightful|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | (c) Sketch out some initial designs for the clock. Try to develop at least two distinct alternatives that both meet your set of requirements|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | (d) Evaluate the two designs, using your usability criteria and by role playing an interaction with your sketches. Involve potential users in the evaluation, if possible. Does it do what you want? Is the time or other information being displayed always clear? Design is iterative, so you may want to return to earlier elements of the process before you choose one of your alternatives|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Once you have a design with which you are satisfied, you can send it to us and we shall post a representative sample of those we receive to our website. Details of how to format your submission are available from our website|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Summary In this chapter, we have looked at the process of interaction design, i.e., what activities are required in order to design an interactive product, and how lifecycle models show the relationships between these activities. A simple interaction design model consisting of four activities was introduced and issues surrounding the identification of users, generating alternative designs, and evaluating designs were discussed. Some lifecycle models from software engineering and HCI were introduced|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Key points The interaction design process consists of four basic activities: identifying needs and establishing requirements, developing alternative designs that meet those requirements, building interactive versions of the designs so that they can be communicated and assessed, and evaluating them. |
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Further reading 1 97 Key characteristics of the interaction design process are explicit incorporation of user involvement, iteration, and specific usability criteria|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Before you can begin to establish requirements, you must understand who the users are and what their goals are in using the device|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Looking at others' designs provides useful inspiration and encourages designers to consider alternative design solutions, which is key to effective design|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Usability criteria, technical feasibility, and users' feedback on prototypes can all be used to choose among alternatives|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | Prototyping is a useful technique for facilitating user feedback on designs at all stages|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | Lifecycle models show how development activities relate to one another|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | The interaction design process is complementary to lifecycle models from other fields|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | Further reading RUDISILL, M., LEWIS, C., POLSON, P. B., AND MCKAY, T. D|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | (1995) (eds.) Human-Computer Interface Design: Success Stories, Emerging Methods, Real-World Context. San Francisco: Morgan Kaufmann. This collection of papers describes the application of different approaches to interface design|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Included here is an account of the Xerox Star development, some advice on how to choose among methods, and some practical examples of real-world developments|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | BERGMAN, ERIC (2000) (ed.) Information Appliances and Beyond|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | San Francisco: Morgan Kaufmann. This book is an edited collection of papers which report on the experience of designing and building a variety of 'information appliances', i.e., purpose-built computer-based products which perform a specific task. For example, the Palm Pilot, mobile telephones, a vehicle navigation system, and interactive toys for children|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | MAYHEW, DEBORAH J. (1999) The Usability Engineering Lifecycle. San Francisco: Morgan Kaufmann. This is a very practical book about product user interface design. It explains how to perform usability tasks throughout development and provides useful examples along the way to illustrate the techniques. It links in with two software development based methods: rapid prototyping and object-oriented software engineering|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design|last: | SOMMERVILLE, IAN (2001) SofnYare Engineering (6th edition)|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | Harlow, UK: Addison-Wesley. If you are interested in pursuing the software engineering aspects of the lifecycle models section, then this book provides a useful overview of the main models and their purpose|
Lifecycle models: showing how the ac , 196 Chapter 6 The process of interaction design evaluated one at a time. Our version models a return to the activity of identifying needs and establishing requirements after evaluating any element of the design| | NIELSEN, JAKOB (1993) Usability Engineering. San Francisco: Morgan Kaufmann. This is a seminal book on usability engineering. If you want to find out more about the philosophy, intent, history, or pragmatics of usability engineering, then this is a good place to start. |
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | GC: I believe that things should work but they should also delight. In the past, when it was really difficult to make things work, that was what people concentrated on. But now it's much easier to make software and much easier to make hardware. We've got a load of technologies but they're still often not designed for people-and they're certainly not very enjoyable to use. If we think about other things in our life, our clothes, our furniture, the things we eat with, we choose what we use because they have a meaning beyond their practical use. Good design is partly about working really well, but it's also about what something looks like, what it reminds us of, what it refers to in our broader cultural environment. It's this side that interactive systems haven't really addressed yet. They're only just beginning to become part of culture. They are not just a tool for professionals any more, but an environment in which we live|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: How do you think we can improve things? GC: The parallel with architecture is quite an interesting one. In architecture, a great deal of time and expense is put into the initial design; I don't think very much money or time is put into the initial design of software. If you think of the big software engineering companies, how many people work in the design side rather than on the implementation side? HS: When you say design do you mean conceptual design, or task design, or something else? GC: I mean all phases of design. Firstly there's research-finding out about people. This is not necessarily limited to finding out about what they want necessarily, because if we're designing new things, they are probably things people don't even know they could have. At the Royal College of Art we tried to work with users, but to be inspired by them, and not constrained by what they know is possible|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | The second stage is thinking, "What should this thing we are designing do?" You could call that conceptual design. Then a third stage is thinking how do you represent it, how do you give it form? And then the fourth stage is actually crafting the interface--exactly what color is this pixel? Is this type the right size, or do you need a size bigger? How much can you get on a screen?-all those things about the details|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | One of the problems companies have is that the feedback they get is. "I wish it did x." Software looks as if it's designed, not with a basic model of how it works that is then expressed on the interface, but as a load of different functions that are strung together|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | The desktop interface, although it has great advan- I tages, encourages the idea that you have a menu and you can just add a few more bits when people want more things. In today's word processors, for instance, ~ there isn't a .clear conceptual model about how it I works, or an underlying theory people can use to reason about why it is not working in the way they expect|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: So in trying to put more effort into the design aspect of things, do you think we need different people in the team? GC: Yes. People in the software field tend to think that designers are people who know how to give the product form, which of course is one of the things they do. But a graphic designer, for instance, is somebody who also thinks at a more strategic level, "What is the message that these people want to get over and to whom?" and then, "What is the best way to give form to a message like that?" The part you see is the beautiful design, the lovely poster or record sleeve, or elegant book, but behind that is a lot of thinking about how to communicate ideas via a particular medium|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: If you've got people from different disciplines, have you experienced difficulties in communication? GC: Absolutely. I think that people from different disciplines have different values, so different results and different approaches are valued. People have different temperaments, too, that have led them to the different fields in the first place, and they've been trained in different ways. In my view the big differ- |
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | ence between the way engineers are trained and the way designers are trained is that engineers are trained to focus in on a solution from the beginning whereas designers are trained to focus out to begin with and then focus in. They focus out and try lots of different alternatives, and they pick some and try them out to see how they go. Then they refine down. This is very hard for both the engineers and the designers because the designers are thinking the engineers are trying to hone in much too quickly and the engineers can't bear the designers faffing about. They are trained to get their results in a completely different way|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: Is your idea to make each more tolerant of the other? GC: Yes, my idea is not to try to make renaissance people, as I don't think it's feasible. Very few people can do everything weU. I think the ideal team is made up of people who are really confident and good at what they do and open-mined enough to realize there are very different approaches. There's the scientific approach, the engineering approach, the design approach|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | All three are different and that's their value-you don't want everybody to be the same. The best combination is where you have engineers who understand design and designers who understand engineering|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | It's important that people know their limitations too. If you realize that you need an ergonomist, then you go and find one and you hire them to consult for you. So you need to know what you don't know as well as what you do|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: What other aspects of traditional design do you think help with interaction design? GC I think the ability to visualize things. It allows people to make quick prototypes or models or sketches so that a group of people can talk about something concrete. I think that's invaluable in the process. I think also making things that people like is just one of the things that good designers have a feel for|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | HS: Do you mean aesthetically like or like in its whole sense? GC: In its whole sense. Obviously there's the aesthetic of what something looks like or feels like but Interview 199 there's also the aesthetic of how it works as well. You can talk about an elegant way of doing something as well as an elegant look|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems|last: | HS: Another trait I've seen in designers is being protective of their design|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | GC: I think that is both a vice and a virtue. In order to keep a design coherent you need to keep a grip on the whole and to push it through as a whole. Otherwise it can happen that people try to make this a bit smaller and cut bits out of that, and so on, and before you know where you are the coherence of the design is lost. It is quite difficult for a team to hold a coherent vision of a design. If you think of other design fields, like film-making, for instance, there is one director and everybody accepts that it's the director's vision. One of the things that's wrong with products like Microsoft Word, for instance, is that there's no coherent idea in it that makes you t hi nk, "Oh yes, I understand how this fits with that." Design is always a balance between things that work well and things that look good, and the ideal design satisfies everything, but in most designs you have to make trade-offs. If you're making a game it's more important that people enjoy it and that it looks good than to worry if some of it's a bit difficult. If you're making a fighter cockpit then the most important thing is that pilots don't fall out of the sky, and so this informs the trade-offs you make. The question is, who decides how to decide the criteria for the tradeoffs that inevitably need to be made. This is not a matter of engineering: it's a matter of values--cultural, emotional, aesthetic|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems|last: | HS: 1 know this is a controversial issue for some designers|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | Do you think users should be part of the design team? GC: No, I don't. I think it's an abdication of responsibility|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | Users should definitely be involved as a source of inspiration, suggesting ideas, evaluating proposals-saying, "Yes, we think this would be great" or "No, we think this is an appalling idea." But in the end, if designers aren't better than the general public at designing things, what are they doing as designers? |
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | Identifying needs and establishing requirements 7.1 Introduction 7.2 What, how, and why? 7.2.1 What are we trying to achieve in this design activity? 7.2.2 How can we achieve this? 7.2.3 Why bother? The importance of getting it right 7.2.4 Why establish requirements? 7.3 What are requirements? 7.3.1 Different kinds of requirements 7.4 Data gathering 7.4.1 Data-gathering techniques 7.4.2 Choosing between techniques 7.4.3 Some basic data-gathering guidelines 7.5 Data interpretation and analysis 7.6 Task description 7.6.1 Scenarios 7.6.2 Use cases 7.6.3 Essential use cases 7.7 Task analysis 7.7.1 Hierarchical Task Analysis (HTA) 7.1 Introduction An interaction design project may aim to replace or update an established system, or it may aim to develop a totally innovative product with no obvious precedent|
Lifecycle models: showing how the ac , 198 Chapter 6 The process of interaction design Department, developing a program to enable artist-designers to develop and apply their traditional skills and knowledge to the design of all kinds of interactive products and systems| | There may be an initial set of requirements, or the project may have to begin by producing a set of requirements from scratch. Whatever the initial situation and whatever the aim of the project, the users' needs, requirements, aspirations, and expectations have to be discussed, refined, clarified, and probably re-scoped. This requires an understanding of, among other things, the users and their capabilities, their current tasks and goals, the conditions under which the product will be used, and constraints on the product's performance. |
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features| | 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features| | Given the iterative nature of interaction design, isolating requirements activities from design activities and from evaluation activities is a little artificial, since in practice they are all intertwined: some design will take place while requirements are being established, and the design will evolve through a series of evaluation-redesign cycles. However, each of these activities can be distinguished by its own emphasis and its own techniques|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features| | This chapter provides a more detailed overview of identifying needs and establishing requirements. We introduce different kinds of requirements and explain some useful techniques|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features|last: | The main aims of this chapter are to: Describe different kinds of requirements|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features|last: | Enable you to identify examples of different kinds of requirements from a simple description|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features| | Explain how different data-gathering techniques may be used, and enable you to choose among them for a simple description|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features| | Enable you to develop a "scenario," a "use case," and an "essential use case" from a simple description|
Lifecycle models: showing how the ac , 202 Chapter 7 Identifying needs and establishing requirements As we discussed in Chapter 6, identifying users' needs is not as straightforward as it sounds. Establishing requirements is also not simply writing a wish list of features|last: | Enable you to perform hierarchical task analysis on a simple description|
What, how, and why? 7.2.1 What are w ,  | 7.2 What, how, and why? 7.2.1 What are we trying to achieve in this design activiiy? There are two aims. One aim is to understand as much as possible about the users, their work, and the context of that work, so that the system under development can support them in achieving their goals; this we call "identifying needs." Building on this, our second aim is to produce, from the needs identified, a set of stable requirements that form a sound basis to move forward into thinking about design. This is not necessarily a major document nor a set of rigid prescriptions, but you need to be sure that it will not change radically in the time it takes to do some design and get feedback on the ideas. Because the end goal is to produce this set of requirements, we shall sometimes refer to this as the requirements activity|
How can we achieve this? The whole ,  | 7.2.2 How can we achieve this? The whole chapter is devoted to explaining how to achieve these aims, but first we give an overview of where we're heading|
How can we achieve this? The whole ,  | At the beginning of the requirements activity, we know that we have a lot to find out and to clarify. At the end of the activity we will have a set of stable requirements that can be moved forward into the design activity. In the middle, there are activities concerned with gathering data, interpreting or analyzing1 the data, and 'We use interpretation to mean the initial investigation of the data, while analysis is a more detailed study, using a particular frame of reference and notation. |
What, how, and why? 203 capturing th ,  | 7.2 What, how, and why? 203 capturing the findings in a form that can be expressed as requirements. Broadly speaking, these activities progress in a sequential manner: first gather some data, then interpret it, then extract some requirements from it, but it gets a lot messier than this, and the activities influence one another as the process iterates. One of the reasons for this is that once you start to analyze data, you may find that you need to gather some more data to clarify or confirm some ideas you have. Another reason is that the way in which you document your requirements may affect your analysis, since it will enable you to identify and express some aspects more easily than others|
What, how, and why? 203 capturing th ,  | For example, using a notation which emphasizes the data-flow characteristics of a situation will lead the analysis to focus on this aspect rather than, for example, on data structure. Analysis requires some kind of framework, theory or hypothesis to provide a frame of reference, however informal, and this will inevitably affect the requirements you extract. To overcome this, it is important to use a complementary set of data-gathering techniques and data-interpretation techniques, and to constantly revise and refine the requirements. As we discuss below, there are different kinds of requirements, and each can be emphasized or de-emphasized by the different techniques|
What, how, and why? 203 capturing th ,  | Identifying needs and establishing requirements is itself an iterative activity in which the subactivities inform and refine one another. It does not last for a set number of weeks or months and then finish. In practice, requirements evolve and develop as the stakeholders interact with designs and see what is possible and how certain facilities can help them. And as shown in the lifecycle model in Chapter 6, the activity itself will be repeatedly revisited|
What, how, and why? 203 capturing th ,  | Why bother? The importance of getting it right An article published in January 2000 (Taylor, 2000) investigated the causes of IT project failure. The article admits that "there is no single cause of IT project failure," but requirements issues figured highly in the findings. The research involved detailed questioning of 38 IT professionals in the UK. When asked about which project stages caused failure, respondents mentioned "requirements definition" more than any other phase. When asked about cause of failure, "unclear objectives and requirements" was mentioned more than anything else, and for critical success factors, "clear, detailed requirements" was mentioned most often|
What, how, and why? 203 capturing th ,  | As stressed in previous chapters, understanding what the product under development should do and ensuring that it supports stakeholders' needs are critically important activities in any product development. If the requirements are wrong then the product will at best be ignored and at worst be despised by the users, and will cause grief and lost productivity. In either case, the implications for both producer and customer are serious: anxiety and frustration, lost revenue, loss of customer confidence, and so on. However we look at it, getting the requirements of the product wrong is a very bad move and something to be avoided at all costs|
What, how, and why? 203 capturing th ,  | Taking a user-centered approach to development is one way to address this. If users' voices and needs are clearly heard and taken into account, then it is more likely that the end result will meet users' needs and expectations. Involving users isn't always easy, however, and we explore in more detail how to do this effectively |
What, how, and why? 203 capturing th , 204 Chapter 7 Identifying needs and establishing requirements in Chapter 9. Here we focus on establishing the requirements, while keeping the emphasis clearly on users' needs| | 204 Chapter 7 Identifying needs and establishing requirements in Chapter 9. Here we focus on establishing the requirements, while keeping the emphasis clearly on users' needs|
Why establish requirements? I The  ,  | 7.2.4 Why establish requirements? I The activity of understanding what a product should do has been given various labels-for example, requirements gathering, requirements capture, requirements elicitation, requirements analysis, and requirements engineering. The first two imply that requirements exist out there and we simply need to pick them up or catch them. "Elicitation" implies that "others" (presumably the clients or users) know the requirements and we have to get them to tell us. Requirements, however, are not that easy to identify. You might argue that, in some cases, customers must know what the requirements are because they know the tasks that need to be performed, and may have asked for a system to be built in the first place. However, they may not have articulated requirements as yet, and even if they have an initial set of requirements, they probably have not explored them in sufficient detail for development to begin|
Why establish requirements? I The  ,  | The term "requirements analysis" is normally used to describe the activity of investigating and analyzing an initial set of requirements that have been gathered, elicited, or captured. Analyzing the information gathered is an important step, since it is this interpretation of the facts, rather than the facts themselves, that inspires the design. Requirements engineering is a better term than the others because it recognizes that developing a set of requirements is an iterative process of evolution and negotiation, and one that needs to be carefully managed and controlled|
Why establish requirements? I The  ,  | We chose the term establishing requirements to represent the fact that requirements arise from the data-gathering and interpretation activities and have been established from a sound understanding of the users' needs. This also implies that requirements can be justified by and related back to the data collected|
What are requirements? Before we go  ,  | 7.3 What are requirements? Before we go any further, we need to explain what we mean by a requirement. Intuitively, you probably have some understanding of what a requirement is, but we should be clear. A requirement is a statement about an intended product that specifies what it should do or how it should perform. One of the aims of the requirements activity is to make the requirements as specific, unambiguous, and clear as possible. For example, a requirement for a website might be that the time to download any complete page is less than 5 seconds. Another less precise example might be that teenage girls should find the site appealing. In the case of this latter example, further investigation would be necessary to explore exactly what teenage girls would find appealing. Requirements come in many different forms and at many different levels of abstraction, but we need to make sure that the requirements are as clear as possible and that we understand how to tell when they have been fulfilled|
What are requirements? Before we go  ,  | The example requirement shown in Figure 7.1 is expressed using a template from the Volere process (Robertson and Robertson, 1999), which you'll hear more about later in this chapter and in Suzanne Robertson's interview at the end of this |
What are requirements? 205 Requireme ,  | 7.3 What are requirements? 205 Requirement #: 75 Requirement Type: 9 Eventluse case #: 6 Description: The product &all isue an alert ifa mather station fails to Wnsmit readings Rationale: Failure to tmnsmit madings might indiithat the wather station is faulty and needs maintenance, and that the data used to predict Wng roads may be incomplete|
What are requirements? 205 Requireme ,  | Source: Road Engineers Fit Criterion: For each watbstat20n the product shall communicatetothe user when the mmkd number d each type dreading per hour is not within the manufactud ep&d range afthe acpedecl number of readings per hour|
What are requirements? 205 Requireme ,  | Customer Satisfaction: 3 Customer Dissatisfaction: 5 Dependencies: None Conflicts: None Supporting Materials: SpeciflcaUon aFRasa WeatherStatbn History: Raised by GBS, 28 July 99 Copyr~ght O Atlantic 5ysterns Guild Figure 7.1 An example requirement using the Volere template.* chapter. This template requires quite a bit of information about the requirement itself, including something called a "fit criterion," which is a way of measuring when the solution meets the requirement. In Chapter 6 we emphasized the need to establish specific usability criteria for a product early on in development, and this part of the template encourages this|
Different kinds of requirements In ,  | 7.3.1 Different kinds of requirements In software engineering, two different kinds of requirements have traditionally been identified: functional requirements, which say what the system should do, and non-functional requirements, which say what constraints there are on the system and its development. For example, a functional requirement for a word processor may be that it should support a variety of formatting styles. This requirement might then be decomposed into more specific requirements detailing the kind of formatting required such as formatting by paragraph, by character, and by document, down to a very specific level such as that character formatting must include 20 typefaces, each with bold, italic, and standard options. A non-functional requirement for a word processor might be that it must be able to run on a variety of platforms such as PCs, Macs and Unix machines. Another might be that it must be able to function on a computer with 64 MB RAM. A different kind of non-functional requirement would be that it must be delivered in six months' time. This represents a constraint on the development activity itself rather than on the product being developed|
Different kinds of requirements In ,  | If we consider interaction devices in general, other kinds of non-functional requirements become relevant such as physical size, weight, color, and production *See Figure 7.5 for an explanation of these fields. |
Different kinds of requirements In , 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development| | 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development|
Different kinds of requirements In , 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development| | As you can see, removing the line at the left-hand side of the display in the top window released sufficient pixels to display the missing "s" in the bottom window|
Different kinds of requirements In , 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development| | Interaction design requires us to understand the functionality required and the constraints under which the product must operate or be developed. However, instead of referring to all requirements that are not functional as simply "non-functional" requirements, we prefer to refine this into further categories. The following is not an exhaustive list of the different requirements we need to be looking out for (see the figure in Suzanne Robertson's interview at the end of this chapter for a more detailed list), nor is it a tight categorization, however, it does illustrate the variety of requirements that need to be captured|
Different kinds of requirements In , 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development| | Functional requirements capture what the product should do. For example, a ~ functional requirement for a smart fridge might be that it should be able to tell when the butter tray is empty. Understanding the functional requirements for an interactive product is very important|
Different kinds of requirements In , 206 Chapter 7 identifying needs and establishing requirements feasibility. For example, when the PalmPilot was developed (Bergman and Haitani, 2000), an overriding requirement was that it should be physically as small as possible, allowing for the fact that it needed to incorporate batteries and an LCD display. In addition, there were extremely tight constraints on the size of the screen, and that had implications for the number of pixels available to display information. For example, formatting lines or certain typefaces may become infeasible to use if they take up even one extra pixel. Figure 7.2 shows two screen shots from the PalmPilot development| | Data requirements capture the type, volatility, sizelamount, persistence, accuracy, and value of the amounts of the required data. All interactive devices have to handle greater or lesser amounts of data. For example, if the system under consid- / ~ctive display area Inactive display border Figure 7.2 Every pixel counts. |
What are requirements? 207 eration i ,  | 7.3 What are requirements? 207 eration is to operate in the share-dealing application domain, then the data must be up-to-date and accurate, and is likely to change many times a day. In the personal banking domain, data must be accurate, must persist over many months and probably years, is very valuable, and there is likely to be a lot of it|
What are requirements? 207 eration i ,  | Environmental requirements or context of use refer to the circumstances in which the interactive product will be expected to operate. Four aspects of the environment must be considered when establishing requirements. First is the physical environment such as how much lighting, noise, and dust is expected in the operational environment. Will users need to wear protective clothing, such as large gloves or headgear, that might affect the choice of interaction paradigm? How crowded is the environment? For example, an ATM operates in a very public physical environment. Using speech to interact with the customer is therefore likely to be problematic|
What are requirements? 207 eration i ,  | The second aspect of the environment is the social environment. The issues raised in Chapter 4 regarding the social aspects of interaction design, such as collaboration and coordination, need to be explored in the context of the current development|
What are requirements? 207 eration i ,  | For example, will data need to be shared? If so, does the sharing have to be synchronous, e.g., does everyone need to be viewing the data at once, or asynchronous, e.g., two people authoring a report take turns in editing and adding to it? Other factors include the physical location of fellow team members, e.g., do collaborators have to communicate across great distances? The third aspect is the organizational environment, e.g., how good is user support likely to be, how easily can it be obtained, and are there facilities or resources for training? How efficient or stable is the communications infrastructure? How hierarchical is the management? and so on|
What are requirements? 207 eration i ,  | Finally, the technical environment will need to be established: for example, what technologies will the product run on or need to be compatible with, and what technological limitations might be relevant? User requirements capture the characteristics of the intended user group. In Chapter 6 we mentioned the relevance of a user's abilities and skills, and these are an important aspect of user requirements. But in addition to these, a user may be a novice, an expert, a casual, or a frequent user. This affects the ways in which interaction is designed. For example, a novice user will require step-by-step instructions, probably with prompting, and a constrained interaction backed up with clear information|
What are requirements? 207 eration i ,  | An expert, on the other hand, will require a flexible interaction with more wide-ranging powers of control. If the user is a frequent user, then it would be important to provide short cuts such as function keys rather than expecting them to type long commands or to have to navigate through a menu structure. A casual or infrequent user, rather like a novice, will require clear instructions and easily understood prompts and commands, such as a series of menus. The collection of attributes for a "typical user" is called a user profile. Any one device may have a number of different user profiles|
What are requirements? 207 eration i ,  | Note that user requirements are not the same as usability requirements. We discuss the latter below|
What are requirements? 207 eration i ,  | Usability requirements capture the usability goals and associated measures for a particular product. In Chapter 6 we introduced the idea of usability engineering, |
What are requirements? 207 eration i , 208 Chapter 7 Identifying needs and establishing requirements an approach in which specific measures for the usability goals of the product are established and agreed upon early in the development process and are then revisited, and used to track progress as development proceeds. This both ensures that usability is given due priority and facilitates progress tracking. In Chapter 1 we described a number of usability goals: effectiveness, efficiency, safety, utility, learnability, and memorability. If we are to follow the philosophy of usability engineering and meet these usability goals, then we must identify the appropriate requirements. Chapter 1 also described some user experience goals, such as making products that are fun, enjoyable, pleasurable, aesthetically pleasing, and motivating. As we observed in Chapter 6, it is harder to identify quantifiable measures that allow us to track these qualities, but an understanding of how important each of these is to the current development should emerge as we learn more about the intended product| | 208 Chapter 7 Identifying needs and establishing requirements an approach in which specific measures for the usability goals of the product are established and agreed upon early in the development process and are then revisited, and used to track progress as development proceeds. This both ensures that usability is given due priority and facilitates progress tracking. In Chapter 1 we described a number of usability goals: effectiveness, efficiency, safety, utility, learnability, and memorability. If we are to follow the philosophy of usability engineering and meet these usability goals, then we must identify the appropriate requirements. Chapter 1 also described some user experience goals, such as making products that are fun, enjoyable, pleasurable, aesthetically pleasing, and motivating. As we observed in Chapter 6, it is harder to identify quantifiable measures that allow us to track these qualities, but an understanding of how important each of these is to the current development should emerge as we learn more about the intended product|
What are requirements? 207 eration i , 208 Chapter 7 Identifying needs and establishing requirements an approach in which specific measures for the usability goals of the product are established and agreed upon early in the development process and are then revisited, and used to track progress as development proceeds. This both ensures that usability is given due priority and facilitates progress tracking. In Chapter 1 we described a number of usability goals: effectiveness, efficiency, safety, utility, learnability, and memorability. If we are to follow the philosophy of usability engineering and meet these usability goals, then we must identify the appropriate requirements. Chapter 1 also described some user experience goals, such as making products that are fun, enjoyable, pleasurable, aesthetically pleasing, and motivating. As we observed in Chapter 6, it is harder to identify quantifiable measures that allow us to track these qualities, but an understanding of how important each of these is to the current development should emerge as we learn more about the intended product| | Usability requirements are related to other kinds of requirement we must establish, such as the kinds of users expected to interact with the product. |
What are requirements? 209 uggest on ,  | 7.3 What are requirements? 209 uggest one key functional, data, environmental, user and usability requirement for each of the following scenarios: (a) A system for use in a university's self-service cafeteria that allows users to pay for their food using a credit system|
What are requirements? 209 uggest on , last: | (b) A system to control the functioning of a nuclear power plant|
What are requirements? 209 uggest on , last: | (c) A system to support distributed design teams, e.g., for car design|
What are requirements? 209 uggest on ,  | Comment You may have come up with alternative suggestions; these are indicative of the kinds of answer we might expect|
What are requirements? 209 uggest on , last: | (a) Functional: The system will calculate the total cost of purchases|
What are requirements? 209 uggest on , last: | Data: The system must have access to the price of products in the cafeteria|
What are requirements? 209 uggest on ,  | Environmental: Cafeteria users will be carrying a tray and will most likely be in a reasonable rush. The physical environment will be noisy and busy, and users may be talking with friends and colleagues while using the system|
What are requirements? 209 uggest on , last: | User: The majority of users are likely to be under 25 and comfortable dealing with technology|
What are requirements? 209 uggest on ,  | Usability: The system needs to be simple so that new users can use the system immediately, and memorable for more frequent users. Users won't want to wait around for the system to finish processing, so it needs to be efficient and to be able to deal easily with user errors|
What are requirements? 209 uggest on , last: | (b) Functional: The system will be able to monitor the temperature of the reactors|
What are requirements? 209 uggest on , last: | Data: The system will need access to temperature readings|
What are requirements? 209 uggest on ,  | Environmental: The physical environment is likely to be uncluttered and to impose few restrictions on the console itself unless there is a need to wear protective clothing (depending on where the console is to be located)|
What are requirements? 209 uggest on ,  | User: The user is likely to be a well-trained engineer or scientist who is competent to handle technology|
What are requirements? 209 uggest on ,  | Usability: Outputs from the system, especially warning signals and gauges, must be clear and unambiguous|
What are requirements? 209 uggest on , last: | (c) Functional: The system will be able to communicate information between remote sites|
What are requirements? 209 uggest on ,  | Data: The system must have access to design information that will be captured in a common file format (such as AutoCAD)|
What are requirements? 209 uggest on ,  | Environmental: Physically distributed over a wide area. Files and other electronic media need to be shared. The system must comply with available communication protocols and be compatible with network technologies|
What are requirements? 209 uggest on ,  | User: Professional designers, who may be worried about technology but who are likely to be prepared to spend time learning a system that will help them perform their jobs better. The design team is likely to be multi-lingual|
What are requirements? 209 uggest on , last: | Usability: Keeping transmission error rate low is likely to be of high priority. |
What are requirements? 209 uggest on , 21 0 Chapter 7 Identifying needs and establishing requirements 7.4 Data gathering So how do we go about determining requirements? Data gathering is an important part of the requirements activity and also of evaluation. In this chapter, we concentrate on data gathering for the requirements activity. Further information about the techniques we present here and how to apply them in evaluation is in Chapters 12 through 14| | 21 0 Chapter 7 Identifying needs and establishing requirements 7.4 Data gathering So how do we go about determining requirements? Data gathering is an important part of the requirements activity and also of evaluation. In this chapter, we concentrate on data gathering for the requirements activity. Further information about the techniques we present here and how to apply them in evaluation is in Chapters 12 through 14|
What are requirements? 209 uggest on , 21 0 Chapter 7 Identifying needs and establishing requirements 7.4 Data gathering So how do we go about determining requirements? Data gathering is an important part of the requirements activity and also of evaluation. In this chapter, we concentrate on data gathering for the requirements activity. Further information about the techniques we present here and how to apply them in evaluation is in Chapters 12 through 14| | The purpose of data gathering is tr, collect sufficient, relevant, and appropriate data so that a set of stable requirements can be produced. Even if a set of initial requirements exists, data gathering will be required to expand, clarify, and confirm those initial requirements. Data gathering needs to cover a wide spectrum of issues because the different kinds of requirement we need to establish are quite varied, as we saw above. We need to find out about the tasks that users currently perform and their associated goals, the context in which the tasks arg performed, and the rationale for why things are the way they are|
What are requirements? 209 uggest on , 21 0 Chapter 7 Identifying needs and establishing requirements 7.4 Data gathering So how do we go about determining requirements? Data gathering is an important part of the requirements activity and also of evaluation. In this chapter, we concentrate on data gathering for the requirements activity. Further information about the techniques we present here and how to apply them in evaluation is in Chapters 12 through 14| | There is essentially a small number of basic techniques for data gathering, but they are flexible and can be combined and extended in many ways; this makes the possibilities for data gathering very varied, to give full leverage on understanding the I variety of requirements we seek. These techniques are questionnaires, interviews, focus groups and workshops, naturalistic observation, and studying documentation|
What are requirements? 209 uggest on , 21 0 Chapter 7 Identifying needs and establishing requirements 7.4 Data gathering So how do we go about determining requirements? Data gathering is an important part of the requirements activity and also of evaluation. In this chapter, we concentrate on data gathering for the requirements activity. Further information about the techniques we present here and how to apply them in evaluation is in Chapters 12 through 14| | Some of them, such as the interview, require active participation from stakeholders, while others, such as studying documentation, require no involvement at all. In addition, various props can be used in data-gathering sessions, such as descriptions of common tqsks and prototypes of possible new functionality. See Section 7.6 and Chapter 8 for further information on how to develop these props. Box 7.2 gives an |
Data gathering 21 1 example of how d ,  | 7.4 Data gathering 21 1 example of how different methods and props can be combined to gain maximum advantage, while Box 7.3 describes a very different approach aimed at prompting inspiration rather than simple data gathering|
Data-gathering techniques I In add ,  | 7.4.1 Data-gathering techniques I In addition to the most common forms of data-gathering techniques listed above, if a system is currently operational then data logging may be used. This involves instrumenting the software to record users' activity in a log that can be examined later. Each of the techniques will yield different kinds of data and are useful in different circumstances. In most cases, they are also used in evaluation, and how to implement them is described in Chapters 12 and 13. Here we describe what each technique involves and explain the circumstances for which they are most suitable, in the context of the requirements activity. The discussion is summarized in Table 7.1 on page 214|
Data-gathering techniques I In add ,  | Questionnaires. Most of us are familiar with questionnaires. They are a series I of questions designed to elicit specific information from us. The questions may require different kinds of answers: some require a simple YESINO, others ask us to choose from a set of pre-supplied answers, and others ask for a longer response or comment. Sometimes questionnaires are sent in electronic form and arrive via email or are posted on a website, and sometimes they are given to us on paper. In most cases the questionnaire is administered at a distance, i.e., no one is there to help you answer the questions or to explain what they mean|
Data-gathering techniques I In add ,  | Well-designed questionnaires are good at getting answers to specific questions from a large group of people, and especially if that group of people is spread across a wide geographical area, making it infeasible to visit them all. Questionnaires are often used in conjunction with other techniques. For example, information obtained through interviews might be corroborated by sending a questionnaire to a wider group of stakeholders to confirm the conclusions|
Data-gathering techniques I In add ,  | Interviews. Interviews involve asking someone a set of questions. Often interviews are face-to-face, but they don't have to be. Companies spend large amounts of money conducting telephone interviews with their customers finding out what they like or don't like about their service. If interviewed in their own work or home setting, people may find it easier to talk about their activities by showing the interviewer what they do and what systems and other artifacts they use. The context can also trigger them to remember certain things, for example a problem they have downloading email, which they would not have recalled had the interview taken place elsewhere|
Data-gathering techniques I In add ,  | Interviews can be broadly classified as structured, unstructured or semistructured, depending on how rigorously the interviewer sticks to a prepared set of questions|
Data-gathering techniques I In add ,  | In the requirements activity, interviews are good at getting people to explore issues and unstructured interviews are often used early on to elicit scenarios (see Section 7.6 below). Interacting with a human rather than a sterile, impersonal piece of paper or electronic questionnaire encourages people to respond, and can make the exercise more pleasurable. In the context of establishing requirements, it is equally important for development team members to meet stakeholders and for users to feel involved. This on its own may be sufficient motivation to arrange interviews. |
Data-gathering techniques I In add , 21 2 Chapter 7 Identifying needs and establishing requirements |last: | 21 2 Chapter 7 Identifying needs and establishing requirements |
Data gathering 21 3 However, intervi ,  | 7.4 Data gathering 21 3 However, interviews are time consuming and it may not be feasible to visit all the people you'd like to see|
Data gathering 21 3 However, intervi ,  | Focus groups and workshops. Interviews tend to be one on one, and elicit only one person's perspective. As an alternative or as corroboration, it can be very revealing to get a group of stakeholders together to discuss issues and requirements|
Data gathering 21 3 However, intervi , last: | These sessions can be very structured with set topics for discussion, or can be unstructured|
Data gathering 21 3 However, intervi ,  | In this latter case, a facilitator is required who can keep the discussion on track and can provide the necessary focus or redirection when appropriate. In some development methods, workshops have become very formalized. For example, the workshops used in Joint Application Development (Wood and Silver, 1995) are very structured, and their contents and participants are all prescribed|
Data gathering 21 3 However, intervi ,  | In the requirements activity, focus groups and workshops are good at gaining a consensus view and/or highlighting areas of conflict and disagreement. On a social level it also helps for stakeholders to meet designers and each other, and to express their views in public. It is not uncommon for one set of stakeholders to be unaware that their views are different from another's even though they are in the same organization|
Data gathering 21 3 However, intervi ,  | On the other hand, these sessions need to be structured carefully and the participants need to be chosen carefully. It is easy for one or a few people to dominate discussions, especially if they have control, higher status, or influence over the other participants|
Data gathering 21 3 However, intervi ,  | Naturalistic observation. It can be very difficult for humans to explain what they do or to even describe accurately how they achieve a task. So it is very unlikely that a designer will get a full and true story from stakeholders by using any of the techniques listed above. The scenarios and other props used in interviews and workshops will help prompt people to be more accurate in their descriptions, but observation provides a richer view. Observation involves spending some time with the stakeholders as they go about their day-to-day tasks, observing work as it happens, in its natural setting. A member of the design team shadows a stakeholder, making notes, asking questions (but not too many), and observing what is being done in the natural context of the activity. This is an invaluable way to gain insights into the tasks of the stakeholders that can complement other investigations. The level of involvement of the observer in the work being observed is variable along a spectrum with no involvement (outside observation) at one end and full involvement (participant observation) at the other. |
Data gathering 21 3 However, intervi , 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low| | 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low|
Data gathering 21 3 However, intervi , 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low| | Responses may not be what you want Interviews Exploring Some Interviewer can Time consuming. Chapter 13 issues quantitative guide interviewee Artificial but mostly if necessary. environment qualitative Encourages may intimidate data contact between interviewee developers and users I Focus groups and workshops Collecting Some Highlights areas Possibility of Chapter 13 multiple quantitative of consensus dominant viewpoints but mostly and conflict. characters qualitative Encourages contact data between developers and users Na tutalistic Understanding Qualitative Observing actual Very time Chapter 12 observation context of user work gives consuming|
Data gathering 21 3 However, intervi , 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low| | activity insights that other Huge amounts techniques of data can't give Studying documentation Learning about Quantitative No time Day-to-day N/A procedures, commitment working will regulations from users differ from and standards required documented procedures Not only can naturalistic observation help fill in details and nuances that simply did not come out of the other investigations, it also provides context for tasks. Contextualizing the work or behavior that a device is to support provides data that other techniques cannot, and from which we can evolve requirements|
Data gathering 21 3 However, intervi , 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low| | In the requirements activity, observation is good for understanding the nature of the tasks and the context in which they are performed. However, it requires more time and commitment from a member of the design team, and it can result in a huge amount of data|
Data gathering 21 3 However, intervi , 21 4 Chapter 7 Identifying needs and establishing requirements Table 7.1 Overview of data-gathering techniques used in the requirements activity - - - - Detail for Technique Good for Kind of data Advantages Disadvantages designing in Questionnaires Answering Quantitative Can reach many The design is Chapter 13 specific and qualitative people with low crucial. Response questions data resource rate may be low| | Studying documentation. Procedures and rules are often written down in manuals and these are a good source of data about the steps involved in an activity and |
Data gathering 21 5 any regulations  ,  | 7.4 Data gathering 21 5 any regulations governing a task. Such documentation should not be used as the only source, however, as everyday practices may augment them and may have been devised by those concerned to make the procedures work in a practical setting|
Data gathering 21 5 any regulations  ,  | Taking a user-centered view of development means that we are interested in the everyday practices rather than an idealized account|
Data gathering 21 5 any regulations  ,  | Other documentation that might be studied includes diaries or job logs that are written by the stakeholders during the course of their work|
Data gathering 21 5 any regulations  ,  | In the requirements activity, studying documentation is good for understanding legislation and getting some background information on the work. It also doesn't involve stakeholder time, which is a limiting factor on the other techniques|
Choosing between techniques I Tabl ,  | 7.4.2 Choosing between techniques I Table 7.1 provides some information to help you choose a set of techniques for a specific project. It tells you the kind of information you can get, e.g., answers to specific questions, and the kind of data it yields, e.g., qualitative or quantitative|
Choosing between techniques I Tabl ,  | It also includes some advantages and disadvantages for each technique. The kind of information you want will probably be determined by where you are in the cycle of iterations. For example, at the beginning of the project you may not have any specific questions that need answering, so it's better to spend time exploring issues through interviews rather than sending out questionnaires|
Choosing between techniques I Tabl ,  | Whether you want qualitative or quantitative data may also be affected by the point in development you have reached, but is also influenced by the kind of analysis you need to do|
Choosing between techniques I Tabl ,  | The resources available will influence your choice, too. For example, sending out questionnaires nationwide requires sufficient time, money, and people to do a good design, try it out (i.e., pilot it), issue it, collate the results and analyze them. If you only have three weeks and no one on the team has designed a survey before, then this is unlikely to be a success|
Choosing between techniques I Tabl , last: | Finally, the location and accessibility of the stakeholders need to be considered|
Choosing between techniques I Tabl ,  | It may be attractive to run a workshop for a large group of stakeholders, but if they are spread across a wide geographical area, it is unlikely to be practical|
Choosing between techniques I Tabl ,  | Olson and Moran (1996) suggest that choosing between data-gathering techniques rests on two issues: the nature of the data gathering technique itself and the task to be studied|
Choosing between techniques I Tabl ,  | Data-gathering techniques differ in two main respects: 1. The amount of time they take and the level of detail and risk associated with the findings. For example, they claim that a naturalistic observation will take two days of effort and three months of training, while interviews take one day of effort and one month of training (p. 276)|
Choosing between techniques I Tabl , 2. The knowledge the analyst must hqye about basic cognitive processes|last: | 2. The knowledge the analyst must hqye about basic cognitive processes|
Choosing between techniques I Tabl , 2. The knowledge the analyst must hqye about basic cognitive processes| | Tasks can be classified along three scales: 1. Is the task a set of sequential steps or is it a rapidly overlapping series of sub tasks? |
Choosing between techniques I Tabl , 1 21 6 Chapter 7 Identifying needs and establishing requirements I 2. Does the task involve high information content with complex visual displays to be interpreted, or low information content where simple signals are sufficient to alert the user? 3. Is the task intended to be performed by a layman without much training or by a practitioner skilled in the task domain? Box 7.4 summarizes two examples to show how techniques can be chosen using these dimensions| | 1 21 6 Chapter 7 Identifying needs and establishing requirements I 2. Does the task involve high information content with complex visual displays to be interpreted, or low information content where simple signals are sufficient to alert the user? 3. Is the task intended to be performed by a layman without much training or by a practitioner skilled in the task domain? Box 7.4 summarizes two examples to show how techniques can be chosen using these dimensions|
Choosing between techniques I Tabl , 1 21 6 Chapter 7 Identifying needs and establishing requirements I 2. Does the task involve high information content with complex visual displays to be interpreted, or low information content where simple signals are sufficient to alert the user? 3. Is the task intended to be performed by a layman without much training or by a practitioner skilled in the task domain? Box 7.4 summarizes two examples to show how techniques can be chosen using these dimensions| | So, when choosing between techniques for data gathering in the requirements activity, you need to consider the nature of the technique, the knowledge required of the analyst, the nature of the task to be studied, the availability of stakeholders and other resources, and the kind of information you need|
Some basic data-gathering guidelin ,  | 7.4.3 Some basic data-gathering guidelines I Organizing your first data-gathering session may seem daunting, but if you plan the I sessions well, and know what your objectives are then this will increase your confidence and make the whole exercise a lot more comfortable. Below we list some ~ data-gathering guidelines to support the requirements activity|
Some basic data-gathering guidelin ,  | Focus on identifying the stakeholders' needs. This may be achieved by studying their existing behavior and support tools, or by looking at other products, |
Data gathering 21 7 such as a compet ,  | 7.4 Data gathering 21 7 such as a competitor's product or an earlier release of your product under development|
Data gathering 21 7 such as a compet ,  | Involve all the stakeholder groups. It is very important to make sure that you get all the views of the right people. This may seem an obvious comment, but it is easy to overlook certain sections of the stakeholder population if you're not careful. We were told about one case where a large distribution and logistics company reimplemented their software systems and were very careful to involve all the clerical, managerial, and warehouse staff in their development process, but on the day the system went live, the productivity of the operation fell by 50%. On investigation it was found that the bottleneck was not in their own company, but in the suppliers' warehouses that had to interact with the new system. No one had asked them how they worked, and the new system was incompatible with their working routines|
Data gathering 21 7 such as a compet ,  | Involving only one representative from each stakeholder group is not enough, especially if the group is large. Everyone you involve in data gathering will have their own perspective on the situation, the task, their job and how others interact with them. If you only involve one representative stakeholder then you will only get a narrow view|
Data gathering 21 7 such as a compet ,  | Use a combination of data gathering techniques. Each technique will yield a certain kind of information, from a certain perspective. Using different techniques is one way of making sure that you get different perspectives (called triangulation, see Chapter lo), and corroboration of findings. For example, use observation to understand the context of task performance, interviews to target specific user groups, questionnaires to reach a wider population, and focus groups to build a consensus view|
Data gathering 21 7 such as a compet ,  | Support the data-gathering sessions with suitable props, such as task descriptions and prototypes if available. Since the requirements activity is iterative, prototypes or descriptions generated during one session may be reused or revisited in another with the same or a different set of stakeholders. Using props will help to jog people's memories and act as a focus for discussions|
Data gathering 21 7 such as a compet ,  | Run a pilot session if possible to ensure that your data-gathering session is likely to go as planned. This is particularly important for questionnaires where there is no one to help the users with ambiguities or other difficulties, but also applies to interview questions, workshop formats, and props. Any data collected during pilot sessions cannot be treated equally with other data, so don't mix them up. After running the pilot it is likely that some changes will be needed before running the session "for real." In an ideal world, you would understand what you are looking for and what kinds of analysis you want to do, and design the data-capture exercise to collect the data you want. However, data gathering is an expensive and timeconsuming activity that is often tightly constrained on resources. Sometimes pragmatic constraints mean that you have to make compromises on the ideal |
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | How you record the data during a face-to-face data-gathering session is just as important as the technique(s) you use. Video recording, audio recording, and note taking are the main options. Video and audio recording provide the most accurate record of the session, but they can generate huge amounts of data. You also need to decide on practical issues that can have profound effects on the data collected, such as where to position the camera. Note taking can be harder unless this is the person's only role in the session, but note taking always involves an element of interpretation. Taking impartial, accurate notes is difficult but can be improved with practice|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | For each of the situations below, consider what kinds of data gathering would be appropriate and how you might use the different techniques introduced above. You should assume that you are at the beginning of the development and that you have sufficient time and resources to use any of the techniques|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like|last: | (a) You are developing a new software system to support a small accountant's office|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | There is a system running already with which the users are reasonably happy, but it is looking dated and needs upgrading|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | (b) You are looking to develop an innovative device for diabetes sufferers to help them record and monitor their blood sugar levels. There are some products already on the market, but they tend to be large and unwieldy. Many diabetes sufferers rely on manual recording and monitoring methods involving a ritual with a needle, some chemicals, and a written scale|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like|last: | (c) You are developing a website for a young person's fashion e-commerce site|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | Comment (a) As this is a small office, there are likely to be few stakeholders. Some period of observation is always important to understand the context of the new and the old system|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | Interviewing the staff rather than giving them questionnaires is likely to be appropriate because there aren't very many of them, and this will yield richer data and give the developers a chance to meet the users. Accountancy is regulated by a variety of laws and it would also pay to look at documentation to understand some of the constraints from this direction. So we would suggest a series of interviews with the main users to understand the positive and negative features of the existing system, a short observation session to understand the context of the system, and a study of documentation surrounding the regulations|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like|last: | (b) In this case, your user group is spread about, so talking to all of them is infeasible|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | However, it is important to interview some, possibly at a local diabetic clinic, making sure that you have a representative sample. And you would need to observe the existing manual operation to understand what is required. A further group of stakeholders would be those who use or have used the other products on the market|
Data gathering 21 7 such as a compet , 21 8 Chapter 7 Identifying needs and establishing requirements situation, but before you can make sensible compromises, you need to know what you'd really like| | These stakeholders can be questioned to find out the problems with the existing devices so that the new device can improve on them. A questionnaire sent to a wider group in order to back up the findings from the interviews would be appropriate, as might a focus group where possible. |
Data interpretation and analysis 21  ,  | 7.5 Data interpretation and analysis 21 9 I (c) Again, you are not going to be able to interview all your users. In fact, the user group may not be very well defined. Interviews backed up by questionnaires and focus groups would be appropriate. Also, in this case, identlfy~ng similar or competing sites and evaluating them will help provide information for producing an improved product|
Data interpretation and analysis 21  ,  | The problems of choosing among data-gathering techniques for the requirements activity have been recognized in requirements engineering. For example ACRE (Acquisition REquirements) is a quite extensive set of guidance to help requirements engineers choose between a variety of techniques for data gathering, including interviews and observation. The framework also includes other techniques from software engineering, knowledge engineering, and the social sciences. I For more information on this framework, see Maiden and Rugg (1996)|
Data interpretation and analysis 21  ,  | I 7.5 Data interpretation and analysis Once the first data-gathering session has been conducted, interpretation and analysis can begin. It's a good idea to start interpretation as soon after the gathering session as possible. The experience will be fresh in the minds of the participants and this can help overcome any bias caused by the recording approach. It is also a good idea to discuss the findings with others to get a variety of perspectives on the data|
Data interpretation and analysis 21  ,  | The aim of the interpretation is to begin structuring and recording descriptions of requirements. Using a template such as the one suggested in Volere (Figure 7.5) highlights the kinds of information you should be looking for and guides the data interpretation and analysis. Note that many of the entries are concerned with traceRequirement #: Unique Id Requirement Type: Tempbte Eventluse case #: Origin of section the requimmmt Description: Aoneserrtencsstatemerrtoftheim oftherequinment Rationale: Why is the requiament coneidered important or necesea@ Source: Who raised UIie requimd Fit Critierion: A qua- ofthe requirement ueed todetemrine*thedut;bn meek the requirement|
Data interpretation and analysis 21  ,  | Customer Satisfaction: Meaeumthe Customer Dissatisfaction: UnhappirwwiFitis ddretoha.ethe uhevlt imk not implemented Dependencies: Oharequiments a changeefkit Conflicts: %-that ictuliione Supporting Materials: &ntatoeupprtJng infwmation H istoy: Origin and changes to the requirrsment Volede Copyright 0 Atlantic Systems Guild Figure 7.5 The Volere shell for requirements. |
Data interpretation and analysis 21  , 220 Chapter 7 Identifying needs and establishing requirements ability. For example, who raised the requirement and where can more information about it be found. This information may be captured in documents or in diagrams drawn during analysis. Providing links with raw data as captured on video or audio recordings can be harder, although just as important. Haumer et al. (2000) have developed a tool that records concrete scenarios using video, speech, and graphic media, and relates these recorded observations to elements of a corresponding design| | 220 Chapter 7 Identifying needs and establishing requirements ability. For example, who raised the requirement and where can more information about it be found. This information may be captured in documents or in diagrams drawn during analysis. Providing links with raw data as captured on video or audio recordings can be harder, although just as important. Haumer et al. (2000) have developed a tool that records concrete scenarios using video, speech, and graphic media, and relates these recorded observations to elements of a corresponding design|
Data interpretation and analysis 21  , 220 Chapter 7 Identifying needs and establishing requirements ability. For example, who raised the requirement and where can more information about it be found. This information may be captured in documents or in diagrams drawn during analysis. Providing links with raw data as captured on video or audio recordings can be harder, although just as important. Haumer et al. (2000) have developed a tool that records concrete scenarios using video, speech, and graphic media, and relates these recorded observations to elements of a corresponding design| | This helps designers to keep track of context and usage information while analyzing and designing for the system|
Data interpretation and analysis 21  , 220 Chapter 7 Identifying needs and establishing requirements ability. For example, who raised the requirement and where can more information about it be found. This information may be captured in documents or in diagrams drawn during analysis. Providing links with raw data as captured on video or audio recordings can be harder, although just as important. Haumer et al. (2000) have developed a tool that records concrete scenarios using video, speech, and graphic media, and relates these recorded observations to elements of a corresponding design| | More focused analysis of the data will follow initial interpretation. Different techniques and notations exist for investigating different aspects of the system that will in turn give rise to the different requirements. For example, functional requirements have traditionally been analyzed and documented using data-flow diagrams, Book Flinht ~~ Flight details entered Fare option displayed Fare chosen If new customer Enter details End If Display customer details Passenger details entered Adcl 1 to NumberOfBookings Booking confirmed by email I i customer details Figure 7.6 (a) Class diagram and (b) sequence diagram that might be used to analyze and capture static structure and dynamic behavior (respectively) if the system is being developed using an object-oriented approach. |
Data interpretation and analysis 221 ,  | 7.5 Data interpretation and analysis 221 state charts, work-flow charts, etc. (see e.g., Sommerville, 2001). Data requirements can be expressed using entity-relationship diagrams, for example. If the development is to take an object-oriented approach, then functional and data requirements are combined in class diagrams, with behavior being expressed in state charts and sequence diagrams, among others. Examples of two such diagrams representing a portion of a holiday booking system are given in Figure 7.6. These diagrams can be linked to the requirements through the "Eventluse case" field in the template in Figure 7.5|
Data interpretation and analysis 221 ,  | We don't go into the detail of how diagrams such as these might be developed, as whole books are dedicated to them. Instead, we describe four techniques that have a user-centered focus and are used to understand users' goals and tasks: scenarios, use cases, essential use cases, and task analysis. All of them may be produced during data-gathering sessions, and their output used as props in subsequent data-gathering sessions|
Data interpretation and analysis 221 ,  | The requirements activity iterates a number of times before a set of stable requirements evolves. As more interpretation and analysis techniques are applied, a deeper understanding of requirements will emerge and the requirements descrip- I tions will expand and clarify. I - "oltag, well, I think we all get the gid of where sev?vnj was going with the site map.'1 |
Data interpretation and analysis 221 , 222 Chapter 7 Identifying needs and establishing requirements 7.6 Task description Descriptions of business tasks have been used within software development for many years. During the 1970s and 1980s, "business scenarios" were commonly used as the basis for acceptance testing, i.e., the last testing stage before the customer paid the final fee installment and "accepted" the system. In more recent years, due to the emphasis on involving users earlier in the development lifecycle and the large number of new interaction devices now being developed, task descriptions are used throughout development, from early requirements activities through prototyping, evaluation, and testing. Consequently, more time and effort has been put into understanding how best to structure and use them| | 222 Chapter 7 Identifying needs and establishing requirements 7.6 Task description Descriptions of business tasks have been used within software development for many years. During the 1970s and 1980s, "business scenarios" were commonly used as the basis for acceptance testing, i.e., the last testing stage before the customer paid the final fee installment and "accepted" the system. In more recent years, due to the emphasis on involving users earlier in the development lifecycle and the large number of new interaction devices now being developed, task descriptions are used throughout development, from early requirements activities through prototyping, evaluation, and testing. Consequently, more time and effort has been put into understanding how best to structure and use them|
Data interpretation and analysis 221 , 222 Chapter 7 Identifying needs and establishing requirements 7.6 Task description Descriptions of business tasks have been used within software development for many years. During the 1970s and 1980s, "business scenarios" were commonly used as the basis for acceptance testing, i.e., the last testing stage before the customer paid the final fee installment and "accepted" the system. In more recent years, due to the emphasis on involving users earlier in the development lifecycle and the large number of new interaction devices now being developed, task descriptions are used throughout development, from early requirements activities through prototyping, evaluation, and testing. Consequently, more time and effort has been put into understanding how best to structure and use them| | There are different flavors of task descriptions, and we shall introduce three of them here: scenarios, use cases, and essential use cases. Each of these may be used to describe either existing tasks or envisioned tasks with a new device. They are not mutually exclusive and are often used in combination to capture different perspectives or to document different stages during the development lifecycle|
Data interpretation and analysis 221 , 222 Chapter 7 Identifying needs and establishing requirements 7.6 Task description Descriptions of business tasks have been used within software development for many years. During the 1970s and 1980s, "business scenarios" were commonly used as the basis for acceptance testing, i.e., the last testing stage before the customer paid the final fee installment and "accepted" the system. In more recent years, due to the emphasis on involving users earlier in the development lifecycle and the large number of new interaction devices now being developed, task descriptions are used throughout development, from early requirements activities through prototyping, evaluation, and testing. Consequently, more time and effort has been put into understanding how best to structure and use them| | In this section and the next, we use two main examples to illustrate the application of techniques. These are a library catalog service and a shared diary or calendar system. The library catalog is similar to any you might find in a public or |
Task description 223 university libr ,  | 7.6 Task description 223 university library, and allows you to access the details of books held in the library: for example, to search for books by a particular author, or by subject, to identify the location of a book you want to borrow, and to check on a member's current loans and status|
Task description 223 university libr ,  | The shared calendar application is to support a university department. Members of the department currently keep their own calendars and communicate their whereabouts to the department's administrator, who keeps the information in a central paper calendar. Unfortunately, the central calendar and the individuals' calendars easily become out of step as members of the department arrange their own engagements. It is hoped that having a shared calendar in which individuals can enter their own engagements will help overcome the confusion that often ensues due to this mismatch. Shared calendars raise some interesting aspects of collaboration and coordination, as discussed in Chapter 4, Box 4.2. In particular, people don't usually like to have their time filled with appointments without their consent, and so a mechanism is needed for people to protect some time from being booked by others|
Scenarios A scenario is an "inform ,  | 7.6.1 Scenarios A scenario is an "informal narrative description" (Carroll, 2000). It describes human activities or tasks in a story that allows exploration and discussion of contexts, needs, and requirements. It does not explicitly describe the use of software or other technological support to achieve a task. Using the vocabulary and phrasing of users means that the scenarios can be understood by the stakeholders, and they are able to participate fully in the development process. In fact, the construction of scenarios by stakeholders is often the first step in establishing requirements|
Scenarios A scenario is an "inform ,  | Imagine that you have just been invited along to talk to a group of users who perform data entry for a university admissions office. You walk in, and are greeted by Sandy, the supervisor, who starts by saying something like: Well, this is where the admissions forms arrive. We receive about 50 a day during the peak application period. Brian here opens the forms and checks that they are complete, that is, that all the documentation has been included. You see, we require copies of relevant school exam results or evidence of work experience before we can process the application. Depending on the result of this initial inspection, the forms getpassed to. . . |
Scenarios A scenario is an "inform ,  | Telling stories is a natural way for people to explain what they are doing or how to achieve something. It is therefore something that stakeholders can easily relate to. The focus of such stories is also naturally likely to be about what the users are trying to achieve, i.e., their goals. Understanding why people do things as they do and what they are trying to achieve in the process allows us to concentrate on the human activity rather than interaction with technology|
Scenarios A scenario is an "inform ,  | This is not to say that the human activity should be preserved and reflected in any new device we are trying to develop, but understanding what people do now is a good starting point for exploring the constraints, contexts, irritations, facilitators and so on under which the humans operate. It also allows us to identify the stakeholders and the products involved in the activity. Repeated reference to a particular |
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | A scenario that might be generated by potential users of a library catalog service is given below: Say I want to find a book by George Jeffries. I don't remember the title but I know it was published before 1995. I go to the catalog and enter my user password. I don't understand why I have to do this, since I can't get into the library to use the catalog without passing through security gates. However, once my password has been confirmed, I am given a choice of searching by author or by date, but not the combination of author and date. I tend to choose the author option because the date search usually identifies too many entries. After about 30 seconds the catalog returns saying that there are no entries for George Jeffries and showing me the list of entries closest to the one I've sought. When I see the list, I realize that in fact I got the author's first name wrong and it's Gregory, not George. I choose the entry I want and the system displays the location to tell me where to find the book|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | In this limited scenario of existing system use, there are some things of note: the importance of getting the author's name right, the annoyance concerning the need to enter a password, the lack of flexible search possibilities, and the usefulness of showing a list of similar entries when an exact match isn't clear. These are all indicators of potential design choices for the new catalog system. The scenario also tells us one (possibly common) use of the catalog system: to search for a book by an author when we don't know the title|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | The level of detail present in a scenario varies, and there is no particular guidance about how much or how little should be included. Often scenarios are generated during workshop or interview sessions to help explain or discuss some aspect of the user's goals. They can be used to imagine potential uses of a device as well as to capture existing behavior. They are not intended to capture a full set of requirements, but are a very personalized account, offering only one perspective|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | A simple scenario for the shared-calendar system that was elicited in an informal interview describes how one function of the calendar might work: to arrange a meeting between several people|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | The user types in all the names of the meeting participants together with some constraints such as the length of the meeting, roughly when the meeting needs to take place, and possibly where it needs to take place. The system then checks against the individuals' calendars and the central departmental calendar and presents the user with a series of dates on which everyone is free all at the same time. Then the meeting could be confirmed and written into peoples' calendars. Some people, though, will want to be asked before the calendar entry is made. Perhaps the system could email them automatically and ask that it be conjirmed before it is written in." An example of a futuristic scenario, devised by Symbian, showing one vision of how wireless devices might be used in the future is shown in Figure 7.7|
Scenarios A scenario is an "inform , 224 Chapter 7 Identifying needs and establishing requirements form, book, behavior, or location indicates that this is somehow central to the activity being performed and that we should take care to understand what it is and the role it plays| | In this chapter, we refer to scenarios only in their role of helping to establish requirements. They have a continuing role in the design process that we shall return to in Chapter 8. |
Task description 225 A businesswoman ,  | 7.6 Task description 225 A businesswoman traveling to Paris fm the US A businesswoman is traveling from San Francisco to Paris on a business trip. On her way to the airport she narrowly misses a trafJic delay. She avoids the trafic jam because her Srnartphone beeps, then sends her a text message warning her of the trafJic accident on her normal route from her ofice to the airport|
Task description 225 A businesswoman ,  | Upon arrival at the airport, the location-sensitive Srnartphone not@es the airline that she will be checking in shortly, and an airline employee immediately finds her and takes her baggage. Her on-screen display shows that her flight is on time and provides a map to her gate. On her way to the gate she downloads tourist information such as maps and events occurring in Paris during her stay|
Task description 225 A businesswoman ,  | Once she finds her seat on the plane, she begins to review all the information she has downloaded. She notices than an opera is playing in Paris that she has been wanting to see, and she books her ticket. Her Srnartphone can make the booking using her credit card number, which it has stored in its memory. This means that she does not need to reenter the credit card number each time she uses wcommerce (i.e., wireless commerce), facilities. The security written into the sofnvare of the Smartphone protects her against fraud|
Task description 225 A businesswoman ,  | The Srnartphone stores the opera booking along with several emails that she writes on the plane. As soon as she steps off the plane, the Smartphone makes the calls and automatically sends the emails|
Task description 225 A businesswoman , last: | As she leaves the airport, a map appears on her Smartphone's display, guiding her to her hotel|
Task description 225 A businesswoman ,  | Figure 7.7 A scenario showing how two technologies, a Smartphone and wcommerce (wireless commerce), might be used|
Task description 225 A businesswoman ,  | Capturing scenarios of existing behavior and goals helps in determining new scenarios and hence in gathering data useful for establishing the new requirements|
Task description 225 A businesswoman ,  | The next activity is intended to help you appreciate how a scenario of existing activity can help identify the requirements for a future application to support the same user goal|
Task description 225 A businesswoman ,  | I I Write a scenario of how you would currently go about choosing a new car. This should be a brand new car, not a second-hand car. Having written it, think about the important aspects 1 of the task, your priorities and preferences. Then imagine a new interactive product that 1 supports you in your goal and takes account of these issues. Write a futuristic scenario show- 1 ing how this product would support you|
Task description 225 A businesswoman ,  | I Comment The following example is a fairly generic view of this process. Yours will be different, but I you may have identified similar concerns and priorities|
Task description 225 A businesswoman ,  | The first thing I would do is to observe cars on the road and identify ones that I like the look oj This may take some weeks. I would also try to identify any consumer reports that will include an assessment of car performance. Hopefully, these initial activities will result in me identifying a likely car to buy. The next stage will be to visit a car showroom and see at first hand what the car looks like, and how comfortable it is to sit in. If I still feel positive about the car, then I'll ask for a test drive. Even a short test drive helps me to |
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | From this scenario, it seems that there are broadly two stages involved in the task: researching the different cars available, and gaining first-hand experience of potential purchases|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | In the former, observing cars on the road and getting actual and maybe critical information about them has been highlighted. In the latter, the test drive seems to be quite significant|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | For many people buying a new car, the smell and touch of the car's exterior and interior, and the driving experience itself are often the most influential factors in choosing a particular model. Other more factual attributes such as fuel consumption, amount of room inside, colors available, and price may rule out certain makes and models, but at the end of the day, cars are often chosen according to how easy they are to handle and how comfortable they are inside. This makes the test drive a vital part of the process of choosing a new car|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | Taking these comments into account, we've come up with the following scenario describing how a new "one-stop7 ' shop for new cars might operate. This product makes use of immersive virtual reality technology that is already used for other applications such as designing buildings and training bomb disposal experts|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | I want to buy a new car, so I go down the street to the local "one-stop car shop. " The shop has a number of booths in it, and when Igo in I'm directed to an empty booth|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | Inside there's a large seat that reminds me of a racing car seat, and in front of that a large display screen, keyboard and printer. As Isit down, the display jumps into life. It offers me the options of browsing through video clips of new cars which have been released in the last two years, or of searching through video clips of cars by make, by model, or by year. I can choose as many of these as I like. I also have the option of searching through and reading or printing consumer reports that have been produced about the cars I'm interested in. I spend about an hour looking through materials and deciding that I'd like to experience a couple that look promising. I can of course go away and come back later, but I'd like to have a go with some of those I've found. By flicking a switch in my armrest, Z can call up the options for virtual reality simulations for any of the cars I'm interested in. These are really great as they allow me to take the car for a test drive, simulating everything about the driving experience in this car, from road holding, to windscreen display, and front pedal pressure to dash board layout. It even re-creates the atmosphere of being inside the car|
Task description 225 A businesswoman , 226 Chapter 7 Identifying needs and establishing requirements understand how well the car handles, how noisy is the engine, how smooth are the gear changes, and so on. Once I've driven the car myself, I can usually tell whether I would like to own it or not| | Note that the product includes support for the two research activities mentioned in the original scenario, as well as the important test drive facility. This would be only a first cut scenario which would then be refined through discussion and further investigation|
Use cases Use cases also focus on  ,  | 7.6.2 Use cases Use cases also focus on user goals, but the emphasis here is on a user-system interaction rather than the user's task itself. They were originally introduced through the object-oriented community in the book Object-Oriented Sofiware Engineering (Jacobson et al., 1992). Although their focus is specifically on the interaction between the user (called an "actor'') and a software system, the stress is still very much on the user's perspective, not the system's. The term "scenario" is also used in the context of use cases. In this context, it represents one path through the use |
Task description 227 I case, i.e,, o ,  | 7.6 Task description 227 I case, i.e,, one particular set of conditions. This meaning is consistent with the definition given above in that they both represent one specific example of behavior|
Task description 227 I case, i.e,, o ,  | A use case is associated with an actor, and it is the actor's goal in using the system that the use case wants to capture. In this technique, the main use case describes what is called the "normal course" through the use case, i.e., the set of actions that the analyst believes to be most commonly performed. So, for example, if through data gathering we have found that most users of the library go to the catalog to check the location of a book before going to the shelves, then the normal course for the use case would include this sequence of events. Other possible sequences, called alternative courses, are then listed at the bottom of the use case|
Task description 227 I case, i.e,, o ,  | A use case for arranging a meeting using the shared calendar application, with the normal course being that the meeting is written into the calendar automatically, might be: 1. The user chooses the option to arrange a meeting|
Task description 227 I case, i.e,, o , 2. The system prompts user for the names of attendees|last: | 2. The system prompts user for the names of attendees|
Task description 227 I case, i.e,, o , 3. The user types in a list of names|last: | 3. The user types in a list of names|
Task description 227 I case, i.e,, o , 4. The system checks that the list is valid|last: | 4. The system checks that the list is valid|
Task description 227 I case, i.e,, o , 5. The system prompts the user for meeting constraints|last: | 5. The system prompts the user for meeting constraints|
Task description 227 I case, i.e,, o , 6. The user types in meeting constraints|last: | 6. The user types in meeting constraints|
Task description 227 I case, i.e,, o , 7. The system searches the calendars for a date that satisfies the constraints|last: | 7. The system searches the calendars for a date that satisfies the constraints|
Task description 227 I case, i.e,, o , 8. The system displays a list of potential dates|last: | 8. The system displays a list of potential dates|
Task description 227 I case, i.e,, o , 9. The user chooses one of the dates|last: | 9. The user chooses one of the dates|
Task description 227 I case, i.e,, o , 10. The system writes the meeting into the calendar|last: | 10. The system writes the meeting into the calendar|
Task description 227 I case, i.e,, o , 11. The system emails all the meeting participants informing them of the appointment|last: | 11. The system emails all the meeting participants informing them of the appointment|
Task description 227 I case, i.e,, o , 11. The system emails all the meeting participants informing them of the appointment|last: | Alternative courses: 5. If the list of people is invalid, 5.1 The system displays an error message|
The system returns to step 2| , last: | 5.2 The system returns to step 2|
The system returns to step 2| , 8. If no potential dates are found, 8.1 The system displays a suitable message|last: | 8. If no potential dates are found, 8.1 The system displays a suitable message|
The system returns to step 5| , last: | 8.2 The system returns to step 5|
The system returns to step 5| ,  | Note that the number associated with the alternative course indicates the step in the normal course that is replaced by this action or set of actions. Also note how specific the use case is about how the user and the system will interact|
The system returns to step 5| ,  | Use cases may be described graphically. Figure 7.8 shows the use case diagram for the above calendar example. The actor "Administrator" is associated with the use case "Arrange a meeting." Another actor we might identify for the calendar system is the "Departmental member" who updates his own calendar entries, also shown in Figure 7.8. Actors may be associated with more than one use case, so for |
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors| | 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors|
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors| | example the actor "Departmental member" can be associated with a use case "Retrieve contact details" as well as the "Update calendar entry" use case. Each use case may also be associated with more than one actor|
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors| | This kind of description has a different style and a different focus from the scenarios described above. The layout is more formal, and the structure of "good" use cases has been discussed by many (e.g., Cockburn, 1995; Gough et al., 1995; Ben Achour, 1999). The description also focuses on the user-system interaction rather than on the user's activities; thus a use case presupposes that technology is being used|
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors| | This kind of detail is more useful at conceptual design stage than during requirements or data gathering, but use cases have been found to help some stakeholders express their views on how existing systems are used and how a new system might work|
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors| | To develop a use case, first identify the actors, i.e., the people or other systems that will be interacting with the system under development. Then examine these actors and identify their goal or goals in using the system. Each of these will be a use case|
The system returns to step 5| , 228 Chapter 7 Identifying needs and establishing requirements r Administrator Departmental member I I Figure 7.8 Use case diagram for the shared calendar system showing three use cases and two actors|last: | Library Figure member 7.9 Use case diagram for c the library catalog service. |
Task description 229 Consider the ex ,  | 7.6 Task description 229 Consider the example of the library catalog service again. One use case is "Locate book," and this would be associated with the "Library member" actor. Identify one other main actor and an associated use case, and draw a use case diagram|
Task description 229 Consider the ex ,  | Write out the use case for "Locate book" including the normal and some alternative courses. You may assume that the normal course is for users to go to the catalog to find the location, and that the most common path to find this is through a search by author|
Task description 229 Consider the ex ,  | Comment One other main actor is the "Librarian." A use case for the "Librarian" would be "Update catalog." Figure 7.9 is the associated use case diagram. There are other use cases you may have identified|
Task description 229 Consider the ex ,  | The use case for "Locate book" might be something like this: 1. The system prompts for user name and password|
Task description 229 Consider the ex , 2. The user enters his or her user name and password into the catalog system|last: | 2. The user enters his or her user name and password into the catalog system|
Task description 229 Consider the ex , 3. The system verifies the user's password|last: | 3. The system verifies the user's password|
Task description 229 Consider the ex , 4. The system displays a menu of choices|last: | 4. The system displays a menu of choices|
Task description 229 Consider the ex , 5. The user chooses the search option|last: | 5. The user chooses the search option|
Task description 229 Consider the ex , 6. The system displays the search menu|last: | 6. The system displays the search menu|
Task description 229 Consider the ex , 7. The user chooses to search by author|last: | 7. The user chooses to search by author|
Task description 229 Consider the ex , 8. The system displays the search author screen|last: | 8. The system displays the search author screen|
Task description 229 Consider the ex , 9. The user enters the author's name|last: | 9. The user enters the author's name|
Task description 229 Consider the ex , 10. The system displays search results|last: | 10. The system displays search results|
Task description 229 Consider the ex , 11. The user chooses the required book|last: | 11. The user chooses the required book|
Task description 229 Consider the ex , 12. The system displays details of chosen book|last: | 12. The system displays details of chosen book|
Task description 229 Consider the ex , 13. The user notes location|last: | 13. The user notes location|
Task description 229 Consider the ex , 14. The user quits catalog system|last: | 14. The user quits catalog system|
Task description 229 Consider the ex , 14. The user quits catalog system|last: | Alternative courses: 4. If user password is not valid 4.1 The system displays error message|
The system returns to step 1| , last: | 4.2 The system returns to step 1|
The system returns to step 1| , 5. If user knows the book details 5.1 The user chooses to enter book details|last: | 5. If user knows the book details 5.1 The user chooses to enter book details|
The system displays book details scr , last: | 5.2 The system displays book details screen|
The user enters book details| , last: | 5.3 The user enters book details|
The system goes to step 12| , last: | 5.4 The system goes to step 12|
Essential use cases Essential use  ,  | 7.6.3 Essential use cases Essential use cases were developed by Constantine and Lockwood (1999) to combat what they see as the limitations of both scenarios and use cases as described |
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | above. Scenarios are concrete stories that concentrate on realistic and specific activities. They therefore can obscure broader issues concerned with the wider organizational view. On the other hand, traditional use cases contain certain assumptions, including the fact that there is a piece of technology to interact with, and also assumptions about the user interface and the kind of interaction to be designed|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | Essential use cases represent abstractions from scenarios, i.e., they represent a more general case than a scenario embodies, and try to avoid the assumptions of a traditional use case. An essential use case is a structured narrative consisting of three parts: a name that expresses the overall user intention, a stepped description of user actions, and a stepped description of system responsibility. This division between user and system responsibilities can be very helpful during conceptual design when considering task allocation and system scope, i.e., what the user is responsible for and what the system is to do|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | An example essential use case based on the library example given above is shown in Figure 7.10. Note that the steps are more generalized than those in the use case in Section 7.6.2, while they are more structured than the scenario in Section 7.6.1. For example, the first user intention does not say anything about typing in a list of names, it simply states that the user identifies meeting attendees|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | This could be done by identifying roles, rather than people's names, from an organizational or project chart, or by choosing names from a list of people whose calendars the system keeps, or by typing in the names. The point is that at the time of creating this essential use case, there is no commitment to a particular interaction design|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | Instead of actors, essential use cases are associated with user roles. One of the differences is that an actor could be another system, whereas a user role is just that: not a particular person, and not another system, but a role that a number of different people may play when using the system. Just as with actors, though, producing an essential use case begins with identifying user roles|
Essential use cases Essential use  , 230 Chapter 7 Identifying needs and establishing requirements USER INTENTION SYSTEM RESPONSIBILITY arrange a meeting request meeting attendees and constraints identify meeting attendees and constraints suggest potential dates choose preferred date book meeting - - - - - - -- - - - - Figure 7.10 An essential use case for arranging a meeting in the shared calendar application| | Construct an essential use case "1ocateBook" for the user role "Library member" of the library catalog service discussed in Activity 7.4. |
Task analysis 231 Comment locateBook ,  | 7.7 Task analysis 231 Comment locateBook I USER INTENTION SYSTEM RESPONSIBILITY identify self verify identity request appropriate details I offer known details 1 offer search results 1 note search results I quit system close Note that here we don't talk about passwords, but merely state that the users need to identify themselves. This could be done using fingerprinting, or retinal scanning, or any other suitable technology. The essential use case does not commit us to technology at this point. Neither does it specify search options or details of how to initiate the search|
Task analysis 231 Comment locateBook ,  | I 7.7 Task analysis I Task analysis is used mainly to investigate an existing situation, not to envision new systems or devices. It is used to analyze the underlying rationale and purpose of what people are doing: what are they trying to achieve, why are they trying to achieve it, and how are they going about it? The information gleaned from task analysis establishes a foundation of existing practices on which to build new requirements or to design new tasks|
Task analysis 231 Comment locateBook ,  | Task analysis is an umbrella term that covers techniques for investigating cognitive processes and physical actions, at a high level of abstraction and in minute detail. In practice, task analysis techniques have had a mixed reception. The most widely used version is Hierarchical Task Analysis (HTA) and this is the technique we introduce in this chapter. Another well-known task analysis technique called GOMS (goals, operations, methods, and selection rules) that models procedural knowledge (Card et al., 1983) is described in Chapter 14|
Task analysis 231 Comment locateBook ,  | I 7.7.1 Hierarchical task analysis Hierarchical Task Analysis (HTA) was originally designed to identify training needs (Annett and Duncan, 1967). It involves breaking a task down into subtasks and then into sub-subtasks and so on. These are then grouped together as plans that specify how the tasks might be performed in an actual situation. HTA focuses on the physical and observable actions that are performed, and includes looking at actions that are not related to software or an interaction device at all. The starting point is a user goal. This is then examined and the main tasks associated with achieving that goal are identified. Where appropriate, these tasks are subdivided into subtasks|
Task analysis 231 Comment locateBook ,  | Consider the library catalog service, and the task of borrowing a book. This task can be decomposed into other tasks such as accessing the library catalog, searching by name, title, subject, or whatever, making a note of the location of the book, going to the correct shelf, taking it down off the shelf (provided it is there) and finally tak- |
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4| | 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 2: do 2.1 -2.4-2.5. If book not identified do 2.2-2.3-2.4-2.5|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | Figure 7.1 1 An HTA for borrowing a book from the library|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4| | it to the check-out counter. This set of tasks and subtasks might be performed in a different order depending on how much is known about the book, and how familiar the user might be with the library and the book's likely location. Figure 7.11 shows these subtasks and some plans for different paths through those subtasks. Indentation shows the hierarchical relationship between tasks and subtasks|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4| | Note how the numbering works for the task analysis: the number of the plan corresponds to the number of the step to which the plan relates. For example, plan 2 shows how the subtasks in step 2 can be ordered; there is no plan 1 because step 1 has no subtasks associated with it|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4| | An alternative expression of an HTA is a graphical box-and-line notation. Figure 7.12 shows the graphical version of the HTA in Figure 7.11. Here the subtasks are represented by named boxes with identifying numbers. The hierarchical relationship between tasks is shown using a vertical line. If a task is not decomposed any further then a thick horizontal line is drawn underneath the corresponding box|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 0: do 1-3-4|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 0: do 1-3-4|: If book isn't on the shelf expected, do 2-3-4|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 0: do 1-3-4|: I I I 1 plan 2: do 2.1 -2.4-2.5|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 0: do 1-3-4|: If book not identified from information available, do 2.2-2.3-2.4-2.5|
Task analysis 231 Comment locateBook , 232 Chapter 7 Identifying needs and establishing requirements 0. In order to borrow a book from the library 1. o to the library 2. fnd the required book 2.1 access library catalog 2.2 access the search screen 2.3 enter search criteria 2.4 identify required book 2.5 note location 3. go to correct shelf and retrieve book 4. take book to checkout counter plan 0: do 1-3-4. If book isn't on the shelf expected, do 2-3-4|last: | plan 0: do 1-3-4|: I I I I I Figure 7.1 2 A graphical representation of the task analysis for borrowing a book. |
Task analysis 233 I Plans are also s ,  | 7.7 Task analysis 233 I Plans are also shown in this graphical form. They are written alongside the vertical line emitting from the task being decomposed. For example, in Figure 7.12 plan 2 is specified next to the vertical line from box 2 "find required book." ook back at the scenario for arranging a meeting in the shared calendar application. Perrm hierarchical task analysis for the goal of arranging a meeting. Include all plans in your answer. Express the task analysis textually and graphically|
Task analysis 233 I Plans are also s ,  | Comment The main tasks involved in this are to find out who needs to be at the meeting, find out the constraints on the meeting such as length of meeting, range of dates, and location, find a suitable date, enter details into the calendar, and inform attendees. Finding a suitable date can be decomposed into other tasks such as looking in the departmental calendar, looking in individuals' calendars, and checking potential dates against constraints. The textual version of the HTA is shown below. Figure 7.13 shows the corresponding graphical representation|
Task analysis 233 I Plans are also s , 0. In order to arrange a meeting 1. compile a list of meeting attendees 2. compile a list of meeting constraints 3. find a suitable date 3.1 identify dates from departmental calendar 3.2 identify dates from each individual's calendar 3.3 compare ptential dates 3.4 choose one preferred date 4. enter meeting into calendars 5. inform meeting participants of calendar entry plan 0: do 1-2-3. If potential dates are identified, do 4-5. If no potential dates can be identified, repeat 2-3| | 0. In order to arrange a meeting 1. compile a list of meeting attendees 2. compile a list of meeting constraints 3. find a suitable date 3.1 identify dates from departmental calendar 3.2 identify dates from each individual's calendar 3.3 compare ptential dates 3.4 choose one preferred date 4. enter meeting into calendars 5. inform meeting participants of calendar entry plan 0: do 1-2-3. If potential dates are identified, do 4-5. If no potential dates can be identified, repeat 2-3|
Task analysis 233 I Plans are also s , 0. In order to arrange a meeting 1. compile a list of meeting attendees 2. compile a list of meeting constraints 3. find a suitable date 3.1 identify dates from departmental calendar 3.2 identify dates from each individual's calendar 3.3 compare ptential dates 3.4 choose one preferred date 4. enter meeting into calendars 5. inform meeting participants of calendar entry plan 0: do 1-2-3. If potential dates are identified, do 4-5. If no potential dates can be identified, repeat 2-3|last: | plan 3: do 3.1-3.2-3.3-3.4 or do 3.2-3.1 -3.3-3.4 plan 0: do 1-2-3|
Task analysis 233 I Plans are also s , 0. In order to arrange a meeting 1. compile a list of meeting attendees 2. compile a list of meeting constraints 3. find a suitable date 3.1 identify dates from departmental calendar 3.2 identify dates from each individual's calendar 3.3 compare ptential dates 3.4 choose one preferred date 4. enter meeting into calendars 5. inform meeting participants of calendar entry plan 0: do 1-2-3. If potential dates are identified, do 4-5. If no potential dates can be identified, repeat 2-3| | If potential dates are identified, do 4-5. If not repeat 2-3 I I I I I plan 3: do 3.1 -3.2-3.3-3.4 - - -- Figure 7.1 3 A graphical representation of the meeting HTA. |
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Comment Real tasks are very complex. One of the main problems with task analysis is that it does not scale very well. The notation soon becomes unwieldy, making it difficult to follow. Imagine what it would be like to produce a task analysis in which there were hundreds or even thousands of subtasks|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | A second problem is thkt task analysis is limited in the kind of tasks it can model. For example, it cannot model tasks that are overlapping or parallel, nor can it model interruptions|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Most people work through interruptions of various kinds, and many significant tasks happen in parallel|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Assignment This assignment is the first of four assignments that together take you through the complete development lifecycle for an interactive product. This assignment requires you to use techniques described in this chapter for identifying needs and establishing requirements. The further three assignments are at the end bf Chapters 8, 13, and 14|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | The overall assignment is for you to design and evaluate an interactive website for booking tickets online for events like concerts, the theatre and the cinema. This is currently an activity that in many instances, can be difficult or inconvenient to achieve using traditional means (e.g., waiting for ages on the phone to get hold of an agent, queuing for hours in the rain at a ticket office)|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | For this assignment, you should: (a) Identify users' needs for this website. You could do this in a number of ways. For example, you could observe people using ticket agents, think about your own experience of purchasing tickets, look at existing websites for booking tickets, talk to friends and family about their experiences, and so on. Record your data carefully|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | (b) Based on your user requirements, choose two different user profiles and produce one main scenario for each one, capturing how the user is expected to interact with the system|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | (c) Using the scenarios generated from your data gathering, perform a task analysis on the main task associated with the ticket booking system, i.e., booking a ticket|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | (d) Based on the data gathered in part (a) and your subsequent interpretation and analysis, identify different kinds of requirements for the website, according to the headings introduced in Section 7.3 above. Write up the requirements in the style of the Volere template|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Summary In this chapter, we have looked in more detail at how to identify users' needs and establish requirements for interaction design. Various data-gathering techniques can be used to collect data for interpretation and analysis. The most common of these are questionnaires, interviews, focus groups, workshops, naturalistic observation, and studying documentation. Each of these has advantages and disadvantages that must be balanced against your constraints when choosing which techniques to use for a particular project. They can be combined in many different ways, and can be supported by props such as scenarios and prototypes. How |
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Further reading 235 to carry out these techniques is covered in Chapters 12 through 14, Scenarios, use cases, and essential use cases are helpful techniques for beginning to document the findings from the data-gathering sessions. Task analysis is a little more structured, but does not scale well|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | Key points Getting the requirements right is crucial to the success of the interactive product|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | There are different kinds of requirements: functional, data, environmental, user, and usability|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | Every system will have requirements under each of these headings|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | The most commonly used data-gathering techniques for this activity are: questionnaires, interviews, workshops or focus groups, naturalistic observation, and studying documentation|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Descriptions of user tasks such as scenarios, use cases, and essential use cases help users to articulate existing work practices. They also help to express envisioned use for new devices|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | Task analysis techniques help to investigate existing systems and current practices|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Further reading ROBERTSON, SUZANNE, AND ROBERTSON, JAMES (1999) Mastering the Requirements Process. Boston: Addison-Wesley|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | In this book, Robertson and Robertson explain a useful framework for software requirements work (see also the interview with Suzanne Robertson after this chapter)|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | CONSTANTINE, LARRY L., AND LOCKWOOD, LUCY A. D|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | (1999) Software for Use. Boston: Addison-Wesley. This very readable book provides a concrete approach for modeling and analyzing software systems. The approach has a usercentered focus and contains some useful detail. It also includes more information about essential use cases|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | JACOBSON, I., BOOCH, G., AND RUMBAUGH, J. (1992) The Unified Software Development Process. Boston: AddisonWesley|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | This is not an easy book to read, but it is the definitive guide for developing object-oriented systems using use cases and the modeling language Unified Modeling Language (UML)|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | BRUEGGE, BERND, AND DUTOIT, ALLEN H. (2000) Objectoriented Software Engineering. Upper Saddle River, NJ: Prentice-Hall. This book is a comprehensive treatment of the whole development process using object-oriented techniques such as use cases. The book is organized to help those involved in project work|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference|last: | SOMMERVILLE, IAN (2001) Software Engineering (6th ed.)|
Task analysis 233 I Plans are also s , 234 Chapter 7 Identifying needs and establishing requirements What do you think are the main problems with using task analysis on real problems? Think of more complex tasks such as scheduling delivery trucks, or organizing a large conference| | Boston: Addison-Wesley. If you are interested in pursuing notations for functional and data requirements, then this book introduces a variety of notations and techniques used in software engineering. |
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | Suzanne is particularly well known for her work in systems analysis and requirements gathering activities|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: What are requirements? SR: Well the problem is that "requirements" has turned into an elastic term. Requirements is an enormously wide field and there are so many different types of requirements. One person may be talking about budget, somebody else may be talking about interfacing to an existing piece of software, somebody else may be talking about a performance requirement, somebody else may be talking about the calculation of an algorithm, somebody else may be talking about a data definition, and I could go on for hours as to what requirement means. What we advise people to do to start with is to look for something we call "linguistic integrity" within their own project. When all people who are connected with the project are talking about requirements, what do they mean? This gets very emotional, and that's why we came up with our framework. We gathered together all this experience of different types of requirements, tried to pick the most common organization, and then wrote them down in a framework|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: Please would you explain your framework? (The version discussed in this interview is shown in the figure on page 238. The most recent version may be downloaded from www.systemsguild.com.) SR: Imagine a huge filing cabinet with 27 drawers, and in each drawer you've got a category of knowledge that is related to requirements. In the very first drawer for example you've got the goals, i.e., the reason for doing the project. In the second drawer you've got the stakeholders|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | These are roles because they could be played by more than one person, and one person may play more than one role. You've got the client who's going to pay for the development, and the customer who's making the decision about buying it. Then you've got stakeholders like the project leader, the developers, the requirements engineers, the designers, the quality people, and the testers. Then you've got the less obvious stakeholders like surrounding organizations, professional bodies, and other people in the organization whose work might be affected by the project you're doing, even if they're never going to use the product|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: So do you find the stakeholders by just asking questions? SR: Yes, partly that and partly by using the domain model of the subject matter, which is in drawer 9, as the driver to ask more questions about the stakeholders|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | For example, for each one of the subject matter areas, ask who have we got to represent this subject matter? For each one of the people that we come across, ask what subject matter are we expecting from them? Drawer 3 contains the end users. I've put them in a separate drawer because an error that a lot of people make when they're looking for requirements is that the only stakeholder they talk about is the end user. They decide on the end user too quickly and they miss opportunities|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | So you end up building a product that is possibly less competitive. I keep them a bit fuzzy to start with, and as you start to fix on them then you can go into really deep analysis about them: What is their psychology? What are their characteristics? What's their subject-matter knowledge? How do they feel about their work? How do they feel about technology? All of these things help you to come up with the most competitive non-functional requirements for the product|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: How do you resolve conflict between stakeholders?  SR: Well, part of it is to get the conflicts out in the open up front, so people stop blaming each other, but that certainly doesn't resolve it. One of the ways is to make things very visible all the way through and to keep reminding people that conflict is respectable, that it's a sign of creativity, of people having ideas|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | The other thing that we do is that in our individual requirements (that is atomic requirements), which end up living in drawers 9 to 17 of this filing cabinet, we've got a place to say "Conflict: Which other requirement is this in conflict with?" and we encourage people to |
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | Interview 237 identify them. Sometimes these conflicts resolve lution ideas, and when you get a solution idea, pop it themselves because they're on people's back burners, in this drawer. This helps requirements engineers, I and some of the conflicts are resolved by people just think, because we are trained to think of solutions, talking to one another. We have a point at which we not to dig behind and find the real problem|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | cross-check recluirements and look for conflicts and if we find some that are just not sorting themselves out, then we stop and have a serious negotiation|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible|last: | In essence, it's bubbling the conflicts up to the surface|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible|last: | Keep on talking about them and keep them visible|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible|last: | De-personalize it as much as you can. That helps|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: What other things are associated with these atomic requirements? SR. Each one has a unique number and a description that is as close as you can get to what you think the thing means. It also has a rationale that helps you to figure out what it really is. Then the next component is the fit criterion, which is, "If somebody came up with a solution to this requirement, how would you know whether or not it satisfies the requirement?" So this means making the requirement quantifiable, measurable|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | And it's very powerful because it makes you think about the requirement. One requirement quite often turns into several when you really try and quantify it. It also provides a wonderful opportunity for involving testers, because at that point if you write the fit criterion you can get a tester and ask whether this can be used as input to writing a cost-effective test. Now this is different from the way we usually use the testers, which is to build tests that test our solutions. Here I want to get them in much earlier, I want them to test whether this requirement really is a requirement|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | HS: How do you go about identifying requirements? SR. For too long we've been saying the stakeholders should give us their requirements: we'll ask them and they'll give them to us. We've realized that this is not practical-partly because there are many requirements people don't know they've got. Some requirements are conscious and they're usually because things have gone wrong or they'd like something extra. Some requirements are unconscious because maybe people are used to it, or maybe they haven't a clue because they don't see the overall picture. And then there are undreamed-of requirements that people just don't dream they could ever have, because we've all got boundaries based on what we think technology is capable of doing or what we know about technology or what our experience is. So it's not just asking people for things, it's also inventing requirements. I think that's where prototyping comes in and scenario modeling and storyboarding and all of those sorts of techniques to help people to imagine what they could have|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | If you're building a product for the market and you want to be more competitive you should be inventing requirements. Instead of constricting yourself within the product boundary, say, "Can I push myself out a bit further? Is there something else I could do that isn't being done?" HS: So what kinds of techniques can people use to HS: So what's in drawers 18 through 27? push out further? SR: Well here you can get into serious quarrels. The overall category is "project issues," and people often say they're not really requirements, and they aren't|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | But if the project is not being managed according to the real work that's being done, in other words the contents of the drawers, then the project goes off the rails. In project issues we create links so that a project manager can manage the project according to what's happening to the requirements|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | In the last drawer we have design ideas. People say when you're gathering requirements you should not be concerned with how you're going to solve the problem. But mostly people tell you requirements in the form of a solution anyway. The key thing is to learn how to separate the real requirements from soSR: One of the things is to learn how to imagine what it's like to be somebody else, and this is why going into other fields, for example family therapy, is helpful|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | They've learned an awful lot about how to imagine you might be somebody else. And that's not something that software engineers are taught in college normally and this is why it's very healthy for us to be bringing together the ideas of psychology and sociology and so on with software and systems engineering|
Task analysis 233 I Plans are also s , 236 Chapter 7 Identifying needs and establishing r Suzanne Roberston is a principal of The Atlantic Systems Guild, an international think tank producing numerous books and seminars whose aim is to make good ideas to do with systems engineering more accessible| | Bringing in these human aspects-the performance, the usability features, the "look and feel" featuresthat's going to make our products more competitive. I always tell people to read a lot of novels. If you're having trouble relating to some stakeholders, for example, go and read some Jane Austen and then try to |
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area|last: | HS: So what you're saying really is that it's not easy|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | SR. It's not easy. I don't think there's any particular technique. But what we have done is we have come up with a lot of different "trawling" techniques, along with recommendations, that can help you|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | HS: Do you have any other tips for gathering requirements?  SR: It's important for people to feel that they've been heard. The waiting room (drawer number 26) was invented because of a very enthusiastic high-level stakeholder in a project we were doing. She was very enthusiastic and keen and very involved. Wonderful! She really gave us tremendous ideas and support. The problem was she kept having ideas, and we didn't know what to do. We didn't want to stop her having ideas, on the other hand we couldn't always include them because then we would never get anything built|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | So we invented the waiting room. All the good ideas we have we put in there and every so often we go into the waiting room and review the ideas. Some of them get added to the product, some are discarded, and some are left waiting. The psychology of it is very good because the idea's in the waiting room, everyone knows it's in there, but it's not being ignored. When people feel heard, they feel better and consequently they're more likely to cooperate and give you time|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | The Template PROJECT DRIVERS NON-FUNCTIONAL REQUIREMENTS 1. The Purpose of the 10. Look and Feel Requirements Product 11. Usability Requirements 2. Client, Customer and other 12. Performance Requirements Stakeholders 13. Operational Requirements 3. Users of the Product 14. Maintainability and Portability Requirements 15. Security Requirements PROJECT CONSTRAINTS 16. Cultural and Political Requirements 4. Mandated Constraints 17. Legal Requirements 5. Naming Conventions and Definitions PROJECT ISSUES 6. Relevant Facts and 18. Open Issues Assumptions 19. Off-the-shelf Solutions 20. New Problems 21. Tasks FUNCTIONAL REQUIREMENTS 22. Cutover 7. The Scope of the Work 23. Risks 8. The Scope of the 24. Costs Product 25. User Documentation and Training 9. Functional and Data 26. Waiting Room Requirements 27. Ideas for Solutions The Volere Requirements Specification Template (0 1995-2001 Atlantic Systems Guild). |
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | Chapter 8 Design, prototyping and construction I 8.1 Introduction 8.2 Prototyping and construction 8.2.1 What is a prototype? 8.2.2 Why prototype? 8.2.3 Low-fidelity prototyping 8.2.4 High-fidelity prototyping .8.2.5 Compromises in prototyping 8.2.6 Construction: from design to implementation 8.3 Conceptual design: moving from requirements to first design 8.3.1 Three perspectives For developing a conceptual model 8.3.2 Expanding the conceptual model 8.3.3 Using scenarios in conceptual design 8.3.4 Using prototypes in conceptual design 8.4 Physical design: getting concrete 8.4.1 Guidelines for physical design 8.4.2 Different kinds of widget 8.5 Tool support 8.1 Introduction Design activities begin once a set of requirements has been established. Broadly speaking, there are two types of design: conceptual and physical. The former is concerned with developing a conceptual model that captures what the product will do and how it will behave, while the latter is concerned with details of the design such as screen and menu structures, icons, and graphics. The design emerges iteratively, through repeated design-evaluation-redesign cycles involving users|
Task analysis 233 I Plans are also s , 238 Chapter 7 Identifying needs and establishing requirements imagine what it would have been like to have been the heroine in Pride and Prejudice. What would it have been like to have to change your clothes three times a day? I find this helps me a lot, it frees your mind and then you can say, "OK, what's it really like to be that other person?" There's a lot to learn in that area| | For users to effectively evaluate the design of an interactive product, designers must produce an interactive version of their ideas. fn the early stages of development, these interactive versions may be made of paper and cardboard, while as design progresses and ideas become more detailed, they may be polished pieces of software, metal, or plastic that resemble the final product. We have |
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction| | 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction| | There are two distinct circumstances for design: one where you're starting from scratch and one where you're modifying an existing product. A lot of design comes from the latter, and it may be tempting to think that additional features can be added, or existing ones tweaked, without extensive investigation, prototyping or evaluation. It is true that if changes are not significant then the prototyping and evaluation activities can be scaled down, but they are still invaluable activities that should not be skipped|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | In Chapter 7, we discussed some ways to identify user needs and establish requirements|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction| | In this chapter, we look at the activities involved in progressing a set of requirements through the cycles of prototyping to construction. We begin by explaining the role and techniques of prototyping and then explain how prototypes may be used in the design process. Tool support plays an important part in development, but tool support changes so rapidly in this area that we do not attempt to provide a catalog of current support. Instead, we discuss the kinds of tools that may be of help and categories of tools that have been suggested. I The main aims of this chapter are to: Describe prototyping and different types of prototyping activities|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Enable you to produce a simple prototype|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Enable you to produce a conceptual model for a system and justify your choices|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Enable you to attempt some aspects of physical design|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Explain the use of scenarios and prototypes in conceptual design|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Discuss standards, guidelines, and rules available to help interaction designers|
Task analysis 233 I Plans are also s , 240 Chapter 8 Design, prototyping and construction called the activity concerned with building this interactive version prototyping and construction|last: | Discuss the range of tool support available for interaction design|
Prototyping and construction It is o ,  | 8.2 Prototyping and construction It is often said that users can't tell you what they want, but when they see something and get to use it, they soon know what they don't want. Having collected information about work practices and views about what a system should and shouldn't do, we then need to try out our ideas by building prototypes and iterating through several versions. And the more iterations, the better the final product will be|
Prototyping and construction It is o ,  | I 8.2.1 What is a prototype? When you hear the term prototype, you may imagine something like a scale model of a building or a bridge, or maybe a piece of software that crashes every few minutes|
Prototyping and construction It is o ,  | But a prototype can also be a paper-based outline of a screen or set of screens, an electronic "picture," a video simulation of a task, a three-dimensional paper and cardboard mockup of a whole workstation, or a simple stack of hyperlinked screen shots, among other things. |
Protoiyping and construction 241 I I ,  | 8.2 Protoiyping and construction 241 I In fact, a prototype can be anything from a paper-based storyboard through to a complex piece of software, and from a cardboard mockup to a molded or pressed piece of metal. A prototype allows stakeholders to interact with an envisioned product, to gain some experience of using it in a realistic setting, and to explore imagined uses|
Protoiyping and construction 241 I I ,  | For example, when the idea for the Palmpilot was being developed, Jeff Hawkin (founder of the company) carved up a piece of wood about the size and shape of the device he had imagined. He used to carry this piece of wood around with him and pretend to enter information into it, just to see what it would be like to own such a device (Bergman and Haitani, 2000). This is an example of a very simple (some might even say bizarre) prototype, but it served its purpose of simulating scenarios of use|
Protoiyping and construction 241 I I ,  | Ehn and Kyng (1991) report on the use of a cardboard box with the label "Desktop Laser Printer" as a mockup. It did not matter that, in their setup, the printer was not real. The important point was that the intended users, journalists and typographers, could experience and envision what it would be like to have one of these machines on their desks. This may seem a little extreme, but in 1982 when this was done, desktop laser printers were expensive items of equipment and were not a common sight around the office|
Protoiyping and construction 241 I I ,  | So a prototype is a limited representation of a design that allows users to interact with it and to explore its suitability|
Why prototype? Prototypes are a us ,  | 8.2.2 Why prototype? Prototypes are a useful aid when discussing ideas with stakeholders; they are a communication device among team members, and are an effective way to test out ideas for yourself. The activitqof building prototypes encourages reflection in design, as described by Schon (1983) and as recognized by designers from many disciplines as an important aspect of the design process. Liddle (1996), talking about software design, recommends that prototyping should always precede any writing of code|
Why prototype? Prototypes are a us , last: | Prototypes answer questions and support designers in choosing between alternatives|
Why prototype? Prototypes are a us ,  | Hence, they serve a variety of purposes: for example, to test out the technical feasibility of an idea, to clarify some vague requirements, to do some user testing and evaluation, or to check that a certain design direction is compatible with the rest of the system development. Which of these is your purpose will influence the kind of prototype you build. So, for example, if you are trying to clarify how users might perform a set of tasks and whether your proposed device would support them in this, you might produce a paper-based mockup. Figure 8.1 shows a paper-based prototype of the design for a handheld device to help an autistic child communicate. This prototype shows the intended functions and buttons, their positioning and labeling, and the overall shape of the device, but none of the buttons actually work. This kind of prototype is sufficient to investigate scenarios of use and to decide, for example, whether the buttons are appropriate and the functions sufficient, but not to test whether the speech is loud enough or the response fast enough. |
Why prototype? Prototypes are a us , 242 Chapter 8 Design, prototyping and construction 4 inches 4 Durable casethe tough plastic exterior enables complete protection of the device if dropped, and the rubberized outer casing lessens the 1 impacts of shocks| | 242 Chapter 8 Design, prototyping and construction 4 inches 4 Durable casethe tough plastic exterior enables complete protection of the device if dropped, and the rubberized outer casing lessens the 1 impacts of shocks|
Why prototype? Prototypes are a us , 242 Chapter 8 Design, prototyping and construction 4 inches 4 Durable casethe tough plastic exterior enables complete protection of the device if dropped, and the rubberized outer casing lessens the 1 impacts of shocks| | In addition, the exterior is lightweight and makes the design ideal for use in virtually any environment Battery indicator shows amount of battery left before recharging is required Communication keys-these are sensitive touchpanel buttons. On being triggered, a recorded message related to that key is output from the speaker In addition, symbols and photos familiar to the user can be used on the keypads to enable usability of device to be immediate in the case of some individuals Amplified speaker J provides excellent output Ring attachment for beltltrousers. This enables the device to hang from a person's trousedbelt in a similar way to a key ring Figure 8.1 A paper-based prototype of a handheld device to support an autistic child|
Why prototype? Prototypes are a us , 242 Chapter 8 Design, prototyping and construction 4 inches 4 Durable casethe tough plastic exterior enables complete protection of the device if dropped, and the rubberized outer casing lessens the 1 impacts of shocks| | Heather Martin and Bill Gaver (2000) describe a different kind of prototyping with a different purpose. When prototyping audiophotography products, they used a variety of different techniques including video scenarios similar to the scenarios we introduced in Chapter 7, but filmed rather than written. At each stage, the prototypes were minimally specified, deliberately leaving some aspects vague so as to stimulate further ideas and discussion. |
Prototyping and construction 243 8.2 ,  | 8.2 Prototyping and construction 243 8.2.3 Low-fidelity protoiyping A low-fidelity prototype is one that does not look very much like the final product|
Prototyping and construction 243 8.2 ,  | For example, it uses materials that are very different from the intended final version, such as paper and cardboard rather than electronic screens and metal. The lump of wood used to prototype the Palm Pilot described above is a low-fidelity prototype, as is the cardboard-box laser printer|
Prototyping and construction 243 8.2 ,  | Low-fidelity prototypes are useful because they tend to be simple, cheap, and quick to produce. This also means that they are simple, cheap, and quick to modify so they support the exploration of alternative designs and ideas. This is particularly irnportant in early stages of development, during conceptual design for example, because prototypes that are used for exploring ideas should be flexible and encourage rather than discourage exploration and modification. Low-fidelity prototypes are never intended to be kept and integrated into the final product. They are for exploration only|
Prototyping and construction 243 8.2 ,  | I Storyboarding Storyboarding is one example of low-fidelity prototyping that is I often used in conjunction with scenarios, as described in Chapter 7. A storyboard consists of a series of sketches showing how a user might progress through a task using the device being developed. It can be a series of sketched screens for a GUIbased software system, or a series of scene sketches showing how a user can perform a task using the device. When used in conjunction with a scenario, the storyboard brings more detail to the written scenario and offers stakeholders a chance to role-play with the prototype, interacting with it by stepping through the scenario. The example storyboard shown in Figure 8.2 (Hartfield and Winograd, Figure 8.2 An example storyboard. |
Prototyping and construction 243 8.2 , 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system| | 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system|
Prototyping and construction 243 8.2 , 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system| | Sketching Low-fidelity prototyping often relies on sketching, and many people find it difficult to engage in this activity because they are inhibited about the quality of their drawing. Verplank (1989) suggests that you can teach yourself to get over this inhibition. He suggests that you should devise your own symbols and icons for elements you might want to sketch, and practice using them. They don't have to be anything more than simple boxes, stick figures, and stars. Elements you might require in a storyboard sketch, for example, include "things7 ' such as people, parts of a computer, desks, books, etc., and actions such as give, find, transfer, and write. If you are sketching an interface design, then you might need to draw various icons, dialog boxes, and so on. Some simple examples are shown in Figure 8.3. Try copying these and using them. The next activity requires other sketching symbols, but they can still be drawn quite simply|
Prototyping and construction 243 8.2 , 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system|last: | Produce a storyboard that depicts how to fill a car with gas (petrol)|
Prototyping and construction 243 8.2 , 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system|last: | Comment Our attempt is shown in Figure 8.4|
Prototyping and construction 243 8.2 , 244 Chapter 8 Design, prototyping and construction I People Computer Pr~nter Give Receive Transfer I Figure 8.3 Some simple sketches for low-fidelity prototyping. I 1996) depicts a person using a new system for digitizing images. This example doesn't show detailed drawings of the screens involved, but it describes the steps a user might go through in order to use the system| | Protofyping with Index Cards Using index cards (small pieces of cardboard about 3 X 5 inches) is a successful and simple way to prototype an interaction, and is used quite commonly when developing websites. Each card represents one screen or one element of a task. In user evaluations, the user can step through the cards, pretending to perform the task while interacting with the cards. A more detailed example of this kind of prototyping is given in Section 8.3.4. |
Prototyping and construction 245 I D ,  | 8.2 Prototyping and construction 245 I Drive car to gas pump Squeeze trigger on the nozzle until tank is full Take nozzle from pump ... and put it ~nto the car's gas tank Replace nozzle when tank is full Pay cash~er Figure 8.4 A storyboard depicting how to fill a car with gas|
Prototyping and construction 245 I D ,  | Wizard of Oz Another low-fidelity prototyping method called Wizard of Oz assumes that you have a software-based prototype. In this technique, the user sits at a computer screen and interacts with the software as though interacting with the product. In fact, however, the computer is connected to another machine where a human operator sits and simulates the software's response to the user. The method takes its name from the classic story of the little girl who is swept away in a storm and finds herself in the Land of Oz (Baum and Denslow, 1900)|
High-fidelity prototyping High-fid ,  | 8.2.4 High-fidelity prototyping High-fidelity prototyping uses materials that you would expect to be in the final product and produces a prototype that looks much more like the final thing. For example, a prototype of a software system developed in Visual Basic is higher fidelity than a paper-based mockup; a molded piece of plastic with a dummy keyboard is a higher-fidelity prototype of the PalmPilot than the lump of wood|
High-fidelity prototyping High-fid ,  | If you are to build a prototype in software, then clearly you need a software tool to support this. Common prototyping tools include Macromedia Director, Visual Basic, and Smalltalk. These are also full-fledged development environments, so they are powerful tools, but building prototypes using them can also be very straightforward. |
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking| | 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Evaluate multiple design Poor detailed specification concepts. to code to|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Useful communication device. Facilitator-driven|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking| | Address screen layout issues. Limited utility after 6 Useful for identifying market requirements established|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | requirements. Limited usefulness for Proof-of-concept. usability tests|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Navigational and flow limitations|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | High-fidelity prototype 6 Complete functionality. More expensive to develop|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Fully interactive. Time-consuming to create|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | User-driven. Inefficient for proof-ofClearly defines navigational concept designs|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | scheme. Not effective for Use for exploration and test. requirements gathering|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Look and feel of final product|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Serves as a living specification|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Marketing and sales tool|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking| | Marketing and sales tool|: Marc Rettig (1994) argues that more projects should use low-fidelity prototyping because of the inherent problems with high-fidelity prototyping. He identifies these problems as: They take too long to build|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Marketing and sales tool|: Reviewers and testers tend to comment on superficial aspects rather than content|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Marketing and sales tool|: Developers are reluctant to change something they have crafted for hours|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Marketing and sales tool|: A software prototype can set expectations too high|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking|last: | Marketing and sales tool|: Just one bug in a high-fidelity prototype can bring the testing to a halt|
High-fidelity prototyping High-fid , 246 Chapter 8 Design, protowing and construction Table 8.1 Relative effectiveness of low- vs. high-fidelity prototypes (Rudd et al., 1996) Type Advantages Disadvantages Low-fidelity prototype Lower development cost. Limited error checking| | Marketing and sales tool|: High-fidelity prototyping is useful for selling ideas to people and for testing out technical issues. However, the use of paper prototyping and other ideas should be actively encouraged for exploring issues of content and structure. Further advantages and disadvantages of the two types of prototyping are listed in Table 8.1|
Compromises in protoiyping By thei ,  | 8.2.5 Compromises in protoiyping By their very nature, prototypes involve compromises: the intention is to produce something quickly to test an aspect of the product. The kind of questions or choices |
Prototyping and construction 247 tha ,  | 8.2 Prototyping and construction 247 that any one prototype allows the designer to answer is therefore limited, and the prototype must be designed and built with the key issues in mind. In low-fidelity prototyping, it is fairly clear that compromises have been made. For example, with a paper-based prototype an obvious compromise is that the device doesn't actually work! For software-based prototyping, some of the compromises will still be fairly clear; for example, the response speed may be slow, or the exact icons may be sketchy, or only a limited amount of functionality may be available|
Prototyping and construction 247 tha ,  | Two common compromises that often must be traded against each other are breadth of functionality provided versus depth. These two kinds of prototyping |
Prototyping and construction 247 tha , 248 Chapter 8 Design, prototyping and construction I are called horizontal prototyping (providing a wide range of functions but with little detail) and vertical prototyping (providing a lot of detail for only a few functions)| | 248 Chapter 8 Design, prototyping and construction I are called horizontal prototyping (providing a wide range of functions but with little detail) and vertical prototyping (providing a lot of detail for only a few functions)|
Prototyping and construction 247 tha , 248 Chapter 8 Design, prototyping and construction I are called horizontal prototyping (providing a wide range of functions but with little detail) and vertical prototyping (providing a lot of detail for only a few functions)| | Other compromises won't be obvious to a user of the system. For example, the internal structure of the system may not have been carefully designed, and the prototype may contain "spaghetti code" or may be badly partitioned. One of the dangers of producing running prototypes, i.e., ones that users can interact with automatically, is that they may believe that the prototype is the system. The danger for developers is that it may lead them to consider fewer alternatives because they have found one that works and that the users like. However, the compromises made in order to produce the prototype must not be ignored, particularly the ones that are less obvious from the outside. We still must produce a good-quality system and good engineering principles must be adhered to|
Construction: from design to imple ,  | 8.2.6 Construction: from design to implementation When the design has been around the iteration cycle enough times to feel confident that it fits requirements, everything that has been learned through the iterated steps of prototyping and evaluation must be integrated to produce the final product|
Construction: from design to imple ,  | Although prototypes will have undergone extensive user evaluation, they will not necessarily have been subjected to rigorous quality testing for other characteristics such as robustness and error-free operation. Constructing a product to be used by thousands or millions of people running on various platforms and under a wide range of circumstances requires a different testing regime than producing a quick prototype to answer specific questions|
Construction: from design to imple , last: | The dilemma box below discusses two different development philosophies|
Construction: from design to imple ,  | One approach, called evolutionary prototyping, involves evolving a prototype into the final product. An alternative approach, called throwaway prototyping, uses the prototypes as stepping stones towards the final design. In this case, the |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 249 prototypes are thrown away and the final product is built from scratch. If an evolutionary prototyping approach is to be taken, the prototypes should be subjected to rigorous testing along the way; for throw-away prototyping such testing is not necessary|
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design Conceptual design is concerned with transforming the user requirements and needs into a conceptual model. Conceptual models were introduced in Chapter 2, and here we provide more detail and discuss how to go about developing one. We defined conceptual model as "a description of the proposed system in terms of a set of integrated ideas and concepts about what it should do, behave, and look like, that will be understandable by the users in the manner intended." The basis for designing this model is the set of user tasks the product will support. There is no easy transformation to apply to a set of requirements data that will produce "the best" or even a "good enough" conceptual model. Steeping yourself in the data and trying to empathize with the users while considering the issues raised in this section is one of the best ways to proceed. From the requirements and this experience, a picture of what you want the users' experience to be when using the new product will emerge. |
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2| | 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2| | Ideas for a conceptual model may emerge during data gathering, but remember what Suzanne Robertson said in her interview at the end of Chapter 7: you must separate the real requirements from solution ideas|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2| | Key guiding principles of conceptual design are: Keep an open mind but never forget the users and their context|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2|last: | Discuss ideas with other stakeholders as much as possible|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2|last: | Use low-fidelity prototyping to get rapid feedback|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2| | Iterate, iterate, and iterate. Remember Fudd's first law of creativity: "To get a good idea, get lots of ideas" (Rettig, 1994)|
Conceptual design: moving from requi , 250 Chapter 8 Design, prototyping and construction I Beyer and Holtzblatt (1998), in their method Contextual Design discussed in Chapter 9, recommend holding review meetings within the team to get different peoples' perspectives on the data and what they observed. This helps to deepen understanding and to expose the whole team to different aspects. Ideas will emerge as this extended understanding of the requirements is established, and these can be tested against other data and scenarios, discussed with other design team members and prototyped for testing with users. Other ways to understand the users' experience are described in Box 8.2| | Considering alternatives and repeatedly thinking about different perspectives helps to expand the solution space and can help prompt insights. Prototyping (introduced in Section 8.2) and scenarios (introduced in Chapter 7) are two techniques to help you explore ideas and make design decisions. But before explaining how these can help, we need to explore in more detail how to go about envisioning the product|
Three perspectives for developing  ,  | 8.3.1 Three perspectives for developing a conceptual model Chapter 2 introduced three ways of thinking about a conceptual model: Which interaction mode would best support the users' activities? Is there a suitable interface metaphor to help users understand the product? Which interaction paradigm will the product follow? In this section, we discuss each of these in more detail. In all the discussions that follow, we are not suggesting that one way of approaching a conceptual design is right for one situation and wrong for another; they all provide different ways of thinking about the product and hence aid in generating alternatives|
Three perspectives for developing  ,  | Which interaction mode? Which interaction mode is most suitable for the product depends on the activities the user will engage in while using it. This information is identified through the requirements activity. The interaction mode refers to how the user invokes actions when interacting with the device. In Chapter 2 we introduced two different types of interaction mode: those based on activities and those based on objects. For those based on activities, we introduced four general styles: instructing, conversing, manipulating and navigating, and exploring and browsing|
Three perspectives for developing  ,  | Which is best suited to your current design depends on the application domain and the kind of system being developed. For example, a computer game is most likely to suit a manipulating and navigating style, while a drawing package has aspects of instructing and conversing. |
Conceptual design: moving from requi , last: | 8.3 Conceptual design: moving from requirements to first design 251 |
Conceptual design: moving from requi , 252 Chapter 8 Design, prototyping and construction Most conceptual models will be a combination of modes, and it is necessary to associate different parts of the interaction with different modes. For example, consider the shared calendar example introduced in Chapter 7. One of the user tasks is finding out what is happening on a particular day. In this instance, instructing is an appropriate mode of interaction. No dialog is necessary for the system to show the required information. On the other hand, the user task of trying to arrange a meeting among a set of people may be conducted more like a conversation. We can imagine that the user begins by selecting the people for the meeting and setting some constraints on the arrangements such as time limit, urgency, length of meeting, etc. Then the system might respond with a set of possible times and dates for the user to select. This is much more like a conversation. (You may like to refer back to the scenario of this task in Chapter 7 and consider how well it matches this interaction mode.) For the task of planning, the user is likely to want to scan through pages and browse the days| | 252 Chapter 8 Design, prototyping and construction Most conceptual models will be a combination of modes, and it is necessary to associate different parts of the interaction with different modes. For example, consider the shared calendar example introduced in Chapter 7. One of the user tasks is finding out what is happening on a particular day. In this instance, instructing is an appropriate mode of interaction. No dialog is necessary for the system to show the required information. On the other hand, the user task of trying to arrange a meeting among a set of people may be conducted more like a conversation. We can imagine that the user begins by selecting the people for the meeting and setting some constraints on the arrangements such as time limit, urgency, length of meeting, etc. Then the system might respond with a set of possible times and dates for the user to select. This is much more like a conversation. (You may like to refer back to the scenario of this task in Chapter 7 and consider how well it matches this interaction mode.) For the task of planning, the user is likely to want to scan through pages and browse the days|
Conceptual design: moving from requi , 252 Chapter 8 Design, prototyping and construction Most conceptual models will be a combination of modes, and it is necessary to associate different parts of the interaction with different modes. For example, consider the shared calendar example introduced in Chapter 7. One of the user tasks is finding out what is happening on a particular day. In this instance, instructing is an appropriate mode of interaction. No dialog is necessary for the system to show the required information. On the other hand, the user task of trying to arrange a meeting among a set of people may be conducted more like a conversation. We can imagine that the user begins by selecting the people for the meeting and setting some constraints on the arrangements such as time limit, urgency, length of meeting, etc. Then the system might respond with a set of possible times and dates for the user to select. This is much more like a conversation. (You may like to refer back to the scenario of this task in Chapter 7 and consider how well it matches this interaction mode.) For the task of planning, the user is likely to want to scan through pages and browse the days| | Consider the library catalog system introduced in Chapter 7. Identify tasks associated with this product that would be best supported by each of the interaction modes instructing, conversing, manipulating and navigating, and exploring and browsing|
Conceptual design: moving from requi , 252 Chapter 8 Design, prototyping and construction Most conceptual models will be a combination of modes, and it is necessary to associate different parts of the interaction with different modes. For example, consider the shared calendar example introduced in Chapter 7. One of the user tasks is finding out what is happening on a particular day. In this instance, instructing is an appropriate mode of interaction. No dialog is necessary for the system to show the required information. On the other hand, the user task of trying to arrange a meeting among a set of people may be conducted more like a conversation. We can imagine that the user begins by selecting the people for the meeting and setting some constraints on the arrangements such as time limit, urgency, length of meeting, etc. Then the system might respond with a set of possible times and dates for the user to select. This is much more like a conversation. (You may like to refer back to the scenario of this task in Chapter 7 and consider how well it matches this interaction mode.) For the task of planning, the user is likely to want to scan through pages and browse the days| | Comment Here are some suggestions. You may have identified others: (a) Instructing: the user wants to see details of a particular book, such as publisher and location|
Conceptual design: moving from requi , 252 Chapter 8 Design, prototyping and construction Most conceptual models will be a combination of modes, and it is necessary to associate different parts of the interaction with different modes. For example, consider the shared calendar example introduced in Chapter 7. One of the user tasks is finding out what is happening on a particular day. In this instance, instructing is an appropriate mode of interaction. No dialog is necessary for the system to show the required information. On the other hand, the user task of trying to arrange a meeting among a set of people may be conducted more like a conversation. We can imagine that the user begins by selecting the people for the meeting and setting some constraints on the arrangements such as time limit, urgency, length of meeting, etc. Then the system might respond with a set of possible times and dates for the user to select. This is much more like a conversation. (You may like to refer back to the scenario of this task in Chapter 7 and consider how well it matches this interaction mode.) For the task of planning, the user is likely to want to scan through pages and browse the days| | (b) Conversing: the user wants to identify a book on a particular topic but doesn't know exactly what is required. |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 253 (c) Manipulating and navigating: the library books could be represented as icons that could be interrogated for information or manipulated to represent the book being reserved or borrowed|
Conceptual design: moving from requi ,  | (d) Exploring and browsing: the user is looking for interesting books, with no particular topic or author in mind|
Conceptual design: moving from requi ,  | Models based on objects provide a different perspective since they are structured around real-world objects. For example, the shared calendar system can be thought of as an electronic version of a paper calendar, which is a book kept by each person on their desk or in their bag. Alternatively, it could be thought of as a planner, a large flat piece of paper that is often pinned up on the wall in offices and I is far more public. The choice of which objects to choose as a basis for the conceptual model is related to the choice of interface metaphor, which we consider below|
Conceptual design: moving from requi ,  | Mayhew (1999) identifies a similar distinction between conceptual models: process-oriented or product-oriented. The former kind of model best fits "an application in which there are no clearly identifiable primary work products. In these applications the main point is to support some work process." Examples of this might be software to control a chemical processing plant, a financial management package, or a customer care call-center. On the other hand, a product-oriented model "will best fit an application in which there are clear, identifiable work products that users individually create, modify and maintain." Examples of this are Microsoft products such as Excel, Powerpoint, Word, etc. More information about these kinds of conceptual model is given in Box 8.3|
Conceptual design: moving from requi ,  | Is there a suitable interface metaphor? Interface metaphors are another way to think about conceptual models. They are intended to combine familiar knowledge with new knowledge in a way that will help the user understand the system. Choosing suitable metaphors and combining new and familiar concepts requires a careful balance and is based on a sound understanding of the users and their context. For example, consider an educational system to teach six-year-olds mathematics. You could use the metaphor of a classroom with a teacher standing at the blackboard|
Conceptual design: moving from requi ,  | But if you consider the users of the system and what is likely to engage them, you will be more likely to choose a metaphor that reminds the children of something they enjoy, such as a ball game, the circus, a playroom, etc|
Conceptual design: moving from requi ,  | Erickson (1990) suggests a three-step process for choosing a good interface metaphor. The first step is to understand what the system will do. Identifying functional requirements was discussed in Chapter 7. Developing partial conceptual models and trying them out may be part of the process. The second step is to understand which bits of the system are likely to cause users problems. Another way of looking at this is to identify which tasks or subtasks cause problems, are complicated, or are critical. A metaphor is only a partial mapping between the software and the real thing upon which the metaphor is based. Understanding areas in which users are likely to have difficulties means that the metaphor can be chosen to support those aspects. The third step is to generate metaphors. Looking for metaphors in the users' description of the tasks is a good starting point. Also, any |
Conceptual design: moving from requi , 254 Chapter 8 Design, prototyping and construction metaphors used in the application domain with which the users may be familiar may be suitable| | 254 Chapter 8 Design, prototyping and construction metaphors used in the application domain with which the users may be familiar may be suitable|
Conceptual design: moving from requi , 254 Chapter 8 Design, prototyping and construction metaphors used in the application domain with which the users may be familiar may be suitable|last: | When suitable metaphors have been generated, they need to be evaluated|
Conceptual design: moving from requi , 254 Chapter 8 Design, prototyping and construction metaphors used in the application domain with which the users may be familiar may be suitable|last: | Again, Erickson (1990) suggests five questions to ask|
Conceptual design: moving from requi , 1. How much structure does the metaphor provide? A good metaphor will require structure, and preferrably familiar structure. | | 1. How much structure does the metaphor provide? A good metaphor will require structure, and preferrably familiar structure. |
Conceptual design: moving From requi ,  | 8.3 Conceptual design: moving From requirements to first design 255 2. How much of the metaphor is relevant to the problem? One of the difficulties of using metaphors is that users may think they understand more than they do and start applying inappropriate elements of the metaphor to the system, leading to confusion or false expectations|
Conceptual design: moving From requi , 3. Is the interface metaphor easy to represent? A good metaphor will be associated with particular visual and audio elements, as well as words. | | 3. Is the interface metaphor easy to represent? A good metaphor will be associated with particular visual and audio elements, as well as words. |
Conceptual design: moving From requi , 256 Chapter 8 Design, protoiyping and construction 4. Will your audience understand the metaphor? 5. How extensible is the metaphor? Does it have extra aspects that may be useful later on? In the calendar system, one obvious metaphor we could use is the individual's paper-based calendar. This is familiar to everyone, and we could combine that familiarity with facilities suitable for an electronic document such as hyperlinks and searching| | 256 Chapter 8 Design, protoiyping and construction 4. Will your audience understand the metaphor? 5. How extensible is the metaphor? Does it have extra aspects that may be useful later on? In the calendar system, one obvious metaphor we could use is the individual's paper-based calendar. This is familiar to everyone, and we could combine that familiarity with facilities suitable for an electronic document such as hyperlinks and searching|
Conceptual design: moving From requi , 256 Chapter 8 Design, protoiyping and construction 4. Will your audience understand the metaphor? 5. How extensible is the metaphor? Does it have extra aspects that may be useful later on? In the calendar system, one obvious metaphor we could use is the individual's paper-based calendar. This is familiar to everyone, and we could combine that familiarity with facilities suitable for an electronic document such as hyperlinks and searching|last: | Having thought of this metaphor, we need to apply the five questions listed above|
Conceptual design: moving From requi , 1. Does it supply structure? Yes, it supplies structure based on the familiar paper-based calendar. However, it does not supply structure for the notion of sharing information, i.e., other people looking in the calendar, because of two issues: first, an individual's calendar is very personal, and second, even if there is a paper-based calendar for a set of people, it can be closed and the information hidden from casual observers| | 1. Does it supply structure? Yes, it supplies structure based on the familiar paper-based calendar. However, it does not supply structure for the notion of sharing information, i.e., other people looking in the calendar, because of two issues: first, an individual's calendar is very personal, and second, even if there is a paper-based calendar for a set of people, it can be closed and the information hidden from casual observers|
Conceptual design: moving From requi , 2. How much of the metaphor is relevant i.e., how many properties of the paper-based calendar are applicable to the electronic version? Well, in the electronic version it isn't appropriate to think of physically turning pages, but then a facility for looking at one "page" after another is required. The individual's calendar can be carried around from place to place. Whether or not we want to encourage that aspect of the metaphor depends on the kind of interaction paradigm we might consider. Finally, this is a shared calendar, and normally our personal calendars are not shared| | 2. How much of the metaphor is relevant i.e., how many properties of the paper-based calendar are applicable to the electronic version? Well, in the electronic version it isn't appropriate to think of physically turning pages, but then a facility for looking at one "page" after another is required. The individual's calendar can be carried around from place to place. Whether or not we want to encourage that aspect of the metaphor depends on the kind of interaction paradigm we might consider. Finally, this is a shared calendar, and normally our personal calendars are not shared|
Conceptual design: moving From requi , 3. Is the metaphor easy to represent? Yes|last: | 3. Is the metaphor easy to represent? Yes|
Conceptual design: moving From requi , 4. Will your audience understand the metaphor? Yes|last: | 4. Will your audience understand the metaphor? Yes|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended| | 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended| | Another possible interface metaphor for the shared calendar system is the wall planner. Ask the five questions above of this metaphor|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended| | Comment (a) Does it supply structure? Yes, it supplies structure based on the wall-planner. This metaphor embodies the notion of public access more than the paper-based calendar|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended|last: | In particular, the wall planner is never "closed" to those who are near it|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended| | (b) How much of the metaphor is relevant? Most of this metaphor is relevant. Individu- als don't walk around with the wall planner, though, so the answer depends on how the calendar is to be used|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended|last: | (c) Is the metaphor easy to represent? Yes, it could be represented as a spreadsheet|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended|last: | (d) Will your audience understand the metaphor? Yes|
Conceptual design: moving From requi , 5. How extensible is the metaphor? The functionality of a paper-based calendar is fairly limited. However, it is also a book, and we could borrow facilities from electronic books (which are also familiar objects to most of our audience), so yes, it can be extended| | (e) How extensible is the metaphor? The functionality of a wall planner is also fairly limited. There are no obvious ways in which to extend the metaphor to help with this application. |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 257 I Which interadion paradigm? Interaction paradigms are design philosophies that help you think about the product being developed. Interaction paradigms include the now traditional desktop paradigm, with WIMP interface (windows, icons, menus and pointers), ubiquitous computing, pervasive computing, wearable computing, tangible bits, attentive environments, and the Workaday World. Thinking about the user tasks with these different paradigms in mind can help provide insight both to choose the interaction paradigm and to inspire a different perspective on the problem|
Conceptual design: moving from requi ,  | Thinking about environmental requirements is particularly relevant when considering interaction paradigms. For example, consider the shared calendar in the context of the following paradigms: Ubiquitous computing. Combining some of our earlier discussions, we could perhaps imagine the shared calendar as being like a planner on the wall, but in an electronic form with which people could interact|
Conceptual design: moving from requi ,  | Pervasive computing. Carrying around our own copy of the shared calendar builds directly upon current expectations and experience of personal calendars|
Conceptual design: moving from requi ,  | We can imagine a system that allows individuals to keep a copy of the system on their own palmtop computers or PDAs, while also being linked to a central server somewhere that allows access to other information that is shared|
Conceptual design: moving from requi ,  | Wearable computing. Imagine having an earring or a tie pin telling you that you have an appointment in an hour's time at a client's office and that you need to book a taxi? Or maybe asking you whether it is all right to book a meeting with your colleague on a particular date. What other possibilities can this model conjure up? Consider the library catalog system and think about each of the paradigms listed above|
Conceptual design: moving from requi , last: | Choose two of them and suggest different kinds of interaction that these paradigms imply|
Conceptual design: moving from requi ,  | Comment We had the following thoughts, but you may have others. The library catalog is likely to be used only in certain places, such as the library or perhaps in an office. The idea of wearable computers is not as attractive in this situation as pervasive computing would be, since people would have to put on the wearable when they arrived at the library. Alternatively, the library system might be designed to "cut in" on an existing wearable. Both of these solutions seem a little intrusive. Pervasive computing, on the other hand, would allow users to interact with the catalog wherever in the library they were, rather than having to go to a place where the PC or card catalog sits. You could possibly have digital books at the end of each library shelf that gave access to the catalog|
Expanding the conceptual model Con ,  | 8.3.2 Expanding the conceptual model Considering the issues in the previous section helps the designer to envision a product|
Expanding the conceptual model Con , last: | These ideas must be thought through in more detail before being prototyped |
Expanding the conceptual model Con ,  | I 258 Chapter 8 Design, prototyping and construction or tested with users. One aspect that will need to be decided is what technologies to use, e.g., mutimedia, virtual reality, or web-based materials, and what input and output devices best suit the situation, e.g., pen-based, touch screen, speech, keyboard, and so on. These decisions will depend on the constraints on the system, arising from the requirements you have established. For example, input and output devices will be influenced particularly by user and environmental requirements|
Expanding the conceptual model Con ,  | You also have to decide what concepts need to be communicated between the user and the product and how they are to be structured, related, and presented|
Expanding the conceptual model Con ,  | This means deciding which functions the product will support, how those functions are related, and what information is required to support them. Although these decisions must be made, remember that they are made only tentatively to begin with and may change after prototyping and evaluation|
Expanding the conceptual model Con ,  | What functions will the product perform? Understanding the tasks the product will support is a fundamental aspect of developing the conceptual model, but it is also important to consider more specifically what functions the product will perform, i.e., how the task will be divided up between the human and the machine. For example, in the shared calendar example, the system may suggest dates when a set of people are able to meet, but is that as far as it should go? Should it automatically book the dates, or should it email the people concerned informing them of the meeting or asking if this is acceptable? Or is the human user or the meeting attendee responsible for checking this out? Developing scenarios, essential use cases, and use cases for the system will help clarify the answers to these questions. Deciding what the system will do and what must be left for the user is sometimes called task allocation. The trade-off between what to hand over to the device and what to keep in the control of the user has cognitive implications (see Chapter 3), and is linked to social aspects of collaboration (see Chapter 4). An example relating to our shared calendar system was discussed in Box 4.2 of Chapter 4: should the system allow users to book meetings in others' calendars without asking their consent first? In addition, if the cognitive load is too high for the user, then the device may be too stressful to use. On the other hand, if the device takes on too much and is too inflexible, then it may not be used at all|
Expanding the conceptual model Con ,  | Another aspect concerns the functions the hardware will perform, i.e., what functions will be hard-wired into the device and what will be left under software control, and thereby possibly indirectly in the control of the human dser? This leads to considerations of the architecture of the device, although you Would riot expect necessarily to have a clear architectural design at this stage of development|
Expanding the conceptual model Con ,  | How are the functions related to each other? Functions may be related temporally, e.g., one must be performed before another, or two can be performed in parallel|
Expanding the conceptual model Con ,  | They may also be related through any number of possible categorizations, e.g., all functions relating to telephone memory storage in a cell phone, or all options for accessing files in a word processor. The relationships between tasks may constrain use or may indicate suitable task structures within the device. For example, if a task is dependent on completion of another task, then you may want to restrict the user to performing the tasks in strict order. An instance in which this has been put into |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 259 practice is in some CASE (Computer-Aided Software Engineering) tools designed to support a specific development approach. Often these tools will insist that certain diagrams must be drawn before others. For example, in object-oriented software development you normally draw class diagrams before sequence diagrams, and some tools do not allow you to draw a sequence diagram until the relevant class diagram is in place. If you're working on a small project that doesn't require this kind of discipline, this can be very frustrating, but from the perspective of a manager in charge of a large project, having these restrictions in place may be advantageous|
Conceptual design: moving from requi ,  | If task analysis has been performed on relevant tasks, the breakdown will support these kinds of decisions. For example, in the shared calendar example, the task analysis performed in Section 7.1 shows the subtasks involved and the order in which the subtasks can be performed. Thus, the system could allow meeting constraints to be found before or after the list of people, and the potential dates could be identified in the individuals' calendars before checking with the departmental calendar. It is, however, important to get both the list of attendees and meeting I constraints before looking for potential dates|
Conceptual design: moving from requi ,  | What information needs to be available? What data is required to perform a task? How is this data to be transformed by the system? Data is one of the categories of requirements we aim to identify and capture through the requirements activity|
Conceptual design: moving from requi ,  | During conceptual design, we need to consider the information requirements and ensure that our model caters for the necessary data and that information is available as required to perform the task. Detailed issues of structure and display, such as whether to use an analog display or a digital display, will more likely be dealt with in the later, physical design activity, but implications arising from the type of data to be displayed may impact conceptual design issues|
Conceptual design: moving from requi ,  | For example, in the task of booking a meeting among a set of people using the shared calendar, the system needs to be told who is to be at the meeting, how long the meeting is to take, what its location should be, and what is the latest date on which the meeting should be booked, e.g., in the next week, next two weeks, etc. In order to perform the function, the system must have this information and also must have calendar information for each of the people in the meeting, the set of locations where the meeting may take place, and ideally some way of knowing how long a person would have to travel to the location|
Using scenarios in conceptual desi ,  | 8.3.3 Using scenarios in conceptual design In Chapter 7, we introduced scenarios as informal stories about user tasks and activities|
Using scenarios in conceptual desi ,  | They are a powerful mechanism for communicating among team members and with users. We stated in Chapter 7 that scenarios could be used and refined through different data-gathering sessions, and they can indeed be used to check out potential conceptual models|
Using scenarios in conceptual desi ,  | Scenarios can be used to explicate existing work situations, but they are more commonly used for expressing proposed or imagined situations to help in conceptual design. Often, stakeholders are actively involved in producing and checking |
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|last: | The setting is the Lindholm consuuction site sometime in the future|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Kurt has access to a portable PC. The portables are hooked up to the computer at the site office via a wireless modem connection, through which the supervisors run the hy- permedia application|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Action: During inspection of one of the caissons1 Kurt takes his portable PC, switches it on and places the cursor on the required information. He clicks the mouse button and gets the master file index together with an overview of links. He chooses the links of relevance for the caisson he is inspecting|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Kurt is pleased that he no longer needs to plan his inspections in advance. This is a great help because due to the 'event-driven' nature of inspection, constructors never know where and when an inspection is tajung place. Moreover, it has become much easier to keep nack of personal notes, reports etc. because they can be entered directly on the spot|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | The access via the construction site interface does not force him to deal with compli- cated keywords either. Instead, he can access the relevant information right away, liter- ally from where he is standing|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | A positive side effect concerns his reachability. As long as he has logged in on the computer, he is within reach of the secretaries and can be contacted when guests arrive or when he is needed somewhere else on the site. Moreover, he can see at a glance where his colleagues are working and get in touch with them when he needs theii help or advice|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|last: | All in all, Kurt feels that the new computer application has put him more in control of things|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Scenario 4: Panopticon This scenario addresses the negative aspects of how a hypermedia solution will work|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|last: | The setting is the Lindholm construction site sometime in the future|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Kurt has access to a portable PC. The portables are hooked up to the computer at the site ofice via a wireless modem connection, through which the supwisors run the hy- permedia application|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Action: During inspecting one of the caissons Kurt starts talking to one of the build- en about some reinforcement problem. They argue about the recent lab tests. and he takes out hs portable PC in order to provide some data which justify his arguments. It takes quite a while before he finds a spot where he can place the PC. either there is too much light, or there is no level surface at a suitable height. Finally, he puts the laptop on a big box and switches it on. He positions the cursor on the caisson he is currently inspecting and clicks the mouse to get into the master file. The table of contents pops up and from the overview of links he chooses those of relevance - but no lab test appears on the screen. Obviously, the file has not been updated as planned|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Kurt is rather upset. This loss of prestige in front of a contractor engineer would not have happened if he had planned his inspection as he had in the old days|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work| | Sometimes, he feels lie a hunted fox especially in Situatlon~ where he is drifting around thinking about what kind of action to take in a particular case. If he has forgot- ten ro log out he suddenly has a secretary on the phone: "I see you are right at caisson 39. so could you not just drop by and take a message?" All in all Kurt feels that the new computer application has put him under control|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|last: | 'Used in building to hold water back during construction|
Using scenarios in conceptual desi , 260 Chapter 8 Design, protoyping and construction through scenarios for a product. B@dker identifies four roles that have been suggested for scenarios (B@dker, 2000, p. 63): as a basis for the overall design for technical implementation as a means of cooperation within design teams I as a means of cooperation across professional boundaries, i.e., as a basis of communication in a multidisciplinary team In any one project, scenarios may be used for any or all of these. Box 8.4 details how different scenarios were used throughout the development of a speechScenario 3: Hyper-wonderland This scenario addresses the positive aspects of how a hypermedia solution will work|last: | Figure 8.8 Example plus and minus scenarios. |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 261 recognition system. More specifically, scenarios have been used as scripts for user evaluation of prototypes, providing a concrete example of a task the user will perform with the product. Scenarios can also be used to build a shared understanding among team members of the kind of system being developed. Scenarios are good at selling ideas to users, managers, and potential customers. For example the scenario presented in Figure 7.7 was designed to sell ideas to potential customers on how a product might enhance their lifestyles|
Conceptual design: moving from requi ,  | An interesting idea also proposed by Bgdker is the notion of plus and minus scenarios. These attempt to capture the most positive and the most negative consequences of a particular proposed design solution (see Figure 8.8) thereby helping designers to gain a more comprehensive view of the proposal|
Conceptual design: moving from requi ,  | Consider an in-car navigation device for planning routes, and suggest one plus and one minus scenario. For the plus scenario, try to think of all the possible benefits of the device|
Conceptual design: moving from requi , last: | For the minus scenario, try to imagine everything that could go wrong|
Conceptual design: moving from requi ,  | Comment Scenario 1 This plus scenario shows some potential positive aspects of an in-car navigation system|
Conceptual design: moving from requi ,  | "Beth is in a hurry to get to her friend's house. She jumps into the car and switches on her in-car navigation system. The display appears quickly, showing her local area and indicating the current location of her car with a bright white dot. She calls up the memory function of the device and chooses her friend's address. A number of her frequent destinations are stored like this in the device, ready for her to pick the one she wants. She chooses the "shortest route" option and the device thinks for a few seconds before showing her a bird's-eye view of her route. This feature is very useful because she can get an overall view of where she is going|
Conceptual design: moving from requi ,  | Once the engine is started, the display reverts to a close-up view to show the details of her journey. As she pulls away from the pavement, a calm voice tells her to "drive straight on for half a mile, then turn left." After half a mile, the voice says again "turn left at the next junction." As Beth has traveled this route many times before, she doesn't need to be told when to turn left or right, so she turns off the voice output and relies only on the display, which shows sujjicient detail for her to see the location of her car, her destination and the roads she needs to use." Scenario 2 This minus scenario shows some potential negative aspects of an in-car navigation system|
Conceptual design: moving from requi ,  | "Beth is in a hurry to get to her friend's house. She gets in her car and turns on the in-car navigation system. The car's battery is faulty so all the information she had entered into the device has been lost. She has to tell the device her destination by choosing from a long list of towns and roads. Eventually, she finds the right address and asks for the quickest route. The device takes ages to respond, but after a couple of minutes displays an overall view of the route it has found. To Beth's dismay, the route chosen includes one of the main roads that is being dug up over this weekend, so she cannot use the route. She needs to find another route, so she presses the cancel button and tries again to search for her friend's address through the long list oftowns and roads. By this time, she is very late." |
Conceptual design: moving from requi , 262 Chapter 8 Design, protoIyping and construction 8.3.4 Using prototypes in conceptual design The whole point of producing a prototype is to allow some evaluation of the emerging ideas to take place. As pointed out above, prototypes are built in order to answer questions. Producing anything concrete requires some consideration of the details of the design. If the prototype is to be evaluated seriously by users, then they must be able to see how their tasks might be supported by the product, and this will require consideration of more detailed aspects. | | 262 Chapter 8 Design, protoIyping and construction 8.3.4 Using prototypes in conceptual design The whole point of producing a prototype is to allow some evaluation of the emerging ideas to take place. As pointed out above, prototypes are built in order to answer questions. Producing anything concrete requires some consideration of the details of the design. If the prototype is to be evaluated seriously by users, then they must be able to see how their tasks might be supported by the product, and this will require consideration of more detailed aspects. |
Conceptual design: moving from requi ,  | 8.3 Conceptual design: moving from requirements to first design 263 I Prototyping is used to get feedback on emerging designs. This feedback may be from users, or from colleagues, or it may be feedback telling you that the idea is not technically feasible. Different kinds of prototype are therefore used at different points in the development iterations and with different people. Generally speaking, low-fidelity prototypes (such as paper-based scenarios) are used earlier in design and higher-fidelity prototypes (such as limited software implementations) are used later in design. However, low-fidelity prototypes are not very impressive to look at, so if the feedback you're looking for is approval from people who will be basing their judgment on first impressions, then a horizontal, high-fidelity prototype might suit the job better than one based on post-its or cards|
Conceptual design: moving from requi ,  | Figure 8.9 shows a card-based prototype for the shared calendar system created for a user testing session to check that the task flow and the information re- , quirements were correct for the task of arranging a meeting. The first card shows the screen that asks the user for relevant information to find a suitable meeting date. The second card shows the screen after the system has found some potentially suitable dates and displays the results. Finally, the third screen depicts the situation Figure 8.9 A card-based prototype for booking a meeting in the shared calendar system. |
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | Note that at this point we have not decided how the navigation will work, i.e., whether there will be a tool bar, menus, etc. But we have included some detailed aspects of the design, in order to provide enough detail for users to interact with the prototype|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | To illustrate how these cards can be used and the kind of information they can yield, we held a prototyping session with a potential user of the calendar. The session was informal (a kind of "quick and dirty" evaluation that you'll learn more about in Chapter 11) and lasted about 20 minutes. The user was walked through the task to see if the work flow was appropriate for the task of booking a meeting|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | Generally, the work flow agreed with the user's model of the task, but the session also highlighted some further considerations that did not arise in the original data gathering. Some of these had to do with work flow, but others were concerned with more detailed design. For example, the user suggested that it should be possible to I state a range of dates rather than just a "before" date; he also thought that the people attending the meeting should have a chance to confirm the date through the system, and then when everyone had confirmed, the booking could be confirmed and placed in the calendar. On the detailed design, he thought that date entry through a matrix rather than a drop-down list would be more comfortable, and he asked how the possible meeting dates would be ordered. There were many more comments, all of which would be food for thought in the design. We considered only the one task, and yet it yielded a lot of very useful information|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | oduce a card-based prototype for the library catalog system and the task of borrowing a ok as described by the scenario, use case, and HTA in Chapter 7. You may also like to ask one of your peers to act as a user and step through the task using the prototype|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel|last: | Comment Our version of the prototype is shown in Figure 8.10|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | Physical design: getting concrete Physical design involves considering more concrete, detailed issuer; of designing the interface, such as screen or keypad design, which icons to use, how to structure menus, etc|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | There is no rigid border between conceptual design and physical design. As you saw above, producing a prototype inevitably means making some detailed decisions, albeit tentatively. Interaction design is inherently iterative, and so some detailed issues will come up during conceptual design; similarly., during physical design it will be necessary to revisit decisions made during conceptual design. Exactly where the border lies is not relevant. What is relevant is that the conceptual design should be allowed to develop freely without being tied to physical constraints too early, as this might inhibit creativity|
Conceptual design: moving from requi , 264 Chapter 8 Design, prototyping and construction after a user has chosen one of the dates and is asked to provisionally book the chosen option, to confirm that this should be booked, or to cancel| | Design is about making choices and .decisions, and the designer must strive to balance environmental, user, data and usability requiremen1.s with functional |
Physical design: getting concrete 26 ,  | 8.4 Physical design: getting concrete 265 -By AaG-------.--.. -'y--- - - , -- - - Name --- ---A ~~-,.L--.. - -1 I -" -em--. - - ..-- - . -1 By Title . . - - Title -l~~~+---..---.- i -i I SEARCH BOCW( RESULTS -------- - Tine %lf_Mar_k - -- - I -1 Figure 8.10 A card-based ; prototype for borrowing a I book in the library catalog system|
Physical design: getting concrete 26 ,  | requirements. These are often in conflict. For example, a cell phone must provide a lot of functionality but is constrained by having only a small screen and a small keyboard. This means that the display of information is limited and the number of unique function keys is also limited, resulting in restricted views of information and the need to associate multiple functions with function keys. Figure 8.11 shows the number of words it can display|
Physical design: getting concrete 26 ,  | There are many aspects to the physical design of interactive products, and we can't cover them all in this book. Instead, we introduce some principles of |
Physical design: getting concrete 26 , 266 Chapter 8 Design, protoiyping and construction Figure 8.1 1 An average cell phone screen can display only a short message legibly| | 266 Chapter 8 Design, protoiyping and construction Figure 8.1 1 An average cell phone screen can display only a short message legibly|
Physical design: getting concrete 26 , 266 Chapter 8 Design, protoiyping and construction Figure 8.1 1 An average cell phone screen can display only a short message legibly| | good design in the context of some common interface elements. On our website (www.ID-book.com), you will find more activities and concrete examples of physical design|
Guidelines for physical design I T ,  | 8.4.1 Guidelines for physical design I The way we design the physical interface of the interactive product must not conflict with the user's cognitive processes involved in achieving the task. In Chapter 3, we introduced a number of these processes, such as attention, perception, memory, and so on, and we must design the physical form with these human characteristics very much in mind. For example, to help avoid memory overload, the interface should list options for us instead of making us remember a long list of possibilities. A wide range of guidelines, principles, and rules has been developed to help designers ensure that their products are usable, many of which are embodied in style guides and standards (see Box 8.5 for more information on this). Nielsen's set of guidelines were introduced in Chapter 1 in the form of heuristics. Another well-known set intended for informing design is Shneiderman's eight golden rules of interface design (Shneiderman, 1998): 1. Strive for consistency. For example, in every screen have a 'File' menu in the top left-hand corner. For every action that results in the loss of data, ask for confirmation of the action to give users a chance to change their minds|
Guidelines for physical design I T , 2. Enable frequent users to use shortcuts. For example, in most word-processing packages, users may move around the functions using menus or shortcut "quick keys," or function buttons| | 2. Enable frequent users to use shortcuts. For example, in most word-processing packages, users may move around the functions using menus or shortcut "quick keys," or function buttons|
Guidelines for physical design I T , 3. Offer informative feedback. Instead of simply saying "Error 404," make it clear what the error means: "The URL is unknown." This feedback is also influenced by the kinds of users, since what is meaningful to a scientist may not be meaningful to a manager or an architect| | 3. Offer informative feedback. Instead of simply saying "Error 404," make it clear what the error means: "The URL is unknown." This feedback is also influenced by the kinds of users, since what is meaningful to a scientist may not be meaningful to a manager or an architect|
Guidelines for physical design I T , 4. Design dialogs to yield closure. For example, make it clear when an action has completed successfully: "printing completed." 5. O#er errorprevention and simple error handling. It is better for the user not to make any errors, i.e., for the interface to prevent users from making mistakes| | 4. Design dialogs to yield closure. For example, make it clear when an action has completed successfully: "printing completed." 5. O#er errorprevention and simple error handling. It is better for the user not to make any errors, i.e., for the interface to prevent users from making mistakes|
Guidelines for physical design I T , 4. Design dialogs to yield closure. For example, make it clear when an action has completed successfully: "printing completed." 5. O#er errorprevention and simple error handling. It is better for the user not to make any errors, i.e., for the interface to prevent users from making mistakes| | However, mistakes are inevitable and the system should be forgiving about the errors made and support the user in getting back on track|
Guidelines for physical design I T , 6. Permit easy reversal of actions. For example, provide an "undo" key where possible|last: | 6. Permit easy reversal of actions. For example, provide an "undo" key where possible|
Guidelines for physical design I T , 7. Support internal locus of control. Users feel more comfortable if they feel in control of the interaction rather than the device being in control. | | 7. Support internal locus of control. Users feel more comfortable if they feel in control of the interaction rather than the device being in control. |
Physical design: getting concrete 26 ,  | 8.4 Physical design: getting concrete 267 8. Reduce short-term memory load. For example, wherever possible, offer users options rather than ask them to remember information from one screen to another|
Physical design: getting concrete 26 ,  | Other guidelines that have been suggested include keeping the interaction simple and clear, organizing interface elements to aid understanding and use through suitable groupings, and designing images to be immediate and generalizable. All of |
Physical design: getting concrete 26 , 268 Chapter 8 Design, prototyping and construction these focus on making the communication between user and product as clear as possible| | 268 Chapter 8 Design, prototyping and construction these focus on making the communication between user and product as clear as possible|
Physical design: getting concrete 26 , 268 Chapter 8 Design, prototyping and construction these focus on making the communication between user and product as clear as possible| | Extensive experience in the art of communication (through posters, text, books, images, advertising, etc.) is relevant to interaction design. In her interview at the end of Chapter 6, Gillian Crampton Smith identifies the roles that traditional designers can play in interaction design; one of them she highlights is the fact that designers are trained to produce a coherent design that delivers the desired message to the intended audience. Including such designers on the team can bring this experience to bear. Mullet and Sano (1995) identify a number of useful design principles arising from the visual arts|
Physical design: getting concrete 26 , 268 Chapter 8 Design, prototyping and construction these focus on making the communication between user and product as clear as possible| | To see how these can be translated into the context of interaction design, we consider their application to different widgets, i.e., screen elements, in the next section|
Different kinds of widget Interfac ,  | 8.4.2 Different kinds of widget Interfaces are made up of widgets, elements such as dialog boxes, menus, icons, toolbars, etc. Each element must be designed or chosen from a predesigned set of widgets. Sometimes these decisions are made for you through the use of a style guide. Style guides may be commercially produced, such as the Windows style guide (called commercial style guides), or they may be internal to a company (called corporate style guides). A style guide dictates the look and feel of the interface, i.e., which widgets should be used for which purpose and what they look like|
Different kinds of widget Interfac ,  | For example, study your favorite Windows applications. Which menu is always on the right-hand side of the toolbar? What icon is used to represent "close" or "print"? Which typeface is used in menus and dialog boxes? Each Windows product has the same look and feel, and this is specified in the Windows style guide. If you go to a commercial website, you may find that each screen also has the same look and feel to it. This kind of corporate identity can be captured in a corporate style guide. More information about standards and style guides is in Box 8.5|
Different kinds of widget Interfac ,  | We consider here briefly three main aspects of interface design: menu design, icon design, and screen layout. These are applicable to a wide range of interactive products, from standard desktop interfaces for PC software, to mobile communicator functions and microwave ovens|
Different kinds of widget Interfac ,  | Menu design Menus provide users with a choice that can be a choice of commands or a choice of options related to a command. They provide the means by which the user can perform actions related to the task in hand and therefore are based on task structure and the information required to perform a task|
Different kinds of widget Interfac ,  | Menus may be designed as drop-down, pop-up or single-dialog menus. It may seem obvious how to design a menu, but if you want to make the application easy to use and provide user satisfaction, some important points must be taken into account|
Different kinds of widget Interfac ,  | For example, for pull-down and pop-up menus, the most commonly used functions should be at the top, to avoid frequent long scans and scrolls. The principle of grouping can be used to good effect in menu design. For example, the menu can be divided into collections of items that are related, with each collection being |
Physical design: getting concrete 26 ,  | 8.4 Physical design: getting concrete 269 5.2 Grouping options in a menu Menu options should be grouped within a menu to reflect user expectations and facilitate option search|
Logical groups or more) and these  ,  | 5.2.1 Logical groups or more) and these opby function or into other EXAMPLE: Grouping the commands in a word-processing system into such categories as customise, compose, edit, print|
Arbitrary groups If 8 or more opti ,  | 5.2.2 Arbitrary groups If 8 or more options are arranged arbitrarily in a menu panel, they should be arranged into equally distributed groups utilising the following equation: g= in where g is the number of groups n is the number of options on the panel|
Arbitrary groups If 8 or more opti , last: | EXAMPLE: Given 19 options in a menu panel, arrange them into 4 groups of about 5 options each|
Arbitrary groups If 8 or more opti , last: | Figure 8.1 2 An excerpt from IS0 9241 concerning how to group items in a menu|
Arbitrary groups If 8 or more opti ,  | separated from others. Opposite operations such as "quit" and "save" should be clearly separated to avoid accidentally losing work instead of saving it (See Figure 1.6 in Chapter 1)|
Arbitrary groups If 8 or more opti ,  | An excerpt from IS0 9241, a major international standard for interaction design, considers grouping in menu design, as shown in Figure 8.12|
Arbitrary groups If 8 or more opti , last: | To show how the design of menus may proceed, we return to the shared calendar|
Arbitrary groups If 8 or more opti ,  | In our initial data gathering, we identified a number of possible tasks that the user might want to perform using the calendar. These included making an entry, arranging a meeting among a number of people, entering contact details, and finding out other people's engagements. Tied to these would also be a number of administrative and housekeeping actions such as deleting entries, moving entries, editing entries, and so on. Suppose we stick with just this list. The first question is what to call the menu entries. Menu names need to be short, clear, and unambiguous. The space for listing them will be restricted, so they must be short, and you want them to be distinguishable, i.e., not easily confused with one another so that the user won't choose the wrong one by mistake. Our current descriptions are really too long. For example, instead of "find out other people's engagements" we could have Query entry as a menu option, following through to a dialog box that asks for relevant details|
Arbitrary groups If 8 or more opti ,  | We need to consider logical groupings. In this case, we could group according to user goal, i.e., have Query entry, Add entry, Edit entry, Move entry, and Delete entry grouped together (see Figure 8.13). Similarly, we could group Add contact, |
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system|
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | Edit contact and Delete contact together. Finding other people's engagements could be generalized to a simple Search option that led to a dialog box in which the search parameters are specified. Arranging a meeting is also an option that doesn't clearly group with other commands. This and the Search option may be better represented as options on a toolbar than as menu items on their own|
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | Icon design Designing a good icon takes more than a few minutes. You may be able to think up good icons in a matter of seconds, but such examples are unlikely to be widely acceptable to your user group. When symbols for representing ladies' and gents' toilets first appeared in the UK, a number of confused tourists did not understand the culturally specific icons of a woman wearing a skirt and a man wearing trousers. For example, some people protested that they thought the male icon was a woman wearing a trouser suit. We are now all used to these symbols, and indeed internationally recognized symbols for how to wash clothes, fire exits, road signs, etc. now exist. However, icons are cultural and context-specific. Designing a good icon takes time|
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | At a simple level, designers should always draw on existing traditions or standards, and certainly should not contradict them. Concrete objects or things are easier to represent as an icon since they can be just a picture of the item. Actions are harder but can sometimes be captured. For example, using a picture of a pair of scissors to represent "cut7 ' in a word-processing application provides sufficient clues as long as the user understands the convention of "cut" for deleting text|
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | In our shared calendar, if we are going to have the Search and Arrange a Meeting commands on a tool bar, we need to identify a suitable icon for each of them. A number of possible icons spring to mind for the Search option, mainly because searching is a fairly common action in many interactive products: a magnifying glass or a pair of binoculars are commonly used for such options. Arranging a meeting is a little difficult, though. It's probably easier to focus on the meeting itself than the act of arranging the meeting, but how do you capture a meeting? You want the icon to be immediately recognizable, yet it must be small and simple|
Arbitrary groups If 8 or more opti , 270 Chapter 8 Design, prototyping and construction Calendar Entry Contacts Arrange Meeting Add Entry Add Contact Edit Entry Edit Contact Move Entry Delete Contact Delete Entry Figure 8.1 3 Possible menu groupings for the shared calendar system| | What characteristic(s) of a meeting might you capture? One of the things that comes to mind is a group of people, so maybe we could consider a collection of stick people? Another element of a meeting is usually a table, but a table on its own isn't enough, so maybe having a table with a number of people around it would work? |
Physical design: getting concrete 27 ,  | 8.4 Physical design: getting concrete 271 Figure 8.14 A variety of possible icons to represent the "arrange a meeting" function|
Physical design: getting concrete 27 ,  | Sketch a simple, small icon to represent a set of people around the table, or suggest an icon of your own. Show it to your peers or friends, tell them that it's an icon for a shared calendar application, and see if they can understand what it represents|
Physical design: getting concrete 27 ,  | Comment A variety of attempts are shown in Figure 8.14. The last icon is the icon that paim.net uses for arranging meetings. This is a different possibility that tries to capture the fact that you're entering data into the planner|
Physical design: getting concrete 27 ,  | We discussed some cognitive aspects relevant to icon design in Chapter 3. For example, icons must be designed so that users can readily perceive their meaning and so that they are distinguishable one from another. Since the size of icons on the screen is often very small, this can be difficult to achieve, but users must be able to tell them apart. Look back again at Figure 3.4 and the activity associated with it|
Physical design: getting concrete 27 ,  | How easy do you think it would be to tell some of these icons apart if they were just a little smaller, or the screen resolution was lower? Screen design. There are two aspects to screen design: how the task is split across a number of screens, and how the individual screens are designed|
Physical design: getting concrete 27 ,  | The first aspect can be supported by reference to the task analysis, which broke down the user's task into subtasks and plans of action. One starting point for screen design is to translate the task analysis into screens, so that each task or subtask has its own screen. This will require redesign and adjustment, but it is a starting point|
Physical design: getting concrete 27 ,  | The interaction could be divided into simple steps, each involving a decision or simple data entry. However, this can become idiotic, and having too many simple screens can become just as frustrating as having information all crammed into one screen. THIS is one of the balances to be drawn in screen design. Tasks that are more complicated than this (and are usually unsuited to simple task analysis) may require a different model of interaction in which a number of screens are open at the same time and the user is allowed to switch among them. |
Physical design: getting concrete 27 , 272 Chapter 8 Design, prototyping and construction Another issue affecting the division of a task across screens is that all pertinent information must be easily available at relevant times| | 272 Chapter 8 Design, prototyping and construction Another issue affecting the division of a task across screens is that all pertinent information must be easily available at relevant times|
Physical design: getting concrete 27 , 272 Chapter 8 Design, prototyping and construction Another issue affecting the division of a task across screens is that all pertinent information must be easily available at relevant times| | Guidelines for the second aspect, individual screen design, draw more clearly from some of the visual communication principles we mentioned above: for example, designing the screen so that users' attention is drawn immediately to the salient points, and using color, motion, boxing and grouping to aid understanding and clarity|
Physical design: getting concrete 27 , 272 Chapter 8 Design, prototyping and construction Another issue affecting the division of a task across screens is that all pertinent information must be easily available at relevant times| | Each screen should be designed so that when users first see it, their attention is focused on something that is appropriate and useful to the task at hand. Animations can be very distracting if they are not relevant to the task, but are effective if used judiciously|
Physical design: getting concrete 27 , 272 Chapter 8 Design, prototyping and construction Another issue affecting the division of a task across screens is that all pertinent information must be easily available at relevant times| | Good organization helps users to make sense of an interaction and to interpret it within their own context (as discussed in Chapter 3). This is another example where principles of good grouping can be applied, for example, grouping similar things together or providing separation between dissimilar or unrelated items. Grouping can be achieved in different ways: by placing things close together, using colors, boxes, or frames to segregate items, or using shapes to indicate relationships among elements. There is a trade-off between sparsely populated screens with a lot of open space and overcrowded screens with too many and too complicated sets of icons. If the screen is overcrowded, then users |
Physical design: getting concrete 27 , last: | 8.4 Physical design: getting concrete 273 |
Physical design: getting concrete 27 ,  | - - 274 Chapter 8 Design, prototyping and construction will become confused and distracted. But too much open space and consequently many screens can lead to frequent screen changes, and a disjointed series of interactions|
Physical design: getting concrete 27 ,  | information display. Making sure that the relevant information is available for the task is one aspect of information display, but another concerns the format. Differ- |
Tool support 275 ent types of inform ,  | 8.5 Tool support 275 ent types of information lend themselves to different kinds of display. For example, data that is discrete in nature, such as sales figures for the last month, could be displayed graphically using a digital technique, while data that is continuous in nature, such as the percentage increase in sales over the last month, is better displayed using an analog device|
Tool support 275 ent types of inform ,  | If data is to be transferred to the device from a paper-based medium or vice versa, it makes sense to have the two consistent. This reduces user confusion and search time in reconciling data displayed with data on the paper|
Tool support 275 ent types of inform ,  | In the shared calendar application, there is potentially a lot of information to display. If you have five members of the department, each with their own calendars, and the departmental calendar too, then you need to display six sets of engagement information. When we showed the prototype system to our user, he suggested that dates should be chosen through a matrix of some kind rather than a drop-down list. Displaying information appropriately can make communication a lot easier|
Tool support The tools available to  ,  | 8.5 Tool support The tools available to support the activities described here are wide-ranging and various. We mentioned development environments when talking about prototypes in Section 8.2, but other kinds of support are available|
Tool support The tools available to  ,  | Much research has been done into appropriate support for different kinds of design and software production, resulting in a huge variety of tools. Because technology moves so quickly, any discussion of specific tools would be quickly out of date. Up-to-date information about support tools can be found on our website (www.ID-book.com). Here we report on some general observations about software tools|
Tool support The tools available to  ,  | Brad Myers (1995) suggests nine facilities that user interface software tools might provide: help design the interface given a specification of the end users' tasks help implement the interface given a specification of the design create easy-to-use interfaces allow the designer to rapidly investigate different designs allow nonprogrammers to design and implement user interfaces automatically evaluate the interface and propose improvements allow the end user to customize the interface provide portability be easy to use In a later paper Myers et al. (2000), look at the past, present, and future of user interface tools. Box 8.8 describes some types of tool that have been successful and some that have been unsuccessful. |
Tool support The tools available to  , last: | - -- 276 Chapter 8 Design, prototyping and construction |
Tool support The tools available to  ,  | Summary 277 Assignment This Assignment continues work on the web-based ticket reservation system at the end of Chapter 7|
Tool support The tools available to  ,  | (a) Based on the information gleaned from the assignment in Chapter 7, suggest three different conceptual models for this system. YOU should consider each of the aspects of a conceptual model discussed in this chapter: interaction paradigm, interaction mode, metaphors, activities it will support, functions, relationships between functions, and information requirements. Of these, decide which one seems most appropriate and articulate the reasons why|
Tool support The tools available to  , last: | (b) Produce the following prototypes for your chosen conceptual model|
Tool support The tools available to  ,  | (i) Using the scenarios generated for the ticket reservation system, produce a storyboard for the task of buying a ticket for one of your conceptual models|
Tool support The tools available to  , last: | Show it to two or three potential users and get some informal feedback|
Tool support The tools available to  ,  | (ii) Now develop a prototype based on cards and post-it notes to represent the structure of the ticket reservation task, incorporating the feedback from the first evaluation. Show this new prototype to a different set of potential users and get some more informal feedback|
Tool support The tools available to  ,  | (iii) Using a software-based prototyping tool (e.g., Visual Basic or Director) or web authoring tool (e.g., Dreamweaver), develop a software-based prototype that incorporates all the feedback you've had so far. If you do not have experience in using any of these, create a few HTML web pages to represent the basic structure of your website|
Tool support The tools available to  ,  | (c) Consider the web page's detailed design. Sketch out the application's main screen (home page or data entry). Consider the screen layout, use of colors, navigation audio, animation, etc. While doing this, use the three main questions introduced in Box 8.7 as guidance: Where am I? What's here? Where can I go? Write one or two sentences explaining your choices, and consider whether the choice is a usability consideration or a user experience consideration|
Tool support The tools available to  ,  | Summary This chapter has explored the activities of design prototyping and construction. Prototyping and scenarios are used throughout the design process to test out ideas for feasibility and user acceptance. We have looked at the different forms of prototyping, and the activities have encouraged you to think about and apply prototyping techniques in the design process|
Tool support The tools available to  ,  | Key points Prototyping may be low fidelity (such as paper-based) or high fidelity (such as softwarebased)|
Tool support The tools available to  , last: | High-fidelity prototypes may be vertical or horizontal|
Tool support The tools available to  ,  | Low-fidelity prototypes are quick and easy to produce and modify and are used in the early stages of design|
Tool support The tools available to  , last: | There are two aspects to the design activity: conceptual design and physical design|
Tool support The tools available to  ,  | Conceptual design develops a model of what the product will do and how it will behave, while physical design specifies the details of the design such as screen layout and menu structure. |
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view|last: | Scenarios and prototypes can be used effectively in conceptual design to explore ideas|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | We have discussed four areas of physical design: menu design, icon design, screen design, and information display|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view|last: | There is a wide variety of support tools available to interaction designers|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | Further reading WINOGRAD, TERRY (1996) Bringing Design to Software. Addison-Wesley and ACM Press. This book is a collection of articles all based on the theme of applying ideas from other design disciplines in software design. It has a good mixture of interviews, articles, and profiles of exemplary systems, projects or techniques. Anyone interested in software design will find it inspiring|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | CARROLL, JOHN M. (ed.) (1995) Scenario-based Design. John Wiley & Sons, Inc. This volume is an edited collection of papers arising from a three-day workshop on use-oriented design|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | The book contains a variety of papers including case studies of scenario use within design, and techniques for using them with object-oriented development, task models and usability engineering. This is a good place to get a broad understanding of this form of development|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | MULLET, KEVIN, AND SANO, DARELL (1995) Designing Visual Interfaces. SunSoft Press. This book is full of practical guidance for designing interactions that focus on communication|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | The ideas here come from communication-oriented visual designers. Mullet and Sano show how to apply these techniques to interaction design, and they also show some common errors made by interaction designers that contravene the principles|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view|last: | VEEN, JEFFREY (2001) The Art and Science of Web Design|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | New Riders. A very bright book, providing a lot of practical information taken from the visual arts about how to design websites. It also includes sections on common mistakes to help you avoid these pitfalls|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | MYERS, BRAD, HUDSON, S. E., AND PAUSCH, R. (2000) Past, present and future of user interface software tools|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | ACM Transactions on Computer-Human Interaction, 7(1), 3-28. This paper presents an interesting description of user interface tools, expanding on the information given in Box 8.8. |
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | Chapter 9 User-centered approaches to interaction 9.1 Introduction 9.2 Why is it important to involve users at all? 9.2.1 Degrees of involvement 9.3 What is a user-centered approach? 9.4 Understanding users' work: applying ethnography in design 9.4.1 Coherence 9.4.2 Contextual Design 9.5 Involving users in design: participatory design 9.5.1 PlCTlVE 9.5.2 CARD 1 9.1 Introduction As you would expect, user-centered development involves finding out a lot about the users and their tasks, and using this information to inform design. In Chapter 7 we introduced some data-gathering techniques which can be used to collect this information, including naturalistic observation. Studying people in their "natural" surroundings as they go about their work can provide insights that other data-gathering techniques cannot, and so interaction designers are keen to use this approach where appropriate. One particular method that has been used successfully for naturalistic observation in the social sciences is ethnography. It has also been used with some success in product development but there have been some difficulties knowing how to interpret and present the data gathered this way so that it can be translated into practical design|
Tool support The tools available to  , 278 Chapter 8 Design, prototyping and construction We have explored three perspectives to help you develop conceptual models: an interaction paradigm point of view, an interaction mode point of view, and a metaphor point of view| | Another aspect of user-centered development is user involvement in the development process. There are different degrees of involvement, one of which is through evaluation studies, as discussed in Chapters 10 through 14. Another is for users to contribute actively to the design itself-to become co-designers. As Gillian Crampton Smith said in the interview at the end of Chapter 6, users are not designers, but the payoffs for allowing users to contribute to the design themselves are quite high in terms of user acceptance of the product. So techniques have been developed that engage users actively and productively in design. |
Tool support The tools available to  , 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design| | 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design|
Tool support The tools available to  , 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design|last: | The main aims of this chapter are to: Explain some advantages of involving users in development|
Tool support The tools available to  , 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design|last: | Explain the main principles of a user-centered approach|
Tool support The tools available to  , 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design|last: | Describe some ethnographic-based methods aimed at understanding users' work|
Tool support The tools available to  , 280 Chapter 9 User-centered approaches to interaction design In this chapter, we discuss some issues surrounding user involvement, and expand on the principles underlying a user-centered approach. Then we describe two approaches to using ethnographic data to inform design and two approaches to involving users actively in design| | Describe some participative design techniques that help users take an active part in design decisions|
Why is it important to involve users ,  | 9.2 Why is it important to involve users at all? We talked in Chapter 6 about the importance of identifying stakeholders and of 1 consulting the appropriate set of people;_Iqthe past, developers would often talk to I managers or to "proxy-users," i.e., people w$o role-played as users, when eliciting requirements. But the best way to ensbre that development continues to take users' activities into account is to involve rdal users throughout. In this way, developers can gain a better understanding of their needs and their goals, leading to a more appropriate, more useable product. However, two other aspects which have nothing to do with functionality are equal y as important if the product is to be usable and used: expectation management a f d ownership|
Why is it important to involve users ,  | Expectation management is the process of making sure that the users7 views and expectations of the new product are realistic. The purpose of expectation management is to ensure that there are no surprises for users when the product arrives|
Why is it important to involve users ,  | If users feel they have been "cheated" by promises that have not been fulfilled, then this will cause resistance and ma be rejection. Expectation management is relevant whether you are dealing with a ~i' organization introducing a new software systern or a company developing a new ifiteractive toy. In both cases, the marketing of the new arrival must be careful not to misrepresent the product. How many times have you seen an advert for somethi g you thought would be really good to have, but when you see one, discover that t e i marketing "hype" was a little exaggerated? I expect you felt quite disappointed rjnd let down. Well, this is the kind of feeling that expectation management tries to lavoid|
Why is it important to involve users ,  | It is better to exceed users' expedtations than to fall below them. This does not mean just adding more features, how*, but that the product supports the users7 work more effectively than they expect. Inuolving users throughout development helps with expectation management because they can see from an early stage what the product's capabilities are and what they are not. They will also understand better how it will affect their jobs and what 'they can expect to do with the product; they are less likely to be disappointed. Users can also see the capabilities develop and understand, at least to some extent, why the features are the way they are|
Why is it important to involve users , last: | Adequate and timely training is another technique for managing expectations|
Why is it important to involve users , last: | If you give people the chance to work with the product before it is released, either |
Why is it important to involve users ,  | 9.2 Why is it important to involve users at all? 281 I by training them on the real system or by offering hands-on demonstrations of a prerelease version, then they will understand better what to expect when the final product is released|
Why is it important to involve users ,  | A second reason for user involvement is ownership. Users who are involved and feel that they have contributed to a product's development, are more likely to feel a sense of "ownership" towards it and to be receptive to it when it finally emerges. Remember Suzanne Robertson's comment in her interview at the end of Chapter 7 about how important it is for people to feel heard? Well, this is true throughout development, not just at the requirements stage|
Degrees of involvement Different d ,  | 9.2.1 Degrees of involvement Different degrees of user involvement may be implemented in order to manage ex- I pectations and to create a feeling of ownership. At one end of the spectrum, users may be co-opted to the design team so that they are major contributors. For any one user, this may be on a full-time basis or a part-time basis, and it may be for the duration of the project or for a limited time only. There are advantages and disadvantages to each situation. If a user is co-opted full-time for the whole project, their input will be consistent and they will become very familiar with the system and its rationale. However, if the project takes many years they may lose touch with the rest of the user group, making their input less valuable. If a user is co-opted parttime for the whole project, she will offer consistent input to development while remaining in touch with other users. Depending on the situation, this will need careful management as the user will be trying to learn new jargon and handle unfamiliar material as a member of the design team, yet concurrently trying to fulfill the demands of their original job. This can become very stressful for the individuals. If a number of users from each user group are co-opted part-time for a limited period, input is not necessarily consistent across the whole project, but careful coordination between users can alleviate this problem. In this case, one user may be part of the design team for six months, then another takes over for the next six months, and so on|
Degrees of involvement Different d ,  | At the other end of the spectrum, users may be kept informed through regular newsletters or other channels of communication. Provided they are given a chance to feed into the development process through workshops or similar events, this can be an effective approach to expectation management and ownership. In a situation with hundreds or even thousands of users it would not be feasible to involve them all as members of the team, and so this might be the only viable option|
Degrees of involvement Different d ,  | If you have a large number of users, then a compromise situation is probably the best. Representatives from each user group may be co-opted onto the team on a full-time basis, while other users are involved through design workshops, evaluation sessions, and other data-gathering activities|
Degrees of involvement Different d ,  | The individual circumstances of the particular project affect what is realistic and appropriate. If your end user groups are identifiable, e.g., you are developing a product for a particular company, then it is easier to involve them. If, however, you are developing a product for the open market, it is unlikely that you will be able to co-opt a user to your design team. Box 9.1 explains how Microsoft involves users in its developments. |
Degrees of involvement Different d , 282 Chapter 9 User-centered approaches to interaction design One of the reasons often cited for not involving users in development is the amount of time it takes to organize, manage, and control such involvement. This issue may appear particularly acute in developing systems to run on the Internet where ever-shorter timescales are being forced on teams-in this fast-moving area, projects lasting three months or less are common. You might think, therefore, that it would be particularly difficult to involve users in such projects. However, Braiterman et al. (2000) report two case studies showing how to involve users successfully in large-scale but very short multidisciplinary projects, belying the claim that involving users can waste valuable development time| | 282 Chapter 9 User-centered approaches to interaction design One of the reasons often cited for not involving users in development is the amount of time it takes to organize, manage, and control such involvement. This issue may appear particularly acute in developing systems to run on the Internet where ever-shorter timescales are being forced on teams-in this fast-moving area, projects lasting three months or less are common. You might think, therefore, that it would be particularly difficult to involve users in such projects. However, Braiterman et al. (2000) report two case studies showing how to involve users successfully in large-scale but very short multidisciplinary projects, belying the claim that involving users can waste valuable development time|
Degrees of involvement Different d , 282 Chapter 9 User-centered approaches to interaction design One of the reasons often cited for not involving users in development is the amount of time it takes to organize, manage, and control such involvement. This issue may appear particularly acute in developing systems to run on the Internet where ever-shorter timescales are being forced on teams-in this fast-moving area, projects lasting three months or less are common. You might think, therefore, that it would be particularly difficult to involve users in such projects. However, Braiterman et al. (2000) report two case studies showing how to involve users successfully in large-scale but very short multidisciplinary projects, belying the claim that involving users can waste valuable development time| | The first case study was a three-week project to develop the interaction for a new web shopping application. The team included a usability designer, an information architect, a project manager, content strategists, and two graphic designers. In such a short timeframe, long research and prototyping sessions were impossible, so the team produced a hand-drawn paper prototype of the application that was |
Why is it important to involve users ,  | 9.2 Why is it important to involve users at all? 283 revised daily in response to customer testing. The customers were asked to perform tasks with the prototype, which was manipulated by one of the team in order to simulate interaction, e.g., changing screens. After half the sessions were conducted, the team produced a more formal version of the prototype in Adobe Illustrator|
Why is it important to involve users ,  | They found that customers were enthusiastic about using the paper prototype and were keen to offer improvements|
Why is it important to involve users ,  | The second case study involved the development of a website for a video game publisher over three months. In order to understand what attracts people to such gaming sites, the multidisciplinary team felt they needed to understand the essence of gaming. To do this, they met 32 teenage gamers over a ten-day period, during which they observed and interviewed them in groups and individually|
Why is it important to involve users ,  | This allowed the team to understand something of the social nature of gaming and gave insights into the gamers themselves. During design, the team also conducted research and testing sessions in their office lab. This led them to develop new strategies and web designs based on the gamers' habits, likes, and dislikes|
Why is it important to involve users ,  | Box 9.2 describes a situation in which users were asked to manage a software development project. There were hundreds of potential users, and so in addition, |
What is a user-centered approach? 28 ,  | 9.3 What is a user-centered approach? 285 users became design team members on a full- and part-time basis; regular design workshops, debriefing, and training sessions were also held|
What is a user-centered approach? 28 ,  | How actively users should be involved is a matter for debate. Some studies have shown that too much user involvement can lead to problems. This issue is discussed in the Dilemma box below|
What is a user-centered approach? i  ,  | 9.3 What is a user-centered approach? i Throughout this book, we have emphasized the need for a user-centered approach to development. By this we mean that the real users and their goals, not just technology, should be the driving force behind development of a product. As a consequence, a well-designed system should make the most of human skill and judgment, should be directly relevant to the work in hand, and should support rather than constrain the user. This is less a technique and more a philosophy|
What is a user-centered approach? i  ,  | In 1985, Gould and Lewis (1985) laid down three principles they believed I would lead to a "useful and easy to use computer system." These are very similar to the three key characteristics of interaction design introduced in Chapter 6|
What is a user-centered approach? i  , 1. Early focus on users and tasks. This means first understanding who the users will be by directly studying their cognitive, behavioral, anthropomorphic, and attitudinal characteristics. This required observing users doing their normal tasks, studying the nature of those tasks, and then involving users in the design process| | 1. Early focus on users and tasks. This means first understanding who the users will be by directly studying their cognitive, behavioral, anthropomorphic, and attitudinal characteristics. This required observing users doing their normal tasks, studying the nature of those tasks, and then involving users in the design process|
What is a user-centered approach? i  , 2. Empirical measurement. Early in development, the reactions and performance of intended users to printed scenarios, manuals, etc. is observed and measured. Later on, users interact with simulations and prototypes and their performance and reactions are observed, recorded, and analyzed| | 2. Empirical measurement. Early in development, the reactions and performance of intended users to printed scenarios, manuals, etc. is observed and measured. Later on, users interact with simulations and prototypes and their performance and reactions are observed, recorded, and analyzed|
What is a user-centered approach? i  , 3. Iterative design. When problems are found in user testing, they are fixed and then more tests and observations are carried out to see the effects of the fixes. This means that design and development is iterative, with cycles of "design, test, measure, and redesign" being repeated as often as necessary| | 3. Iterative design. When problems are found in user testing, they are fixed and then more tests and observations are carried out to see the effects of the fixes. This means that design and development is iterative, with cycles of "design, test, measure, and redesign" being repeated as often as necessary|
What is a user-centered approach? i  , 3. Iterative design. When problems are found in user testing, they are fixed and then more tests and observations are carried out to see the effects of the fixes. This means that design and development is iterative, with cycles of "design, test, measure, and redesign" being repeated as often as necessary| | Iteration is something we have emphasized throughout these chapters on design, and it is now widely accepted that iteration is required. When Gould and Lewis wrote their paper, however, the iterative nature of design was not accepted by most developers. In fact, they comment in their paper how "obvious" these principles are, and remark that when they started recommending these to designers, the designers' reactions implied that these principles were indeed obvious|
What is a user-centered approach? i  , 3. Iterative design. When problems are found in user testing, they are fixed and then more tests and observations are carried out to see the effects of the fixes. This means that design and development is iterative, with cycles of "design, test, measure, and redesign" being repeated as often as necessary| | However, when they asked designers at a human factors symposium for the major steps in software design, most of them did not cite most of the principles-in fact, only 2% mentioned all of them. So maybe they had "obvious" merit, but were not so easy to put into practice. The Olympic Messaging System (OMS) (Gould et al., 1987) was the first reported large computer-based system to be developed using these three principles. Here a combination of techniques was used to elicit users' reactions to designs, from the earliest prototypes through to the final product. In this case, users were mainly involved in evaluating designs. The OMS is discussed further in Chapter 10. |
What is a user-centered approach? i  , 286 Chapter 9 User-centered approaches to interaction design The iterative nature of design and the need to develop usability goals have been discussed in Chapter 6. Here, we focus on the first principle, early focus on users and tasks, and suggest five further principles that expand and clarify what this means: 1. User's tasks and goals are the driving force behind the development. In a user-centered approach to design, while technology will inform design options and choices, it should not be the driving force. Instead of saying, "Where can we deploy this new technology?," say, "What technologies are available to provide better support for users' goals?" 2. Users' behavior and context of use are studied and the system is designed to support them. This is about more than just capturing the tasks and the users' goals. How people perform their tasks is also significant. Understanding behavior highlights priorities, preferences, and implicit intentions| | 286 Chapter 9 User-centered approaches to interaction design The iterative nature of design and the need to develop usability goals have been discussed in Chapter 6. Here, we focus on the first principle, early focus on users and tasks, and suggest five further principles that expand and clarify what this means: 1. User's tasks and goals are the driving force behind the development. In a user-centered approach to design, while technology will inform design options and choices, it should not be the driving force. Instead of saying, "Where can we deploy this new technology?," say, "What technologies are available to provide better support for users' goals?" 2. Users' behavior and context of use are studied and the system is designed to support them. This is about more than just capturing the tasks and the users' goals. How people perform their tasks is also significant. Understanding behavior highlights priorities, preferences, and implicit intentions|
What is a user-centered approach? i  , 286 Chapter 9 User-centered approaches to interaction design The iterative nature of design and the need to develop usability goals have been discussed in Chapter 6. Here, we focus on the first principle, early focus on users and tasks, and suggest five further principles that expand and clarify what this means: 1. User's tasks and goals are the driving force behind the development. In a user-centered approach to design, while technology will inform design options and choices, it should not be the driving force. Instead of saying, "Where can we deploy this new technology?," say, "What technologies are available to provide better support for users' goals?" 2. Users' behavior and context of use are studied and the system is designed to support them. This is about more than just capturing the tasks and the users' goals. How people perform their tasks is also significant. Understanding behavior highlights priorities, preferences, and implicit intentions| | One argument against studying current behavior is that we are looking to improve work, not to capture bad habits in automation. The implication is that exposing designers to users is likely to stifle innovation and creativity, but experience tells us that the opposite is true (Beyer and HoItzblatt, 1998). In addition, if something is designed to support an activity with little understanding of the real work involved, it is likely to be incompatible with current practice, and users don't like to deviate from their learned habits if operating a new device with similar properties (Norman, 1988)|
What is a user-centered approach? i  , 3. Users' characteristics are captured and designed for. When things go wrong with technology, we often say that it is our fault. But as humans, we are prone to making errors and we have certain limitations, both cognitive and physical. Products designed to support humans should take these limitations into account and should limit the mistakes we make| | 3. Users' characteristics are captured and designed for. When things go wrong with technology, we often say that it is our fault. But as humans, we are prone to making errors and we have certain limitations, both cognitive and physical. Products designed to support humans should take these limitations into account and should limit the mistakes we make|
What is a user-centered approach? i  , 3. Users' characteristics are captured and designed for. When things go wrong with technology, we often say that it is our fault. But as humans, we are prone to making errors and we have certain limitations, both cognitive and physical. Products designed to support humans should take these limitations into account and should limit the mistakes we make| | Cognitive aspects such as attention, memory, and perception issues were introduced in Chapter 3. Physical aspects include height, mobility, and strength. Some characteristics are general, such as that about one man in 12 has some form of color blindness, but some characteristics may be associated more with the job or particular task at hand. So as well as general characteristics, we need to capture those specific to the intended user group|
What is a user-centered approach? i  , 4. Users are consulted throughout development from earliest phases to the latest and their input is seriously taken into account. As discussed above, there are different levels of user involvement and there are different ways in which to consult users. However involvement is organized, it is important that users are respected by designers| | 4. Users are consulted throughout development from earliest phases to the latest and their input is seriously taken into account. As discussed above, there are different levels of user involvement and there are different ways in which to consult users. However involvement is organized, it is important that users are respected by designers|
What is a user-centered approach? i  , 5. All design decisions are taken within the context of the users, their work, and their environment. This does not necessarily mean that users are actively involved in design decisions. As you read in Gillian Crampton Smith's interview at the end of Chapter 6, not everyone believes that it is a good idea for users to be designers. As long as designers remain aware of the users while | | 5. All design decisions are taken within the context of the users, their work, and their environment. This does not necessarily mean that users are actively involved in design decisions. As you read in Gillian Crampton Smith's interview at the end of Chapter 6, not everyone believes that it is a good idea for users to be designers. As long as designers remain aware of the users while |
What is a user-centered approach? 28 ,  | 9.3 What is a user-centered approach? 287 making their decisions, then this principle will be upheld. Keeping this context in mind can be difficult, but an easily accessible collection of gathered data is one way to achieve this. Some design teams set up a specific design room for the project where data and informal records of brainstorming sessions are pinned on the walls or left on the table. (This is discussed again in Section 9.4.2 on Contextual Design.) Assume that you are involved in developing a new e-commerce site for selling garden plants|
What is a user-centered approach? 28 , last: | Suggest ways of applying the above principles in this task|
What is a user-centered approach? 28 ,  | Comment To address the first three principles, we would need to find out about potential users of the site. As this is a new site, there is no immediate set of users to consult. However, the tasks and goals, behavior, and characteristics of potential users of this site can be identified by investigating how people shop in existing online and physical shopping situations-for example, shopping through interactive television, through other online sites, in a garden center, in the local corner shop, and so on. For each of these, you will find advantages and disadvantages to the shopping environment and you will observe different behaviors. By investigating behavior and patterns in a physical garden center, you can find out a lot about who might be interested in buying plants, how these people choose plants, what criteria are important, and what their buying habits are. From existing online shopping behavior, you could determine likely contexts of use for the new site|
What is a user-centered approach? 28 ,  | For the fourth principle, because we don't have an easily tapped set of users available, we could follow a similar route to the Internet company described in Section 9.2, and try to recruit people we believe to be representative of the group. These people may be involved in workshops or in evaluation sessions, possibly in a physical shopping environment. Valuable input can be gained in targeted workshops, focus groups, and evaluation sessions. The last principle could be supported through the creation of a design room to house all the data collected|
What is a user-centered approach? 28 , last: | B 1986 by Randy Glaabergen|
What is a user-centered approach? 28 ,  | B 1986 by Randy Glaabergen|: "We created this model to appeal to the youth market. The monitor is tattooed and the CD-ROM tray is pierced with a gold earring." |
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it| | 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it| | Ethnography is a method that comes originally from anthropology and literally means "writing the culture" (Hammersley and Atkinson, 1983). It has been used in the social sciences to display the social organization of activities, and hence to understand work. It aims to find the order within an activity rather than impose any framework of interpretation on it. It is a broad-based approach in which users are observed as they go about their normal activities. The observers immerse themselves in the users' environment and participate in their day-to-day work, joining in conversations, attending meetings, reading documents, and so on. The aim of an ethnographic study is to make the implicit explicit. Those in the situation, the users in this case, are so familiar with their surroundings and their daily tasks that they often don't see the importance of familiar actions or happenings, and hence don't remark upon them in interviews or other data-gathering sessions|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it|last: | There are different ways in which this method can be associated with design|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it| | Beynon-Davies (1997) has suggested that ethnography can be associated with development as "ethnography oJ;" "ethnography for," and "ethnography within." Ethnography of development refers to studies of developers themselves and their workplace, with the aim of understanding the practices of development (e.g. Button and Sharrock, 1994; Sharp et al., 1999). Ethnography for development yields ethnographic studies that can be used as a resource for development, e.g., studies of organizational work. Ethnography within software development is the most common form of study (e.g., Hughes et al., 1993a); here the techniques associated with ethnography are integrated into methods and approaches for development (e.g., Viller and Sommerville, 1999)|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it| | Because of the very nature of the ethnographic experience, it is very difficult to describe explicitly what data is collected through such an exercise. It is an experience rather than a data-collection exercise. However, the experience must be shared with other team members, and therefore needs to be documented and rationalized. Box 9.3 provides an example ethnographic account in the form of a description of an ethnographic study of a new media company. In this case, the intention was not explicitly concerned with designing an interactive product, but was a business-oriented ethnography|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it|last: | The style and content of the piece, however, are typical of ethnographies|
What is a user-centered approach? 28 , 288 Chapter 9 User-centered approaches to interaction design 9.4 Understanding users' work: applying ethnography in design Kuhn (1996) provides a good example illustrating the importance of understanding users' work. She describes a case where a computer system was introduced to cut down the amount of time spent on conversations between telephone-company repair personnel. Such conversations were regarded as inefficient and "off-task." What management had failed to realize was that in the conversations workers were often consulting one another about problems, and were pooling their knowledge to solve them. By removing the need for conversation, they removed a key mechanism for solving problems. If only the designers had understood the work properly, they would not have considered removing it| | Studying the context of work and watching work being done reveals information that might be missed by other methods that concentrate on asking about work away from its natural setting. For example, it can shed light on how people do the "real" work as opposed to the formal procedures that you'd find in documentation; |
Understanding users' work: applying  , last: | 9.4 Understanding users' work: applying ethnography in design 289 |
Understanding users' work: applying  , 290 Chapter 9 User-centered approaches to interaction design the nature and purposes of collaboration, awareness of other's work, and implicit goals that may not even be recognized by the workers themselves. For example, I Heath et al. (1993) have been exploring the implications of ethnographic studies of real-world settings for the design of cooperative systems. We described their un- 1 derground control room study in Chapter 4, but they have also studied medical centers, architects' practices, and TV and radio studios. I In one of their studies Heath et al. (1993) looked at how dealers in a stock ex- I change work together. A main motivation was to see whether proposed technological support for market trading was indeed suitable for that particular setting. One I of the tasks examined in detail was the process of writing tickets to record deals. It had been commented upon earlier by others that this process of deal capture, using "old-fashioned" paper and pencil technology, was currently time-consuming and prone to error. Based on this finding, it had been further suggested that the existing way of making deals could be improved by introducing new technologies, including touch screens to input the details of transactions, and headphones to eliminate distracting external noise| | 290 Chapter 9 User-centered approaches to interaction design the nature and purposes of collaboration, awareness of other's work, and implicit goals that may not even be recognized by the workers themselves. For example, I Heath et al. (1993) have been exploring the implications of ethnographic studies of real-world settings for the design of cooperative systems. We described their un- 1 derground control room study in Chapter 4, but they have also studied medical centers, architects' practices, and TV and radio studios. I In one of their studies Heath et al. (1993) looked at how dealers in a stock ex- I change work together. A main motivation was to see whether proposed technological support for market trading was indeed suitable for that particular setting. One I of the tasks examined in detail was the process of writing tickets to record deals. It had been commented upon earlier by others that this process of deal capture, using "old-fashioned" paper and pencil technology, was currently time-consuming and prone to error. Based on this finding, it had been further suggested that the existing way of making deals could be improved by introducing new technologies, including touch screens to input the details of transactions, and headphones to eliminate distracting external noise|
Understanding users' work: applying  , 290 Chapter 9 User-centered approaches to interaction design the nature and purposes of collaboration, awareness of other's work, and implicit goals that may not even be recognized by the workers themselves. For example, I Heath et al. (1993) have been exploring the implications of ethnographic studies of real-world settings for the design of cooperative systems. We described their un- 1 derground control room study in Chapter 4, but they have also studied medical centers, architects' practices, and TV and radio studios. I In one of their studies Heath et al. (1993) looked at how dealers in a stock ex- I change work together. A main motivation was to see whether proposed technological support for market trading was indeed suitable for that particular setting. One I of the tasks examined in detail was the process of writing tickets to record deals. It had been commented upon earlier by others that this process of deal capture, using "old-fashioned" paper and pencil technology, was currently time-consuming and prone to error. Based on this finding, it had been further suggested that the existing way of making deals could be improved by introducing new technologies, including touch screens to input the details of transactions, and headphones to eliminate distracting external noise| | However, when Heath et al. began observing the deal capture in practice, they quickly discovered that these proposals were misguided. In particular, they warned that these new technologies would destroy the very means by which the traders currently communicate and keep informed of what others are up to. Thi: touch screens would reduce the availability of information to others on how deals were progressing, while headphones would impede the dealers' ability to inadvertently monitor one another's conversations. They pointed out how this kind of peripheral monitoring of other dealers' actions was central to the way deals are done. Moreover, if any dealers failed to keep up with what the other dealers were doing by continuously monitoring them, it was likely to affect their position in the market, which ultimately could prove very costly to the bank they were working for|
Understanding users' work: applying  , 290 Chapter 9 User-centered approaches to interaction design the nature and purposes of collaboration, awareness of other's work, and implicit goals that may not even be recognized by the workers themselves. For example, I Heath et al. (1993) have been exploring the implications of ethnographic studies of real-world settings for the design of cooperative systems. We described their un- 1 derground control room study in Chapter 4, but they have also studied medical centers, architects' practices, and TV and radio studios. I In one of their studies Heath et al. (1993) looked at how dealers in a stock ex- I change work together. A main motivation was to see whether proposed technological support for market trading was indeed suitable for that particular setting. One I of the tasks examined in detail was the process of writing tickets to record deals. It had been commented upon earlier by others that this process of deal capture, using "old-fashioned" paper and pencil technology, was currently time-consuming and prone to error. Based on this finding, it had been further suggested that the existing way of making deals could be improved by introducing new technologies, including touch screens to input the details of transactions, and headphones to eliminate distracting external noise| | Hence, the ethnographic study proved to be very useful in warning against attempts to integrate new technologies into a workplace without thinking through the implications for the work practice. As an alternative, Heath et al. suggested pen-based mobile systems with gestural recognition that could allow deals to be made efficiently while also allowing the other dealers to continue to monitor one another unobtrusively. |
Understanding users' work: applying  ,  | 9.4 Understanding users' work: applying ethnography in design 291 Hughes et a1 (1993) state that "doing" ethnography is about being reasonable, courteous and unthreatening, and interested in what's happening. This is particularly important when trying to perform studies in people's homes, such as those described in Box 9.4. There is, of course, more to it than this. Training and practice are required to produce good ethnographies. |
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | Look up from reading this book and observe your surroundings. Wherever you are, the chances are that you can see and hear lots of things, and probably other people too. Start to make a list of what you observe, and when things change or people move, write down what has happened and how it happened. For example, if someone spoke, what did his voice sound like? Angry, calm, whispering, happy? Spend just a few minutes observing what you can see|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | Now think about the same observations but begin to interpret them: imagine that you have to place the main items or people that you can see into categories. For example, on a train you might consider who might be getting off at which station, in a bedroom you might think about how to tidy up the items lying around|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | How easy is it to go from the detailed description to the more abstracted one? Comment As I am writing this, 1 am in a room on my own. I therefore don't have people to observe, but my desk is covered with things: a pen, a boarding pass from a recent trip abroad, a rosette from " U paw, disks etc. If I look around then 1 can see the wallpaper and the curtains, clothes hanging and in piles on the bed. In the background I can hear cars moving along the road, and the television downstairs. To spend any length of time really describing any one of the things 1 observe would take up a lot of words, and that's a lot of data|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | If I now consider how to file the things I can see, then I would start to think of categories such as which are books, which are research papers, what can be thrown away, and so on. It becomes easier to feel like I'm making progress. The other thing to notice is that some things 1 can observe are blocked out of my sphere of interest, such as the cars outside|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | In some ways, the goals of design and the goals of ethnography are at opposite ends of a spectrum. Design is concerned with abstraction and rationalization|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | Ethnography, on the other hand, is about detail. An ethnographer's account will be concerned with the minutiae of observation, while a designer is looking for useful abstractions that can be used to inform design. One of the difficulties faced by those wishing to use this very powerful technique is how to harness the data gathered in a form that can be used in design|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | Below, we introduce one framework that has been developed specifically to help structure the presentation of ethnographies in a way that enables designers to use them (other frameworks to help orient observers and how to organize this kind |
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while| | r I 9.4 Understanding users' work: applying ethnography in design 293 of study are described in Chapter 12). This framework has three main dimensions (Hughes et al, 1997): 1. The distributed co-ordination dimension focuses on the distributed nature of the tasks and activities, and the means and mechanisms by which they are coordinated|
Understanding users' work: applying  , 292 Chapter 9 User-centered approaches to interaction design Collecting ethnographic data is not hard although it may seem a little bewildering to those accustomed to using a frame of reference to focus the data collection rather than letting the frame of reference arise from the available data. You collect what is available, what is "ordinary," what it is that people do, say, how they work. The data collected therefore has many forms: documents, notes of your own, pictures, room layouts. Notebook notes may include snippets of conversation and descriptions of rooms, meetings, what someone did, or how people reacted to a situation. It is opportunistic in that you collect what you can collect and make the most of opportunities presented to you. You don't go in with a firm plan, and so the data you collect is not specifiable in advance. You have to do it rather than read about it. What you record can become more focused after being in the field for a while|last: | This has implications for the kind of automated support required|
Understanding users' work: applying  , 2. The plans and procedures dimension focuses on the organizational support for the work, such as workflow models and organizational charts, and how these are used to support the work. Understanding this aspect impacts on how the system is designed to utilize this kind of support| | 2. The plans and procedures dimension focuses on the organizational support for the work, such as workflow models and organizational charts, and how these are used to support the work. Understanding this aspect impacts on how the system is designed to utilize this kind of support|
Understanding users' work: applying  , 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information| | 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information|
Understanding users' work: applying  , 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information| | Rather than taking data from ethnographers and interpreting this in design, an alternative approach is to train developers to collect ethnographic data themselves|
Understanding users' work: applying  , 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information|last: | This has the advantage of giving the designers first-hand experience of the situation|
Understanding users' work: applying  , 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information| | Telling someone how to perform a task, or explaining what an experience is like, is very different from showing them or even gaining the experience themselves|
Understanding users' work: applying  , 3. The awareness of work dimension focuses on how people keep themselves aware of others' work. No-one works in isolation, and it has been shown that being aware of others' actions and work activities can be a crucial element of doing a good job. In the stock market example described above, this was one aspect that ethnographers identified. Implications here relate to the sharing of information| | Finding people with the skills of ethnographers and interaction designers may be difficult, but it is possible to provide notational and procedural mechanisms to allow designers to gain some of the insights first-hand. The two methods described below provide such support|
Coherence The Coherence method (Vi ,  | 9.4.1 Coherence The Coherence method (Viller and Sommerville, 1999) combines experiences of using ethnography to inform design with developments in requirements engineering|
Coherence The Coherence method (Vi ,  | Specifically, it is intended to integrate social analysis with object-oriented analysis from software engineering (which includes producing use cases as described in Chapter 7). Coherence does not prescribe how to move from the social analysis to use cases, but claims that presenting the data from an ethnographic study based around a set of "viewpoints" and "concerns" facilitates the identification of the product's most important use cases. |
Coherence The Coherence method (Vi , 294 Chapter 9 User-centered approaches to interaction design Viewpoints and concerns Coherence builds upon the framework introduced above and provides a set of focus questions for each of the three dimensions, here called "viewpoints"| | 294 Chapter 9 User-centered approaches to interaction design Viewpoints and concerns Coherence builds upon the framework introduced above and provides a set of focus questions for each of the three dimensions, here called "viewpoints"|
Coherence The Coherence method (Vi , 294 Chapter 9 User-centered approaches to interaction design Viewpoints and concerns Coherence builds upon the framework introduced above and provides a set of focus questions for each of the three dimensions, here called "viewpoints"| | The focus questions (see Figure 9.1) are intended to guide the observer to particular aspects of the workplace. They can be used as a starting point to which other questions may be added as experience in the domain and the method increases|
Coherence The Coherence method (Vi , 294 Chapter 9 User-centered approaches to interaction design Viewpoints and concerns Coherence builds upon the framework introduced above and provides a set of focus questions for each of the three dimensions, here called "viewpoints"| | In addition to viewpoints, Coherence has a set of concerns and associated questions. Concerns are a kind of goal, and they represent criteria that guide the requirements activity. These concerns are addressed within each appropriate viewpoint|
Coherence The Coherence method (Vi , 294 Chapter 9 User-centered approaches to interaction design Viewpoints and concerns Coherence builds upon the framework introduced above and provides a set of focus questions for each of the three dimensions, here called "viewpoints"| | One of the first tasks is to determine whether the concern is indeed relevant to the viewpoint. If it is relevant, then a set of elaboration questions is used to explore the concern further. The concerns, which have arisen from experience of using ethnography in systems design, are: 1. Paperwork and computer work. These are embodiments of plans and procedures, and at the same time are a mechanism for developing and sharing an awareness of work|
Coherence The Coherence method (Vi , 2. Skill and the use of local knowledge. This refers to the "workarounds" that are developed in organizations and are at the heart of how the real work gets done| | 2. Skill and the use of local knowledge. This refers to the "workarounds" that are developed in organizations and are at the heart of how the real work gets done|
Coherence The Coherence method (Vi , 2. Skill and the use of local knowledge. This refers to the "workarounds" that are developed in organizations and are at the heart of how the real work gets done| | Distributed coordination How is the division of labor manifest through the work of individuals and its coordination with others? How clear are the boundaries between one person's responsibilities and another's? What appreciation do people have of the work/tasks/roles of others? How is the work of individuals oriented towards the others? Plans and procedures How do plans and procedures function in the workplace? DO they always work? How do they fail? What happens when they fail? How, and in what situations, are they circumvented? Awareness of work How does the spatial organization of the workplace facilitate interaction between workers and with the objects they use? How do workers organize the space around them? Which artifacts that are kept to hand are likely to be important to the achievement of everyday work? What are the notes and lists that the workers regularly refer to? What are the location(s) of objects, who uses them, how often? Figure 9.1 Focus questions for the three viewpoints. |
Understanding users' work: applying  ,  | 9.4 Understanding users' work: applying ethnography in design 295 Paperwork and computer work How do forms and other artifacts on paper or screen act as embodiments of the process? To what extent do the paper and computer work make it clear to others what stage people are at in their work? How flexible is the technology at supporting the work process-is a particular process enforced, or are alternatives permitted? Skill and the use of local knowledge What are the everyday skills employed by individuals and teams in order to get the work done? How is local knowledge used and made available, e.g., through the use of personalized checklists, asking experts, etc.? To what extent have standard procedures been adapted to take local factors into account?  Spatial and temporal organization How does the spatial organization of the workplace reflect how the work is performed?  Which aspects of the work to be supported are time-dependent? Does any data have a "use-by-date"? How do workers make sure that they make use of the most up-to-date information? Organizational memory How do people learn and remember how to perform their work? How well do formal records match the reality of how work is done? Figure 9.2 Elaboration questions for the four concerns|
Understanding users' work: applying  , 3. Spatial and temporal organization. This concern looks at the physical layout of the workplace and areas where time is important| | 3. Spatial and temporal organization. This concern looks at the physical layout of the workplace and areas where time is important|
Understanding users' work: applying  , 4. Organizational memory. Formal documents are not the only way in which things are remembered within an organization. Individuals may keep their own records, or there may be local gurus| | 4. Organizational memory. Formal documents are not the only way in which things are remembered within an organization. Individuals may keep their own records, or there may be local gurus|
Understanding users' work: applying  , 4. Organizational memory. Formal documents are not the only way in which things are remembered within an organization. Individuals may keep their own records, or there may be local gurus| | The elaboration questions associated with these concerns are listed in Figure 9.2 and a sample social concern from the air traffic control domain, together with resultant requirements, is shown in Figure 9.3|
Contextual Design Contextual Desig ,  | 9.4.2 Contextual Design Contextual Design is another technique that was developed to handle the collection and interpretation of data from fieldwork with the intention of building a software-based product. It provides a structured approach to gathering and representing information from fieldwork such as ethnography, with the purpose |
Contextual Design Contextual Desig ,  | Paperwork and computer work Flight strips embody the process of an aircraft's progress through the sector of airspace controlled by a suite. As an aircraft approaches the sector, its strip is moved progressively to the bottom of the rack until it becomes the current strip for the controller to deal with|
Contextual Design Contextual Desig ,  | The work of the controller can therefore be viewed in terms of dealing with the flow of strips as aircraft enter, traverse, and leave the controller's sector|
Contextual Design Contextual Desig ,  | The collection of strips in various racks in a suite provide an 'at a glance' means of determining the current and future workload of a particular controller. The practice of 'cocking out' strips, i.e., raising them slightly in the racks, informs the controller that there is something non-standard about the flight concerned. This may be done by the assistant controller when inserting the strip, or by the controller as a reminder. Glancing at the strips provides a controller with an indication of their current and future workload, in the same way as it allows other controllers to see the relative loading on other sectors. This feature of the organization of the strips is used in particular at change over of shifts, where the incoming controller will spend up to 10 minutes looking over the shoulder of the out-going controller in order to 'get the picture' of the current state of the sector|
Contextual Design Contextual Desig ,  | Flight strips provide incredibly flexible support for the work of controllers. Different practices exist regarding whether strips are placed into the racks in a top to bottom se- quence or vice versa. All instructions given by controllers to pilots, and the pilots' acknowledgements, are recorded onto the relevant flight strip. These annotations are made using a standard set of symbols, and different coloured pens according to the annotator's role within the controlling team. In this way, flight strips constitute a record of a flight's progress through a sector|
Contextual Design Contextual Desig ,  | Requirement 1. The system shall support controllers 'getting the picture' by providing the ability to determine current and future load for a sector 'at a glance' Requirement 2. The system shall provide a facility to mark exceptional or non-standard flights requiring special attention Requirement 3. Annotations to flight records shall be recorded and presented in such a way that they identify the person who made them|
Contextual Design Contextual Desig , last: | Figure 9.3 Elaboration of paperwork and computer work|
Contextual Design Contextual Desig , last: | of feeding it into design. It has been used on a number of projects, e.g., see Box 9.5|
Contextual Design Contextual Desig ,  | Contextual Design has seven parts: Contextual Inquiry, Work Modeling, Consolidation, Work Redesign, User Environment Design, Mockup and Test with Customers, and Putting It into Practice. In this chapter we are focusing on understanding users' work, and so shall discuss only the first three steps. Step 4 involves changing work practices, which is outside our scope here. Step 5 produces a prototype that is used with customers, and the final step concerns the practicality of the working system. The activities involved in these last two steps have been discussed in general terms in Section 8.2|
Contextual Design Contextual Desig ,  | Contextual inquiry Contextual inquiry is an approach to ethnographic study used for design that follows an apprenticeship model: the designer works as an apprentice to the user. The |
Understanding users' work: applying  , last: | 9.4 Understanding users' work: applying ethnography in design 297 |
Understanding users' work: applying  , last: | I 298 Chapter 9 User-centered approaches to interaction design 1|
Understanding users' work: applying  ,  | most typical format for bontextual inquiry is a contextual interview, which is a combination of observatfbn, discussion, and reconstruction of past events. Contextual inquiry rests on four main principles: context, partnership, interpretation and focus|
Understanding users' work: applying  ,  | The context principle emphasizes the importance of going to the workplace and seeing what happens. The partnership principle states that the developer and the user should collaborate in understanding the work; in a traditional interviewing or workshop situation, !he interviewer or workshop leader is in control, but in contextual inquiry the spirit of partnership means that the understanding is developed through cooperation. |
Understanding users' work: applying  ,  | 9.4 Understanding users' work: applying ethnography in design 299 The interpretation principle says that the observations must be interpreted in order to be used in design, and this interpretation should also be developed in cooperation between the user and the developer. For example, I have a set of paper cards stuck on my screen at work. They are covered in notes; some list telephone numbers and some list commands for the software I use. Someone coming into my office might interpret these facts in a number of ways: that I don't have access to a telephone directory; that I don't have a user manual for my software; that I use the software infrequently; that the commands are particularly difficult to remember. The best way to interpret these facts is to discuss them with me. In fact, I do have a telephone directory, but I keep the numbers on a note to save me the trouble of looking them up in the directory. I also have a telephone with a memory, but it isn't clear to me how to put the numbers in memory, so I use the notes instead. The commands are there because I often forget them and waste time searching through menu structures|
Understanding users' work: applying  ,  | The fourth principle, the focus principle, was touched upon above in our discussion of ethnography and was also addressed in Coherence: how do you know what to look for? In contextual inquiry, it is important that the discussion remains pertinent for the design being developed. To this end, a project focus is established to guide the interviewer, which will then be augmented by the individual's own focus that arises from their perspective and background. The contextual inquiry interview differs from ethnographic studies in a number of ways: 1. It is much shorter than a typical ethnographic study. A contextual inquiry interview lasts about two or three hours, while an ethnographic study tends to be longer, probably weeks or months|
Understanding users' work: applying  , 2. The interview is much more intense and focused than an ethnographic study, which takes in a wide view of the environment| | 2. The interview is much more intense and focused than an ethnographic study, which takes in a wide view of the environment|
Understanding users' work: applying  , 3. In the interview, the designer is not taking on a role of participant observer, but is inquiring about the work. The designer is observing, and is questioning behavior, but is not participating| | 3. In the interview, the designer is not taking on a role of participant observer, but is inquiring about the work. The designer is observing, and is questioning behavior, but is not participating|
Understanding users' work: applying  , 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed| | 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed|
Understanding users' work: applying  , 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed| | How does the contextual inquiry interview compare with the interviews introduced in Chapter 7? Comment We introduced structured, unstructured, and semi-structured interviews in Chapter 7. Contextual inquiry could be viewed as an unstructured interview, but is more wide-ranging than this. The interviewer does not have a set list of questions to ask, and can be guided by the interviewee|
Understanding users' work: applying  , 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed| | Contextual inquiry, however, is to be conducted at the interviewee's place of work, while normal work continues. It incorporates other data-gathering techniques such as observation although other interviews too may be used in conjunction with other techniques|
Understanding users' work: applying  , 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed|last: | Normally, each team member conducts at least one contextual inquiry session|
Understanding users' work: applying  , 4. In the interview, the intention is to design a new system, but when conducting an ethnography, there is no particular agenda to be followed| | Data is collected in the form of notes and perhaps audio and video recording, but a lot of information is in the observer's head. It is important to review the experience |
Understanding users' work: applying  , 300 Chapter 9 User-centered approaches to interaction design and to start documenting the findings as soon as possible after the session. Contextual Design includes an interpretation session in which a number of models are generated (see below). Figures 9.5 to 9.8 show flow, sequence, cultural, and physical models focused around the system manager of an organization (Holtzblatt and Beyer, 1996)| | 300 Chapter 9 User-centered approaches to interaction design and to start documenting the findings as soon as possible after the session. Contextual Design includes an interpretation session in which a number of models are generated (see below). Figures 9.5 to 9.8 show flow, sequence, cultural, and physical models focused around the system manager of an organization (Holtzblatt and Beyer, 1996)|
Understanding users' work: applying  , 300 Chapter 9 User-centered approaches to interaction design and to start documenting the findings as soon as possible after the session. Contextual Design includes an interpretation session in which a number of models are generated (see below). Figures 9.5 to 9.8 show flow, sequence, cultural, and physical models focused around the system manager of an organization (Holtzblatt and Beyer, 1996)| | Work Modeling For customer-centered design, the$rsf task of a design team is to shift focus from the system that the team is chartered to build and redirect it to the work of potential customers. Work, and understanding work becomes the primary consideration. But "work" is a slippery concept. What is work? (Beyer and Holtzblatt, 1998, p. 81) Contextual design identifies five aspects to modeling "work," each of which guides the team to take a different perspective on what they have observed: The workflow model (Figure 9.5) represents the people involved in the work and the communication and coordination that takes place among them in order to achieve the work|
Understanding users' work: applying  , 300 Chapter 9 User-centered approaches to interaction design and to start documenting the findings as soon as possible after the session. Contextual Design includes an interpretation session in which a number of models are generated (see below). Figures 9.5 to 9.8 show flow, sequence, cultural, and physical models focused around the system manager of an organization (Holtzblatt and Beyer, 1996)|last: | Figure 9.5 An example work flow model. |
Understanding users' work: applying  ,  | 9.4 Understanding users' work: applying ethnography in design 301 I I I d U1: Move user to larger disk Intent: Give user more disk quota Trigger: User requests higher disk quota 4 Requests more quota of customer support 4 Customer support discovers there's no more room on the user's disk 4 Customer support calls U1 P Intent: Relocate user to a disk with more free space without losing any user data U1 looks for a scratch disk P Initializes and mounts scratch disk Creates user 4. d~rectory 8 Moves user's files to the new disk 8 Uses DIR to check that files are there 4 Call user to confirm the user agrees all files are there 4 User checks and confirms 4 Delete user files from the old disk 4 Send mail to system manager to add new disk to regular startup 4 System manager adds new disk 8 Done Figure 9.6 An example sequence model|
Understanding users' work: applying  ,  | The sequence model (Figure 9.6) shows the detailed work steps necessary to achieve a goal. Sequences are collected during the contextual interview, as the user works. However, understanding the steps alone is not sufficient, since although you may be able to streamline the steps themselves, if you do not understand the goals you may create a nonsensical work sequence. The sequence model also states the trigger for the set of steps|
Understanding users' work: applying  ,  | The artifact model represents the physical things created to do the work, such as the sticky notes at my desk, described above. The model consists of an annotated picture (or drawing) of each significant physical artifact used in achieving the work|
Understanding users' work: applying  ,  | The cultural model (Figure 9.7) represents constraints on the system caused by organizational culture. Organizations have cultures, teams build up their |
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain| | 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|last: | . I control your computer usage and disk space|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|last: | .You should care what the system IS doing even if you don't want to|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|last: | Take responsibility for your actions|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|last: | Our services cost you|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain|last: | Our services cost you|: Figure 9.7 An example cultural model|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain| | Our services cost you|: own culture, and work is performed in a cultural context. Culture influences the values and beliefs held by those taking part in the culture, and it determines rituals, expectations, and behavior. As a simple example, consider the dress codes for different situations in which you may find yourself. If you turn up at a baseball game in a three-piece suit, people will think you're a bit odd. On the other hand, if you turn up at a formal dinner in jeans and Tshirt, you will be refused entry. The cultural model aims to identify the main influencers on work, i.e., people or groups who constrain or affect work in some way|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain| | Our services cost you|: The physical model (Figure 9.8) shows the physical structure of the work. It may be a physical plan of the users' work environment, e.g., the office, or it may be a schematic of a communications network showing how components are linked together. The model captures the physical characteristics that constrain work and may make some work patterns infeasible|
Understanding users' work: applying  , 302 Chapter 9 User-centered approaches to interaction design I Raise problems through escalation chain| | Our services cost you|: The interpretation session The work models are captured during an interpretation session. The team has to build an agreed view of the customers, their work, and the system to be built. Each developer therefore has to communicate to all the others on the team everything learned from her own interviewing experiences. So, after a contextual inquiry interview has been conducted, the team comes together to produce one consolidated view of the users' work. |
Understanding users' work: applying  ,  | 9.4 Understanding users' work: applying ethnogmphy in design 303 Multiple inconsisten - tracking databases Can't keep configuration databases in sync if Figure 9.8 An example physical model|
Understanding users' work: applying  ,  | Certain roles need to be adopted by the participants of this session. The interviewer is the person who has conducted the interviews and whose models are being examined. He must describe to the team what happened and in what order. During this recounting, the other members of the team can question the interviewer for clarification and extra information. Work modelers draw the work models as they emerge from the description given by the interviewer. The recorder keeps notes of the interpretation session that provide a sequential record of the meeting. The rest of the team (participants) listen to the description, ask questions, suggest design ideas (which are noted and not discussed at this time), observe, and contribute to the building of the models. The moderator stage-manages the meeting, keeps discussions |
Understanding users' work: applying  ,  | I 304 Chapter 9 User-centered approaches to interaction design focused on the main issue, keeps the pace of the meeting brisk, encourages everyone to take part, and notes where in the story the interviewer was in case of interruptions|
Understanding users' work: applying  , last: | The rat-hole watcher steers the conversation away from any distractions|
Understanding users' work: applying  ,  | The output from this session is a set of models associated with the particular contextual inquiry interview. Each contextual inquiry interview generates its own set of models that is inevitably focused on the interviewee. These sets of models must be consolidated to gain a more general view of the work as described below|
Understanding users' work: applying  ,  | The thick lightning marks in the flow models represent points at which breakdowns in communication or coordination occur. Alongside each lightning bolt is a description of the cause for this breakdown. Study the flow model in Figure 9.5 and identify all the breakdowns and their causes|
Understanding users' work: applying  ,  | Cornmen t There are five breakdowns: (a) too many problem reports-many not real (b) the flow "problem logged directly to vendor" skips the formal process|
Understanding users' work: applying  ,  | (c) no status updates on ongoing problems (d) formal process takes too long (e) tries to sneak uncontrolled account Consolidating the models The affinity diagram (see Figure 9.9) aims to organize the individual notes captured in the interpretation sessions into a hierarchy showing common structures and themes|
Understanding users' work: applying  ,  | Notes are grouped together because they are similar in some fashion. The groups are not predefined, but must emerge from the data. The process was originally introduced into the software quality community from Japan, where it is regarded as one of the seven quality processes. The affinity diagram is constructed after a cross-section of users has been interviewed and the corresponding interpretation sessions completed|
Understanding users' work: applying  ,  | The affinity diagram is built by a process of induction. One note is put up first, and then the team searches for other notes that are related in some way|
Understanding users' work: applying  ,  | The models produced during the interpretation session need to be consolidated so as to get a more general model of the work, one that is valid across individuals|
Understanding users' work: applying  ,  | The primary aim in consolidating flow models is to identify key roles. Any one individual may take on more than one role, and so it is necessary to identify and compare roles across and among individuals. For example, two different people may take on the role of quality assessor in different departments, and one of these may also be a production manager. To do this, the individuals' responsibilities are listed and a group of them that all lead towards one goal is identified. This goal and its set of responsibilities represents one role. Like the affinity diagram, this activity is concerned with grouping elements together along theme lines. Sometimes individuals use different names for the same role. The artifacts and communications among people need to be consolidated, too, in terms of flows between roles. |
Understanding users' work: applying  ,  | lndividual point captured during interpretation lndividual point captured during interpretation lndividual point captured during interpretation 9.4 understanding users' work: applying ethnography in design 305 lndividual point lndividual point captured during captured during white interoretation I I inter~retation 1 lndividual point I 1 lndividual point I captured during captured during interpretation I I interpretation lndividual point captured during interpretation lndividual point captured during interpretation Figure 9.9 The structure of an affinity diagram|
Understanding users' work: applying  ,  | Consolidated sequence models show the structure of a task and common strategies. The consolidated sequence model allows the team to identify what really needs to happen to accomplish the work, and hence what needs to be supported|
Understanding users' work: applying  ,  | Artifact models show how people organize and structure their work, so a consolidated model shows common approaches to this across different people. The sequence models show the steps in the task, while the artifact model shows what is manipulated in order to achieve the task|
Understanding users' work: applying  ,  | Physical space also has commonalities. For example, most companies have an entrance lobby with a receptionist or security guard, then beyond that personal offices and meeting rooms. Within one organization, even if it is distributed across different buildings, there is commonality of physical structure and hence constraints under which the work must be accomplished|
Understanding users' work: applying  ,  | The cultural models help in identifying what matters to people who are doing the work. The cultural model identifies the influencers, so a consolidated model shows the set of common influencers within the organization. |
Understanding users' work: applying  ,  | I 306 Chapter 9 User-centered approaches to interaction design All together, the consolidated models help designers to understand the users' intent, strategy to achieve that intent, structures to support the strategy, concepts to help manage and think about work, and the users' mind set|
Understanding users' work: applying  ,  | I The Design Room An important element of Contextual Design is the design room, where all the work models are kept, pinned to the wall. The room is an environment that contains everything the team knows about the customer and their work. Design discussions held in the room can refer to data collected at the beginning of the project, and this can be used to support design ideas and decisions. This physical space in which the team is surrounded by the data is a key element of Contextual Design|
Understanding users' work: applying  ,  | Contextual Design has been used successfully in a variety of situations from cell phone design (see Chapter 15) to qffice products (see Box 9.5). Its strength lies in the fact that it provides a clear route from observing users through to interpreting and structuring the data, prototyping and feeding the results into product development|
Understanding users' work: applying  ,  | This systematic approach mean& that, with suitable training, interaction designers can perform the observations and subsequent interpretation themselves, thus avoidiqg some of the misunderstandings that can happen if observations are conducted by others. Contextual Design is discussed further in the interview with Karen Holtzblatt at the end of this chapter|
Involving users in design: Participa ,  | 9.5 Involving users in design: Participatory Design Another approach to involving users is Participatory Design. In contrast to Contextual Design, users are actively involved in development. The intention is that they become an equal partner in the design team, and they design the product in cooperation with the designers|
Involving users in design: Participa ,  | The idea of participatory design emerged in Scandinavia in the late 1960s and early 1970q: There were two influences on this early work: the desire to be able to communicate information about complex systems, and the labor union movement pushing for workers to have democratic control over changes in their work. In the 1970s, new laws gave workers the right to have a say in how their working environment was changed, and such laws are still in force today. A fuller history of the movement is given in Ehn (1989) and Nygaard (1990)|
Involving users in design: Participa ,  | Several projects at this time attempted to involve users in design and tried to focus on work rather than on simply producing a product. One of the most discussed is the UTOPIA project, a cooperative effort between the Nordic Graphics Workers Union and research institutions in Denmark and Sweden to design computer-based tools for text and image processing|
Involving users in design: Participa ,  | Involving users in design decisions is not simple, however. Cultural differences can become acute when users and designers are asked to work tqgether to produce a specification for a system. Bardker et al. (1991) recount the'following scene from the UTOPIA project: Late one afternoon, when the designers were almost through with a long presentation of a proposal for the user interface of an integrated text and image processing system, one of the typographers commented on the lack of information about typographical code- |
Involving users in design: Participa ,  | 9.5 Involving users in design: Participatory Design 307 sort ma chi^ rno~k-rrp. The headline reads: "We didnotwrders& cutting showing a parcelthe blurprinrs, so we mat& our own mock-ups." sorting machine mockup|
Involving users in design: Participa ,  | structure. He didn't think that it was a big error (he was a polite person), but he just wanted to point out that the computer scientists who had prepared the proposal had forgotten to specify how the codes were to be presented on the screen. Would it read "<bf/" or perhaps just 'Zb" when the text that followed was to be printed in boldface? In fact, the system being described by the designers was a WYSIWYG (what you see is what you get) system, and so text that needed to be in bold typeface would appear as bold (although most typographic systems at that time did require such codes). The typographer was unable to link his knowledge and experience with what he was being told. In response to this kind of problem, the project started using mockups (introduced in Chapter 8). Simulating the working situation helped workers to draw on their experience and tacit knowledge, and designers to get a better understanding of the actual work typographers needed to do. An example mockup for a computer-controlled parcel-sorting system, from another project, is shown in Figure 9.10 (Ehn and Kyng, 1991). The headline of this newspaper clipping reads, "We did not understand the blueprints, so we made our own mockups"|
Involving users in design: Participa ,  | Mockups are one way to make effective use of the users' experience and knowledge. Other paper-based prototyping techniques that have been developed for participatory design are PICTIVE (Muller, 1991) and CARD (Tudor, 1993)|
Involving users in design: Participa ,  | PICTIVE (Plastic Interface for Collaborative Technology Initiatives through Video Exploration) uses low-fidelity office items, such as sticky notes and pens, and a collection of design objects to investigate specific screen and window layouts for a system. The motives for developing the techniques were to: empower users to act as full participants in the design process improve knowledge acquisition for design |
Involving users in design: Participa ,  | I 308 Chapter 9 User-centered approaches to interaction design A PICTIVE session may involve one-on-one collaboration or it may involve a small group. To perform a PICTIVE session you need video recording equipment, simple office supplies such as pens, pencils, paper, sticky notes, cards, etc., and some design components prepared by the design team such as dialog boxes, menu bars, and icons. These plastic design components may be generic or they may be specific to the system being developed, based on the development so far. The shared design surface is where the design will be created, jointly between the designers and the users, by manipulating and changing the design components and using the office supplies to create new elements. The video equipment records what happens on the shared design surface. Sample design objects and the layout for a PICTIVE session are shown in Figure 9.11 (Muller, 1991)|
Involving users in design: Participa ,  | Before a session, each participant is asked to prepare a "homework assignment." Typically, users are asked to generate scenarios of use for the system, illustrating what they would like the system to do for them (along the lines of the scenarios we discussed in Chapter 7). Developers are asked to develop a set of system components that they think may be relevant to the system. These may be generic elements that will be used in many design exercises, they may be specifically for the system under discussion, or a combination of these|
Involving users in design: Participa , last: | The design session itself is divided roughly into four parts (Muller et al., 1995)|
Involving users in design: Participa ,  | First of all, the stakeholders all introduce themselves, specifically describing their personal and/or organizational stake in the project. Then there may be some brief tutorials about the different domains represented at the meeting. The third part of the meeting concentrates on brainstorming the designs, using the design objects and the homework assignments. The design objects are manipulated during the session to produce a synthesis of each participant's view. The scenarios developed by the users may help provide concrete detail about the work flow of the design. The final session is a walkthrough of the design and the decisions discussed. The role of the video recording is mainly that of record-keeper, so that there is a complete and informal record of the design decisions made and how they were made|
Involving users in design: Participa ,  | post-ltTM Notes Plastic "Icons" ImlB Shared Design Surface Pop-up Events Labels (data fields) A A 4 VW'W'~" ' '83 Colored Pens Figure 9.1 1 PICTIVE design objects and PICTIVE setting. |
Involving users in design: Participa ,  | 9.5 Involving users in design: Participatory Design 309 Describe a set of design components you would develop for a PICTIVE session for the shared calendar application discussed in Chapter 8|
Involving users in design: Participa ,  | Comment From our earlier design activities, we know that having dialog boxes and icons for arranging a meeting would be appropriate. Also, different mechanisms for specifying the people to attend the meeting and for choosing dates, e.g., drop-down lists, free text entry, or plannerstyle date display. These components could be based on our preliminary designs. We will also need a menu bar and associated menu lists, calendar page display, and function button components. It would also be important to have some blank components that could be completed during the brainstorming session|
CARD CARD (Collaborative Analysis  ,  | 9.5.2 CARD CARD (Collaborative Analysis of Requirements and Design) is similar to PICTIVE, but uses playing cards with pictures of computers and screen dumps on them to explore workflow options (see Figure 9.12 for an example set of cards Figure 9.12 Example of CARD. |
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)|last: | A CARD session could have the same format as that described for PICTIVE|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | During the design brainstorming part of the session, the playing cards are manipulated by the participants in order to show the work flow between computer screens or task decision points. The example in Figure 9.12 shows how the task of buying groceries through a computer screen such as via the Internet can be represented by Table 9.1 A comparison of techniques introduced in this chapter Participatory EthJWra~h~ Coherence Contextual Design Design2 Active user Low level Low level Medium to low Equal partners, users involvement level can be very influential Role of Uncover findings Collect and present Steer discussion Equal partners with designer1 about work ethnographic data users researcher according to the Interpret findings viewpoints and concerns Length of Typically continuous NIA study and extensive|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | A series of 2-hour A series of Zhour interviews design sessions Benefits Yields a good Overcomes the Systematic Users' sense of understanding of problem of ownership is increased the work representing Is designed to feed ethnographic data into the design User contact is for design process beneficial for designers Drawbacks Requires expertise Coverage limited Involves many Users' thinking can to presenting diagrams and be constrained by Difficulties ethnographic data notations what they know translating findings into design Limited support May be complicated If users are involved currently for for users to under- too much they get Requires a long progressing to stand the output bored and it becomes lead-in time design counter-productive When to use Most settings where If an ethnographic When a user- Whenever users are there is sufficient study for interaction centered focus is available and willing time and expertise design is to be required to become actively conducted (by involved in design ethnographer or Particularly useful designer) for innovative product design *The main difference between CARD and PICTIVE lies in the level of detail at which design takes place. For the purpose of this comparison, they can be considered under the common title of Participatory Design. |
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | Summary 31 1 playing cards. Note that the cards can be used to represent users' goals or intentions as well as specific computer screens or task elements. Participants can easily create new cards during the session as deemed appropriate|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | CARD can be used to complement PICTIVE as it provides a different granularity of focus. Muller et al. (1995) characterized this as a bifocal view, CARD giving a macroscopic view, and PICTIVE the microscopic|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | At the beginning of this chapter, we explained that there are different levels of user involvement, from newsletters and workshops through to full-time membership of the design team. Each project will need to decide on the level of user involvement required. To support this involvement, a project may also choose to use one or a combination of the techniques introduced in Sections 9.4 and 9.5. For example, Contextual Design could be used even if one of the users is a member of the design team; an ethnographic study might be running alongside a series of user workshops. These techniques expand the level of user involvement. However, each approach has advantages and disadvantages, and Table 9.1 provides a brief comparison between the main techniques introduced in this chapter|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | Assignment This assignment asks you to apply some elements of Coherence and Contextual Design to your own work or home circumstances|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | (a) Using the questions for elaborating the viewpoints and concerns in Coherence, study the environment of your workplace, university library or somewhere similar that you know. Begin by deciding which concerns are relevant to each viewpoint, e.g., ask, "Are there paper artifacts used in the workplace?" or "Is local knowledge used?" Then answer the questions of elaboration for the three viewpoints and the four concerns|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | Study your answers to the questions and see if you can identify priorities or constraints within the organization that you were not aware of before|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | (b) Again using your workplace or similar location, attempt to draw the five Contextual Design work models introduced in Section 9.4.3|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | First of all, identify a key player in the workplace. This may be one of the librarians, a clerk or secretary, or a manager. If possible, run a contextual inquiry interview by sitting with her while working and asking her to tell you about one major aspect of work. If this is not possible, then identify one of the main tasks that is visible to you, such as the librarian issuing books, and sit and watch how the task is performed|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | Draw the models from the information you have collected. If you find that you need more data, go back and collect more. Once you feel that the models are complete, take them back to the person you interviewed (if possible) and ask for comments|
CARD CARD (Collaborative Analysis  , 31 0 Chapter 9 User-centered approaches to interaction design (Muller et al., 1995)). Whereas PICTIVE concentrates on detailed aspects of the system, CARD takes a more macroscopic view of the task flow. CARD is a form of storyboarding (see Chapter 8)| | Summary This chapter has elaborated on some issues surrounding the involvement of users in the design process. We have also introduced the method of ethnography as a useful source of information for a user-centered design process. One of the main disadvantages to using ethnography is finding a way to represent the output of the study so that it can be fed into |
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Users may be involved passively or they may be more actively involved in making design decisions. Participatory design is an approach in which users are co-designers. We have described two techniques (PICTIVE and CARD) that have helped users' input to be more effective|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Key Points Involving users in the design process helps with expectation management and feelings of ownership, but how and when to involve users is a matter of dispute|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Putting a user-centered approach into practice requires much information about the users to be gathered and interpreted|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem|last: | Ethnography is a good method for studying users in their natural surroundings|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Representing the information gleaned from an ethnographic study so that it can be used in design has been problematic|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | The goals of ethnography are to study the details, while the goals of system design are to produce abstractions; hence they are not immediately compatible|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Coherence is a method that provides focus questions to help guide the ethnographer towards issues that have proved to be important in systems development|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Contextual Design is a method that provides models and techniques for gathering contextual data and representing it in a form suitable for practical design|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | PICTIVE and CARD are both participatory design techniques that empower users to take an active part in design decisions|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Further reading GREENBAUM, JOAN, AND KYNG, MORTEN (eds.) (1991) De- in a rapidly changing world, to develop and ship products sign at Work: Co-operative Design of Computer Systems. that appeal to mass markets, and to continually build on and Hillsdale, NJ: Lawrence Erlbaum. This book is a good col- improve market position. - lection of papers about the co-design of software systems: both why it is worthwhile and experience of how to do it. WIXON, DENNIS, AND RAMEY, JUDITH (eds.) (1996) Field Methods Casebook for Software Design. New York: John BEYER, HUGH AND HOLTZBJ-ATT, KAREN (1998) Contextual Wiley & Sons, Inc. This book is a collection of papers about Design-' D&% Cmtomer-Centered Systems. Sari Francisco: practical use of field research methods in software design, Morgan Kaufmann. This book will tell You more about contex- some of which are directly mentioned in the present chapter|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | tual design and the rationale behind the Steps and the models. three main approaches that these papers cover are - - CUSUMANO, M.A., AND SELBY, R. W. (1995) Microsoft Se- ethnography, participative design, and contextual design|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | crets. London: Harper-Collins Business. This is a fascinating There are 14 chapters describing case studies and three book based on a two-and-a-half-year study of Microsoft and chapters giving an overview of the main methods. For anyhow they build software. The book details findings about one interested in the practical use of these methods in softstrategies to manage an innovative organization competing ware development, it's a fascinating read! |
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Interview 3 1 3 INTERVIEW with Karen Holtzblatt Karen Holtzblatt is the origi- the physical environment, task, and artifact. We also nator of Contextual Inquiry, capture individual points on post-it notes. After the a process for field interpretation session, every person we interviewed data on product which has a set of models and a set of post-its. Our next step was the precursor to Con- is to consolidate all that data because you don't want textual a complek to be designing from one person, from yourself, or method for the design Of from any one interview; we need to look at the struc- systems. Together with : Hugh Beyer, the codevel- ture of the practice itself. The consolidation step ' oper of~ontextual ~~~i~~, means that we end up with an affinity diagram and Karen Holtzblatt is co- five consolidated models showing the issues across the founder of Incontext Enter- market|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | prises, which specializes in process and product design At that point, we have modeled the work pracconsulting|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | tice as it is and we have now six communication devices that the team can dialog with. Each one of them HS: What is Contextual Design? poses a point of view on which to have the conversaKH: If you're going to build something that people want, there are basically three large steps that you have to go through. The first question that you ask as a company is, "What in the world matters to the customer such that if we make something, they're likely to buy it?" So the question is "What matters?" Now once you identify what the issues are, every corporation will have the corporate response, or "vision." Then you have to work out the details and structure it into a product. In any design process, whether it's formalized or not, every company must do those things|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | They have to find out what matters, they have to vision their corporate response, and then they have to structure it into a system|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | Contextual Design gives you team and individual activities that bring you through those processes in an orderly fashion so as to bring the cross-functions of an organization together. So you could say that Contextual Design is a set of techniques to be used in a customercentered design process with design teams. It is also a set of practices that help people engage in creative and productive design thinking with customer data and it helps them co-operate and design together|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | HS: What are the steps of Contextual Design? KH: In the "what matters" piece, we go out into the field, we talk with people about their work as they do it: that's Contextual Inquiry and that's a one-on-one, two to two-and-a-half-hour field interview. Then we interpret that data with a cross-functional team, and we model the work with five work models: communication and coordination, the cultural environment, tion "what matters?" Now the team moves into that second piece, which is "what should our corporate response be?" We have a visioning process that is a very large group story-telling about reinventing work practice given technological possibility and the core competency of the organization. And after that, we develop storyboards driven by the consolidated data and the vision. At this point we have not done a systems design; we want to design the work practice first, seeing the technology as it will appear within the work|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | To structure the system we start by rolling the storyboards into a user environment design-the structure of the system itself, independent of the user interface and the object model. The user environment design operates like a software floor plan that structures the movement inside the product. This is used to drive the user interface design, which is mocked up in paper and tested and iterated with the user. When it has stabilized, the User Environment design, the storyboards, and the user interface drive development of the object model|
CARD CARD (Collaborative Analysis  , 3 12 Chapter 9 User-centered approaches to interaction design the design process. We have described two approaches to design (Coherence and Contextual Design) that were derived from ethnography and other approaches, to address this problem| | This is the whole process of Contextual Design, a full front-end design process. Because it is done with a cross-functional team, everyone in the organization knows what they're doing at each point: they know how to select the data, they know how to work in groups to get all these different steps done. So not only do you end up with a set of design thinking techniques that help you to design, you have an organizational process that helps the organization actually do it. |
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | Also at that time, Pelle Ehn and Kim Madsen were talking about Morten Kyng's ideas on paper mockups and I added paper prototyping with post-its to check out the design. Hugh and I hooked up 13 years ago. He's a software and object-oriented developer|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | We started working with teams and we noticed that they didn't know how to go from the data to the design and they didn't know how to structure the system to think about it. So then we invented more of the work models and the user environment design|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | So the Contextual Design method came from looking at the practice; we evolved every single step of this process based on what people needed. The whole process was worked out with real people doing real design in real companies. So, where did it come from? It came from dialog with the problem|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | HS: What are the main problems that organizations face when putting Contextual Design into practice? KH: The question is, "What does organizational change look like?" because that's what we're talking about. The problem is that people want to change and they don't want to change. What we communicate to people is that organizational change is piecemeal|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | In order to own a process you have to say what's wrong with it, you have to change it a little bit, you have to say how whoever invented the process is wrong and how the people in the organization want to fix it, you have to make it fit with your organizational culture and issues. Most people will adopt the field-data gathering first and that's all they'll do and they'll tell me that they don't have time for anything else and they don't need anything else, and that's fine. And then they'll wake up one day and they'll say, "We have all this qualitative stuff and nobody's using it . . . maybe we should have a debriefing session." So then they have debriefing sessions. Then they wake up later on and they say, "We don't have any way of structuring this information . . . models are a good idea." And basically they reconstruct the whole process as they hit the next problem|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | Now it's not quite that clean, but my point is that organizational adoption is about people making it their own and taking on the parts, changing them, doing what they can. You have to get somebody to do something and then once they do something it snowballs|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | What's nice about the Contextual Design way of doing everything on paper is that it creates a design room, the design room creates a talk event, and the talk event pulls everyone in because they want to I know what you're doing. Then if they like the data, , they feel left out, and because they feel left out they want to do a project and they want to have a room for I themselves as well|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | The biggest complaint about Contextual Design is that it takes too long. Some of that is about time, some of it is about thought. You have people who are used to coding and now have to think about field data. They're not used to that|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | HS: What's the future direction of Contextual Design? M: Every process can always be tweaked. I think the primary parts of Contextual Design are there|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | There are interesting directions in which it can go, but there's only so much we can get our audience to buy|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | I think that for us there are two key things that we're doing. One is we're starting to talk about design and what design is, so we can talk about the role of design in design thinking. And we are still helping train everyone who wants to learn. But the other thing we're finding is that sometimes the best way to support the client is to do the design work for them|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|last: | So we have the design wing of the business where we put together the contextual design teams|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | We're working with distributed teams, we're working with creativity and invention, we're working with how it impacts with business processes and marketing, we're working with the balance of all those things. But it's only going to be in the context of a |
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | Interview 3 1 5 team that's actually very advanced in the standard tual Design is a scaffolding, they can plug other process that new process inventions will occur. Out of processes into it. They take their usability testing and that will come lessons that can then be put back into they can plug it here, if they have their special creativthe standard contextual design. For most organiza- ity thing they can plug it here; if they have a focus tions looking to adopt a customer-centered design group they can plug it here. But most people haven't process, the standard contextual design is enough for got a backbone for design, and Contextual Design is a now, they have to get started. And because Contex- good backbone to start with. |
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | Chapter I O Introducing evaluation 10.1 Introduction 10.2 What, why, and when to evaluate 10.2.1 What to evaluate 10.2.2 Why you need to evaluate 10.2.3 When to evaluate 10.3 Hutchworld case study 10.3.1 How the team got started: Early design ideas 10.3.2 How was the testing done? 10.3.3 Was it tested again? 10.3.4 Looking to the future 10.4 Discussion 1 0.1 Introduction Recently I met two web designers who, proud of their newest site, looked at me in astonishment when I asked if they had tested it with users. "No," they said "but we know it's OK." So, I probed further and discovered that they had asked the "web whiz-kids" in their company to look at it. These guys, I was told, knew all the tricks of web design|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | The web's presence has heightened awareness about usability, but unfortunately this reaction is all too common. Designers assume that if they and their colleagues can use the software and find it attractive, others will too. Furthermore, they prefer to avoid doing evaluation because it adds development time and costs money. So why is evaluation important? Because without evaluation, designers cannot be sure that their software is usable and is what users want. But what do we mean by evaluation? There are many definitions and many different evaluation techniques, some of which involve users directly, while others call indirectly on an understanding of users' needs and psychology. In this book we define evaluation as the process of systematically collecting data that informs us about what it is like for a particular user or group of users to use a product for a particular task in a certain type of environment|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | As you read in Chapter 9, the basic premise of user-centered design is that users' needs are taken into account throughout design and development. This is achieved by evaluating the design at various stages as it develops and by amending |
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | I 3 1 8 Chapter I O Introducing evaluation it to suit users7 needs (Gould and Lewis, 1985). The design, therefore, progresses in iterative cycles of design-evaluate redesign. Being an effective interaction designer requires knowing how to evaluate different kinds of systems at different stages of development. Furthermore, developing systems in this way usually turns out to be less expensive than fixing problems that are discovered after the systems have been shipped to customers (Karat, 1993). Studies also suggest that the business case for using systems with good usability is compelling (Dumas and Redish, 1999; Mayhew, 1999): thousands of dollars can be saved|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | Many techniques are available for supporting design and evaluation. Chapter 9 discussed techniques for involving users in design and part of this involvement comes through evaluation. In this and the next four chapters you will learn how different techniques are used at different stages of design to examine different aspects of the design. You will also meet some of the same techniques that are used for gathering user requirements, but this time used to collect data to evaluate the design|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|last: | Another aim is to show you how to do evaluation|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | This chapter begins by discussing what evaluation is, why evaluation is important, and when to use different evaluation techniques and approaches. Then a case study is presented about the evaluation techniques used by Microsoft researchers and the Fred Hutchinson Cancer Research Center in developing HutchWorld (Cheng et al., 2000), a virtual world to support cancer patients, their families, and friends. This case study is chosen because it illustrates how a range of techniques is used during the development of a new product. It introduces some of the practical problems that evaluators encounter and shows how iterative product development is informed by a series of evaluation studies. The HutchWorld study also lays the foundation for the evaluation framework that is discussed in Chapter 11|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea| | The main aims of this chapter are to: Explain the key concepts and terms used to discuss evaluation|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|last: | Discuss and critique the HutchWorld case study|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|last: | Examine how different techniques are used at different stages in the development of HutchWorld|
CARD CARD (Collaborative Analysis  , 31 4 Chapter 9 User-centered approaches to interaction design HS: How did the idea of contextual design emerge? KH. Contextual Design started with the invention of Contextual Inquiry in a post-doctoral internship with John Whiteside at Digital. At the time, usability testing and usability issues had been around maybe eight years or so and he was asking the question, "Usability identifies about 10 to 20% of the fixes at the tail end of the process to make the frosting on the cake look a little better to the user. What would it take to really infuse usability?" Contextual Inquiry was my answer to that question. After that, I took a job with Lou Cohen's Quality group at DEC, where I picked up the affinity diagram idea|last: | Show how developers cope with real-world constraints in the development of HutchWorld|
What, why, and when to evaluate Use ,  | 10.2 What, why, and when to evaluate Users want systems that are easy to learn and to use as well as effective, efficient, safe, and satisfying. Being entertaining, attractive, and challenging, etc. is also essential for some products. So, knowing what to evaluate, why it is important, and when to evaluate are key skills for interaction designers|
What to evaluate There is a huge  ,  | 10.2.1 What to evaluate There is a huge variety of interactive products with a vast array of features that need to be evaluated. Some features, such as the sequence of links to be followed to find an item on a website, are often best evaluated in a laboratory, since such a |
What, why, and when to evaluate 31  ,  | 10.2 What, why, and when to evaluate 31 9 setting allows the evaluators to control what they want to investigate. Other aspects, such as whether a collaborative toy is robust and whether children enjoy interacting with it, are better evaluated in natural settings, so that evaluators can see what children do when left to their own devices|
What, why, and when to evaluate 31  ,  | You may remember from Chapters 2, 6 and 9 that John Gould and his colleagues (Gould et al., 1990; Gould and Lewis, 1985) recommended three similar principles for developing the 1984 Olympic Message System: focus on users and their tasks observe, measure, and analyze their performance with the system design iteratively Box 10.1 takes up the evaluation part of the 1984 Olympic Messaging System story and lists the many evaluation techniques used to examine different parts of the OMS during its development. Each technique supported Gould et al.'s three principles|
What, why, and when to evaluate 31  , last: | Since the OMS study, a number of new evaluation techniques have been developed|
What, why, and when to evaluate 31  ,  | There has also been a growing trend towards observing how people interact with the system in their work, home, and other settings, the goal being to obtain a better understanding of how the product is (or will be) used in its intended setting|
What, why, and when to evaluate 31  ,  | For example, at work people are frequently being interrupted by phone calls, others knocking at their door, email arriving, and so on-to the extent that many tasks are interrupt-driven. Only rarely does someone carry a task out from beginning to end without stopping to do something else. Hence the way people carry out an activity (e.g., preparing a report) in the real world is very different from how it may be observed in a laboratory. Furthermore, this observation has implications for the way products should be designed|
Why you need to evaluate Just as  ,  | 10.2.2 Why you need to evaluate Just as designers shouldn't assume that everyone is like them, they also shouldn't presume that following design guidelines guarantees good usability, Evaluation is needed to check that users can use the product and like it. Furthermore, nowadays users look for much more than just a usable system, as the Nielsen Norman Group, a usability consultancy company, point out (www.nngroup.com): "User experience" encompasses all aspects of the end-user's interaction . . . the first requirement for an exemplary user experience is to meet the exact needs of the customer, without fuss or bother. Next comes simplicity and elegance that produce products that are a joy to own, a joy to use." Bruce Tognazzini, another successful usability consultant, comments (www.asktog.com) that: "Iterative design, with its repeating cycle of design and testing, is the only validated methodology in existence that will consistently produce successful results. If you don't have user-testing as an integral part of your design process you are going to throw buckets ofmoney down the drain." |
Why you need to evaluate Just as  , last: | - 320 Chapter 10 Introducing evaluation |
What, why, and when to evaluate 321 ,  | 10.2 What, why, and when to evaluate 321 Tognazzini points out that there are five good reasons for investing in user testing: 1. Problems are fixed before the product is shipped, not after|
What, why, and when to evaluate 321 , 2. The team can concentrate on real problems, not imaginary ones|last: | 2. The team can concentrate on real problems, not imaginary ones|
What, why, and when to evaluate 321 , 3. Engineers code instead of debating|last: | 3. Engineers code instead of debating|
What, why, and when to evaluate 321 , 4. Time to market is sharply reduced|last: | 4. Time to market is sharply reduced|
What, why, and when to evaluate 321 , 5. Finally, upon first release, your sales department has a rock-solid design it can sell without having to pepper their pitches with how it will all actually work in release 1.1 or 2.0| | 5. Finally, upon first release, your sales department has a rock-solid design it can sell without having to pepper their pitches with how it will all actually work in release 1.1 or 2.0|
What, why, and when to evaluate 321 , 5. Finally, upon first release, your sales department has a rock-solid design it can sell without having to pepper their pitches with how it will all actually work in release 1.1 or 2.0| | Now that there is a diversity of interactive products, it is not surprising that the range of features to be evaluated is very broad. For example, developers of a new web browser may want to know if users find items faster with their product. Government authorities may ask if a computerized system for controlling traffic lights |
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | This diversity of interactive products, coupled with new user expectations, poses interesting challenges for evaluators, who, armed with many well tried and tested techniques, must now adapt them and develop new ones. As well as usability, user experience goals can be extremely important for a product's success, as discussed in Chapter 1|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | Think of examples of the following systems and write down the usability and user experience features that are important for the success of each: (a) a word processor (b) a cell phone (c) a website that sells clothes (d) an online patient support community Comment (a) It must be as easy as possible for the intended users to learn and to use and it must be satisfying. Note, that wrapped into this are characteristics such as consistency, reliability, predictability, etc., that are necessary for ease of use|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | (b) A cell phone must also have all the above characteristics; in addition, the physical design (e.g., color, shape, size, position of keys, etc.) must be usable and attractive (e.g., pleasing feel, shape, and color)|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | (c) A website that sells clothes needs to have the basic usability features too. In particular, navigation through the system needs to be straightforward and well supported|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | You may have noticed, for example, that some sites always show a site map to indicate where you are. This is an important part of being easy to use. So at a deeper level you can see that the meaning of "easy to use and to learn" is different for different systems. In addition, the website must be attractive, with good graphics of the clothes-who would want to buy clothes they can't see or that look unattractive? Trust is also a big issue in online shopping, so a well-designed procedure for taking customer credit card details is essential: it must not only be clear but must take into account the need to provide feedback that engenders trust|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | (d) An online patient support group must support the exchange of factual and emotional information. So as well as the standard usability features, it needs to enable patients to express emotions either publicly or privately, using emoticons. Some 3D environments enable users to show themselves on the screen as avatars that can jump, wave, look happy or sad, move close to another person, or move away. Designers have to identify the types of social interactions that users want to express (i.e., sociability) and then find ways to support them (Preece, 2000)|
What, why, and when to evaluate 321 , 322 Chapter 1 O Introducing evaluation results in fewer accidents. Makers of a toy may ask if six-year-olds can manipulate the controls and whether they are engaged by its furry case and pixie face. A company that develops the casing for cell phones may ask if the shape, size, and color of the case is appealing to teenagers. A new dotcom company may want to assess market reaction to its new home page design| | From this selection of examples, you can see that success of some interactive products depends on much more than just usability. Aesthetic, emotional, engaging, and motivating qualities are important too. |
What, why, and when to evaluate 323 ,  | 10.2 What, why, and when to evaluate 323 Usability testing involves measuring the performance of typical users on typical tasks. In addition, satisfaction can be evaluated through questionnaires and interviews|
What, why, and when to evaluate 323 ,  | As mentioned in Chapter 1, there has been a growing trend towards developing ways of evaluating the more subjective user-experience goals, like emotionally satisfying, motivating, fun to use, etc|
When to evaluate The product bein ,  | 10.2.3 When to evaluate The product being developed may be a brand-new product or an upgrade of an existing product. If the product is new, then considerable time is usually invested in market research. Designers often support this process by developing mockups of the potential product that are used to elicit reactions from potential users. As well as helping to assess market need, this activity contributes to understanding users' needs and early requirements. As we said in Chapter 8, sketches, screen mockups, and other low-fidelity prototyping techniques are used to represent design ideas. Many of these same techniques are used to elicit users' opinions in evaluation (e.g., questionnaires and interviews), but the purpose and focus of evaluation is different. The goal of evaluation is to assess how well a design fulfills users' needs and whether users like it|
When to evaluate The product bein ,  | In the case of an upgrade, there is limited scope for change and attention is focused on improving the overall product. This type of design is well suited to usability engineering in which evaluations compare user performance and attitudes with those for previous versions. Some products, such as office systems, go through many versions, and successful products may reach double-digit version numbers. In contrast, new products do not have previous versions and there may be nothing comparable on the market, so more radical changes are possible if evaluation results indicate a problem|
When to evaluate The product bein ,  | Evaluations done during design to check that the product continues to meet users' needs are know as formative evaluations. Evaluations that are done to assess the success of a finished product, such as those to satisfy a sponsoring agency or to check that a standard is being upheld, are know as summative evaluation. Agencies such as National Institute of Standards and Technology (NIST) in the USA, the International Standards Organization (ISO) and the British Standards Institute (BSI) set standards by which products produced by others are evaluated|
When to evaluate The product bein ,  | Re-read the discussion of the 1984 Olympic Messaging System (OMS) in Box 10.1 and briefly describe some of the things that were evaluated, why it was necessary to do the evaluations, and when the evaluations were done|
When to evaluate The product bein ,  | Comment Because the Olympic Games is such a high-profile event and IBM's reputation was at stake, the OMS was intensively evaluated throughout its development. We're told that early evaluations included obtaining feedback from Olympic officials with scenarios that used printed screens and tests of the user guides with Olympians, their friends, and family. Early evaluations of simulations were done to test the usability of the human-computer dialog. These were done first in the US and then with people outside of the US. Later on, more formal tests investigated how well 100 participants could interact with the system. The system's robustness was also |
When to evaluate The product bein , 324 Chapter 10 Introducing evaluation tested when used by many users simultaneously. Finally, tests were done with users from minority cultural groups to check that they could understand how to use the OMS| | 324 Chapter 10 Introducing evaluation tested when used by many users simultaneously. Finally, tests were done with users from minority cultural groups to check that they could understand how to use the OMS|
When to evaluate The product bein , 324 Chapter 10 Introducing evaluation tested when used by many users simultaneously. Finally, tests were done with users from minority cultural groups to check that they could understand how to use the OMS| | So how do designers decide which evaluation techniques to use, when to use them, and how to use the findings? To address these concerns, we provide a case study showing how a range of evaluation techniques were used during the development of a new system. Based on this, we then discuss issues surrounding the "which, when, and how" questions relating to evaluation|
When to evaluate The product bein , 324 Chapter 10 Introducing evaluation tested when used by many users simultaneously. Finally, tests were done with users from minority cultural groups to check that they could understand how to use the OMS| | I 10.3 HutchWorld case study HutchWorld is a distributed virtual community developed through collaboration between Microsoft's Virtual Worlds Research Group and librarians and clinicians at the Fred Hutchinson Cancer Research Center in Seattle, Washington. The system enables cancer patients, their caregivers, family, and friends to chat with one another, tell their stories, discuss their experiences and coping strategies, and gain emotional and practical support from one another (Cheng et. al., 2000). The design team decided to focus on this particular population because caregivers and cancer patients are socially isolated: cancer patients must often avoid physical contact with others because their treatments suppress their immune systems. Similarly, their caregivers have to be careful not to transmit infections to patients|
When to evaluate The product bein , 324 Chapter 10 Introducing evaluation tested when used by many users simultaneously. Finally, tests were done with users from minority cultural groups to check that they could understand how to use the OMS| | The big question for the team was how to make HutchWorld a useful, engaging, easy-to-use and emotionally satisfying environment for its users. It also had to provide privacy when needed and foster trust among participants. A common approach to evaluation in a large project like Hutchworld is to begin by carrying out a number of informal studies. Typically, this involves asking a small number of users to comment on early prototypes. These findings are then fed back into the iterative development of the prototypes. This process is then followed by more formal usability testing and field study techniques. Both aspects are illustrated in this case study. In addition, you will read about how the development team managed their work while dealing with the constraints of working with sick people in a hospital environment|
How the design team got started:  ,  | 10.3.1 How the design team got started: early design ideas Before developing this product, the team needed to learn about the patient experience at the Fred Hutchinson Center. For instance, what is the typical treatment process, what resources are available to the patient community, and what are the needs of the different user groups within this community? They had to be particularly careful about doing this because many patients were very sick. Cancer patients also typically go through bouts of low emotional and physical energy|
How the design team got started:  ,  | Caregivers also may have difficult emotional times, including depression, exhaustion, and stress. Furthermore, users vary along other dimensions, such as education and experience with computers, age and gender and they come from different cultural backgrounds with different expectations|
How the design team got started:  ,  | It was clear from the onset that developing a virtual community for this population would be challenging, and there were many questions that needed to be an- |
HutchWorld case study 325 swered. F ,  | 10.3 HutchWorld case study 325 swered. For example, what kind of world should it be and what should it provide? What exactly do users want to do there? How will people interact? What should it look like? To get answers, the team interviewed potential users from all the stakeholder groups-patients, caregivers, family, friends, clinicians, and social support staff-and observed their daily activity in the clinic and hospital. They also read the latest research literature, talked to experts and former patients, toured the Fred Hutchinson (Hutch) research facilities, read the Hutch web pages, and visited the Hutch school for pediatric patients and juvenile patient family members. No stone was left unturned|
HutchWorld case study 325 swered. F ,  | The development team decided that HutchWorld should be available for patients any time of day or night, regardless of their geographical location. The team knew from reading the research literature that participants in virtual communities are often more open and uninhibited about themselves and will talk about problems and feelings in a way that would be difficult in face-to-face situations. On the downside, the team also knew that the potential for misunderstanding is higher in virtual communities when there is inadequate non-verbal feedback (e.g., facial expressions and other body language, tone of voice, etc.). On balance, however, research indicates that social support helps cancer patients both in the psychological adjustments needed to cope and in their physical wellbeing. For example, research showed that women with breast cancer who received group therapy lived on average twice as long as those who did not (Spiegel, et al., 1989). The team's motivation to create HutchWorld was therefore high. The combination of information from research literature and from observations and interviews with users convinced them that this was a worthwhile project. But what did they do then? The team's informal visits to the Fred Hutchinson Center led to the development of an early prototype. They followed a user-centered development methodology|
HutchWorld case study 325 swered. F ,  | Having got a good feel for the users' needs, the team brainstormed different ideas for an organizing theme to shape the conceptual design-a conceptual model possibly based on a metaphor. After much discussion, they decided to make the design resemble the outpatient clinic lobby of the Fred Hutchinson Cancer Research Center. By using this real-world metaphor, they hoped that the users would easily infer what functionality was available in HutchWorld from their knowledge of the real clinic. The next step was to decide upon the kind of communication environment to use. Should it be synchronous or asynchronous? Which would support social and affective communications best? A synchronous chat environment was selected because the team thought that this would be more realistic and personal than an asynchronous environment. They also decided to include 3D photographic avatars so that users could enjoy having an identifiable online presence and could easily recognize each other|
HutchWorld case study 325 swered. F ,  | Figure 10.3 shows the preliminary stages of this design with examples of the avatars. You can also see the outpatient clinic lobby, the auditorium, the virtual garden, and the school. Outside the world, at the top right-hand side of the screen, is a list of commands in a palette and a list of participants. On the right-hand side at the bottom is a picture of participants' avatars, and underneath the window is the textual chat window. Participants can move their avatars and make them gesture to tour the virtual environment. They can also click on objects such as pictures and interact with them. |
HutchWorld case study 325 swered. F , 326 Chapter 1 O Introducing evaluation I Figure 1 0.3 Preliminary design showing a view of the entrance into HutchWorld| | 326 Chapter 1 O Introducing evaluation I Figure 1 0.3 Preliminary design showing a view of the entrance into HutchWorld|
HutchWorld case study 325 swered. F , 326 Chapter 1 O Introducing evaluation I Figure 1 0.3 Preliminary design showing a view of the entrance into HutchWorld| | The prototype was reviewed with users throughout early development and was later tested more rigorously in the real environment of the Hutch Center using a variety of techniques. A Microsoft product called V-Chat was used to develop a second interactive prototype with the subset of the features in the preliminary design shown in Figure 10.3; however, only the lobby was fully developed, not the auditorium or school, as you can see in the new prototype in Figure 10.4|
HutchWorld case study 325 swered. F , 326 Chapter 1 O Introducing evaluation I Figure 1 0.3 Preliminary design showing a view of the entrance into HutchWorld| | Before testing could begin, the team had to solve some logistical issues. There were two key questions. Who would provide training for the testers and help for the patients? And how many systems were needed for testing and where should they be placed? As in many high-tech companies, the Microsoft team was used to short, market-driven production schedules, but this time they were in for a shock|
HutchWorld case study 325 swered. F , 326 Chapter 1 O Introducing evaluation I Figure 1 0.3 Preliminary design showing a view of the entrance into HutchWorld| | Organizing the testing took much longer than they anticipated, but they soon won says'nowdyr lSlWeilvs'Har( Lmz wur pun(ect avatar Sarahr  ah ewe Whymankpul' Figure 10.4 The Hutch V-Chat prototype. |
HutchWorld case study 327 learned t ,  | 10.3 HutchWorld case study 327 learned to set realistic expectations that were in synch with hospital activity and the unexpected delays that occur when working with people who are unwell|
HutchWorld case study 327 learned t , 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft| | 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft|
HutchWorld case study 327 learned t , 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft| | Test 1 : Early observations onsite In the informal test at the hospital, six computers were set up and maintained by Hutch staff members. A simple, scaled-back prototype of HutchWorld was built using the existing product, Microsoft V-Chat and was installed on the computers, which patients and their families from various hospital locations used. Over the course of several months, the team trained Hutch volunteers and hosted events in the V-Chat prototype. The team observed the usage of the space during unscheduled times, and they also observed the general usage of the prototype|
HutchWorld case study 327 learned t , 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft| | Test 1 : What was learned? This V-Chat test brought up major usability issues. First, the user community was relatively small, and there were never enough participants in the chat room for successful communication-a concept known as critical mass. In addition, many of the patients were not interested in or simultaneously available for chatting. Instead, they preferred asynchronous communication, which does not require an immediate response. Patients and their families used the computers for email, journals, discussion lists, and the bulletin boards largely because they could be used at any time and did not require others to be present at the same time. The team learned that a strong asynchronous base was essential for communication|
HutchWorld case study 327 learned t , 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft| | The team also observed that the users used the computers to play games and to search the web for cancer sites approved by Hutch clinicians. This information was not included in the virtual environment, and so users were forced to use many different applications. A more "unified" place to find all of the Hutch content was desired that let users rapidly swap among a variety of communication, information, and entertainment tasks|
HutchWorld case study 327 learned t , 1 0.3.2 How was the testing done? The team ran two main sets of user tests. The first set of tests was informally run onsite at the Fred Hutchinson Center in the hospital setting. After observing the system in use on computers located in the hospital setting, the team redesigned the software and then ran formal usability tests in the usability labs at Microsoft| | Test 1 : The redesign Based on this trial, the team redesigned the software to support more asynchronous communication and to include a variety of communication, information, and entertainment areas. They did this by making HutchWorld function as a portal that provides access to information-retrieval tools, communication tools, games, and other types of entertainment. Other features were incorporated too, including email, a bulletin board, a text-chat, a web page creation tool, and a way of checking to see if anyone is around to chat with in the 3D world. The new portal version is show in Figure 10.5. |
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | funawn m nnd *?an md Hvtshlnron cancer asrwrch crmr IS a member ot the .dt,.na, C.m~rshcnr,"$ cancar B.tu0.k sss the Internat Barr,-$ Navi~dtm(l he FHCLC 511e Br detulr on hew rn naulpr(. tAr Csnlris Vab SI(|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | ow caner xsb rctc tar-. irss) Figure 10.5 HutchWorld portal version|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | Test 2: Usability tests After redesigning the software, the team then ran usability tests in the Microsoft usability labs. Seven participants (four male and three female) were tested. Four of these participants had used chat rooms before and three were regular users|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | All had browsed the web and some used other communications software. The participants were told that they would use a program called HutchWorld that was designed to provide support for patients and their families. They were then given five minutes to explore HutchWorld. They worked independently and while they explored they provided a running commentary on what they were looking at, what they were thinking, and what they found confusing. This commentary was recorded on video and so were the screens that they visited, so that the Microsoft evaluator, who watched through a one-way mirror, had a record of what happened for later analysis. Participants and the evaluator interacted via a microphone and speakers. When the five-minute exploration period ended, the participants were asked to complete a series of structured tasks that were designed to test particular features of the HutchWorld interface|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | These tasks focused on how participants: dealt with their virtual identity; that is, how they represented themselves and were perceived by others communicated with others got the information they wanted found entertainment Figure 10.6 shows some of the structured tasks. Notice that the instructions are short, clearly written, and specific. |
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | Welcome to the HutchWorld Usability Study For this study we are interested in gaining a better understanding of the problems people have when using the program HutchWorld. HutchWorld is an all-purpose program created to offer information and social support to patients and their families at the Fred Hutchinson Cancer Research Center. I The following pages have tasks for you to complete that will help us achieve that better understanding|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | While you are completing these tasks, it is important for us know what is going on inside your mind. Therefore, as you complete each task please tell us what you are looking at, what you are thinking about, what is confusing to you, and so forth. I Task #k Explore Hutchworld Your first task is to spend five minutes exploring HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | A. First, open HutchWorld|: B. Now, explore! Remember, tell us what you are looking at and what you are thinking about as you are exploring Hutch World I Task #2 All about Your Identity in Hutchworld A. Point to the 3 dimensional (3D) view of HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: B. Point at yourself in the 3D view of HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: C. Get a map view in the 3D view of HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: D. Walk around in the 3D view: go forward, turn left and turn right|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: E. Change the color of your shirt|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: F. Change some information about yourself, such as where you are from|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: I Task #3 All about Communicating with Others Send someone an email|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Read a message on the HutchWorld Bulletin Board|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Post a message on the HutchWorld Bulletin Board|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Check to see who is currently in HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Find out where the other person in HutchWorld is from|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Make the other person in HutchWorld a friend|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Chat with the other person in HutchWorld Wave to the other person in HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Whisper to the other person in HutchWorld|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | A. First, open HutchWorld|: Task #4: All about Getting Information A. Imagine you have never been to Seattle before. Your task is to find something to do|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: B. Find out how to get to the Fred Hutchinson Cancer Research Center|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th| | A. First, open HutchWorld|: C. Go to your favorite website. [Or go to Yahoo: www.yahoo.com] I D. Once you have found a website, resize the screen so you can see the whole web page|
HutchWorld case study 327 learned t , 328 Chapter 1 O Introducing evaluation ,hero I, IPI"~F~B~.*~" "0" *ant, "l* th|last: | A. First, open HutchWorld|: Figure 10.6 A sample of the structured tasks used in the HutchWorld evaluation. |
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play|last: | 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play|last: | B. Get a gift from a Gift Cart and send yourself a gift|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play|last: | C. Go and open your gift|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play|last: | C. Go and open your gift|: Figure 10.6 (continued)|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: During the study, a member of the development team role-played being a participant so that the real participants would be sure to have someone with whom to interact. The evaluator also asked the participants to fill out a short questionnaire after completing the tasks, with the aim of collecting their opinions about their experiences with HutchWorld. The questionnaire asked: What did you like about HutchWorld? What did you not like about HutchWorld? What did you find confusing or difficult to use in HutchWorld? How would you suggest improving HutchWorld? Test 2: What was learned from the usability tests? When running the usability tests, the team collected masses of data that they had to make sense of by systematical analysis. The following discussion offers a snapshot of their findings. Some participants' problems started right at the beginning of the five-minute exploration. The login page referred to "virtual worlds" rather than the expected HutchWorld and, even though this might seem trivial, it was enough to confuse some users. This isn't unusual; developers tend to overlook small things like this, which is why eyaluation is so important. Even careful, highly skilled developers like this team tend to forget that users do not speak their language. Fortunately, finding the "go" button was fairly straightforward. Furthermore, most participants read the welcome message and used the navigation list, and over half used the chat buttons, managed to move around the 3D world, and read the overview. But only one-thd chatted and used the navigation buttons. The fiveminute free-exploration data was also analyzed to determine what people thought of HutchWorld and how they commented upon the 3D view, the chat area, and the browse area|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: Users' performance on the structured tasks was analyzed in detail and participant ratings were tabulated. Participants rated the tasks on a scale of 1-3 where 1 = easy, 2 = OK, 3 = difficult, and bold = needed help. Any activity that received an average rating above 1.5 across participants was deemed to need detailed review by the team. Figure 10.7 shows a fragment of the summary of the analysis|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: In addition, the team analyzed all the problems that they observed during the tests. They then looked at all their data and drew up a table of issues, noting whether they were a priority to fix and listing recommendations for changes. |
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: Structured Tasks The following descriptions provide examples of some of the problems participants experience|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: Resize web screen Find a game to play Send self a gift Open gift Participant Average: Get map view. People generally did not immediately know how to find the map view. However, they knew to look in the chat buttons, and by going through the buttons they found the map view|
HutchWorld case study 327 learned t , 330 Chapter 10 Introducing evaluation I Task #5: AN about Entertainment A. Find a game to play| | Figure 10.6 (continued)|: Walk in 30 view. People found the use of the mouse to move the avatar awkward, especially when they were trying to turn around. However, once they were used to using the mouse they had no difficulty. For a couple of people, it was not clear to them that they should click on the avatar and drag it in the desired direction. A couple of people tried to move by clicking the place they wanted to move to|
HutchWorld case study 327 learned t , 1 1 1 3 1.3 Figure 10.7 Participant information and ratings of difficulty in completing the structured tasks| | 1 1 1 3 1.3 Figure 10.7 Participant information and ratings of difficulty in completing the structured tasks|
HutchWorld case study 327 learned t , 1 = easy, 2 = okay, 3 = difficult and bold = needed help|last: | 1 = easy, 2 = okay, 3 = difficult and bold = needed help|
HutchWorld case study 327 learned t , 3 1 1 1.9 2 2 2 2.2 2 1 33333 3 1.7 2 1 3 1.7 3 1 3 2.0 1 2 3 3 1.6 2.0 1.3 2.7 2.6 |last: | 3 1 1 1.9 2 2 2 2.2 2 1 33333 3 1.7 2 1 3 1.7 3 1 3 2.0 1 2 3 3 1.6 2.0 1.3 2.7 2.6 |
HutchWorld case study 327 learned t , 3 1 1 1.9 2 2 2 2.2 2 1 33333 3 1.7 2 1 3 1.7 3 1 3 2.0 1 2 3 3 1.6 2.0 1.3 2.7 2.6 |last: | Figure 10.8 A fragment of the table showing problem rankings|
HutchWorld case study 327 learned t , 3 1 1 1.9 2 2 2 2.2 2 1 33333 3 1.7 2 1 3 1.7 3 1 3 2.0 1 2 3 3 1.6 2.0 1.3 2.7 2.6 | | Issue Issue# Priority Issue Recommendation 1 high Back button sometimes not working. Fix back button|
HutchWorld case study 327 learned t , 2 high People are not paying attention to Make navigation buttons more navigation buttons. prominent| | 2 high People are not paying attention to Make navigation buttons more navigation buttons. prominent|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | When navigating, people were not aware overview button would take them back to the main page|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | "Virtual worlds" wording in login screen confusing|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | People frequently clicking on objects in 3D view expecting something to happen|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | People do not readily find map view button|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Moving avatar with mouse took some getting used to|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | People wanted to turn around in 3D view, but it was awkward to do so|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Confusion about the real worldlvirtual world distinction|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | People do not initially recognize that other real people could be in HutchWorld, that they can talk to them and see them|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | People not seeinglfinding the chat window|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | Trying to chat to people from the people list where other chat-like features are (whisper, etc.) Make it possibl& to change fonts|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Make the font colors more distinct from the background color|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Change the overview button to a home button, change the wording of the overview page accordingly|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Change wording to "HutchWorld"|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | Make the 3D view have links to web pages. For example, when people click on the help desk the browser area should show the help desk information|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Make the icon on the map view button more map-like|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Encourage the use of the keyboard. Mention clicking and dragging the avatar in the welcome|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people|last: | Make one of the chat buttons a button that lets you turn around|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | Change wording of overview description, to make clear HutchWorld is a "virtual" place made to "resemble" the FHCRC, and is a place where anybody can go|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | Change wording of overview description, to make clear HutchWorld is a place to "chat" with others who are "currently in" the virtual HutchWorld|
HutchWorld case study 327 learned t , 3 4 5 6 7 8 9 10 11 12 I low low medium high low medium low medium high high I Fonts too small, hard to read for some people| | Make chat window more prominent. Somehow link chatlike features of navigation list to chat window. Change wording of chat window. Instead of type to 1 speak here. type to chat here. I |
Hutchworld case study 333 Figure 10 , last: | 10.3 Hutchworld case study 333 Figure 10.8 (continued)|
Hutchworld case study 333 Figure 10 ,  | Figure 10.8 shows part of this table. Notice that issues were ranked in priority: low, medium, and high. There were just five high-ranking problems that absolutely had to be fixed: Spread them apart more in the people list|
Hutchworld case study 333 Figure 10 , last: | Change People button to "Who is On" button|
Hutchworld case study 333 Figure 10 , last: | Let people add friends at My profile Make an append button pop up when double clicking on a topic|
Hutchworld case study 333 Figure 10 , last: | Change wording from "post a message" to "write a message" or "add a message"|
Hutchworld case study 333 Figure 10 , last: | Change so it is either a bulletin board, or a discussion area|
Hutchworld case study 333 Figure 10 , last: | The back button did not always work|
Hutchworld case study 333 Figure 10 , last: | People were not paying attention to navigation buttons, so they needed to be more prominent|
Hutchworld case study 333 Figure 10 ,  | People frequently clicked on objects in the 3D view and expected something to happen. A suggestion for fixing this was to provide links to a web page|
Hutchworld case study 333 Figure 10 ,  | People did not realize that there could be other real people in the 3D world with whom they could chat, so the wording in the overview description had to be changed|
Hutchworld case study 333 Figure 10 ,  | People were not noticing the chat window and instead were trying to chat to people in the participant list. The team needed to clarify the instructions about where to chat|
Hutchworld case study 333 Figure 10 , last: | Who is here list and who has been here list confused|
Hutchworld case study 333 Figure 10 , last: | Difficulty in finding who is here|
Hutchworld case study 333 Figure 10 , last: | Went to own profile to make someone a friend|
Hutchworld case study 333 Figure 10 , last: | Not clear how to appendlreply to a discussion in the bulletin board|
Hutchworld case study 333 Figure 10 , last: | Bulletin board language is inconsistent|
Hutchworld case study 333 Figure 10 , 13 14 15 16 17 In general, most users found the redesigned software easy to use with little instruction| | 13 14 15 16 17 In general, most users found the redesigned software easy to use with little instruction|
Hutchworld case study 333 Figure 10 , 13 14 15 16 17 In general, most users found the redesigned software easy to use with little instruction| | By running a variety of tests, the informal onsite test, and the formal usability test, key problems were identified at an early stage and various usability issues could be fixed before the actual deployment of the software|
Hutchworld case study 333 Figure 10 , 13 14 15 16 17 In general, most users found the redesigned software easy to use with little instruction| | low medium low low low 10.3.3 Was it tested again? Following the usability testing, there were more rounds of observation and testing with six new participants, two males and four females. These tests followed the same general format as those just described but this time they tested multiple users at once, to ensure that the virtual world supported multiuser interactions. The tests were also more detailed and focused. This time the results were more positive, but |
Hutchworld case study 333 Figure 10 , 13 14 15 16 17 In general, most users found the redesigned software easy to use with little instruction| | I 334 Chapter 10 Introducing evaluation of course there were still usability problems to be fixed. Then the question arose: what to do next? In particular, had they done enough testing (see Dilemma)? After making a few more fixes, the team stopped usability testing with specific tasks. But the story didn't end here. The next step was to show HutchWorld to cancer patients and caregivers in a focus-group setting at the Fred Hutchinson Cancer Research Center to get their feedback on the final version. Once the team made adjustments to HutchWorld in response to the focus-group feedback, the final step was to see how well HutchWorld worked in a real clinical environment. It was therefore taken to a residential building used for long-term patient and family stays that was fully wired for Internet access. Here, the team observed what happened when it was used in this natural setting. In particular, they wanted to find out how HutchWorld would integrate with other aspects of patients' lives, particularly with their medical care routines and their access to social support. This informal observation allowed them to examine patterns of use and to see who used which parts of the system, when, and why|
Hutchworld case study 333 Figure 10 , 1 0.3.4 Looking to the future Future studies were planned to evaluate the effects of the computers and the software in the Fred Hutchinson Center. The focus of these studies will be the social support and wellbeing of patients and their caregivers in two different conditions| | 1 0.3.4 Looking to the future Future studies were planned to evaluate the effects of the computers and the software in the Fred Hutchinson Center. The focus of these studies will be the social support and wellbeing of patients and their caregivers in two different conditions|
Hutchworld case study 333 Figure 10 , 1 0.3.4 Looking to the future Future studies were planned to evaluate the effects of the computers and the software in the Fred Hutchinson Center. The focus of these studies will be the social support and wellbeing of patients and their caregivers in two different conditions| | There will be a control condition in which users (i.e., patients) live in the residential building without computers and an experimental condition in which users live in similar conditions but with computers, Internet access, and HutchWorld. The team will evaluate the user data (performance and observation) and surveys collected in the study to investigate key questions, including: How does the computer and software impact the social wellbeing of patients and their caregivers? What type of computer-based communication best supports this patient community? What are the general usage patterns? i.e., which features were used and at what time of day were they used, etc.? |
HutchWorld case study 335 How might ,  | 10.3 HutchWorld case study 335 How might any medical facility use computers and software like HutchWorld to provide social support for its patients and caregivers? There is always more to learn about the efficacy of a design and how much users enjoy using a product, especially when designing innovative products like HutchWorld for new environments. This study will provide a longer-term view of how HutchWorld is used in its natural environment that is not provided by the other evaluations. It's an ambitious plan because it involves a comparison between two different environmental settings, one that has computers and HutchWorld and one that doesn't (see Chapter 13 for more on experimental design)|
HutchWorld case study 335 How might ,  | (a) The case study does not say much about early evaluation to test the conceptual design shown in Figure 10.5. What do you think happened? (b) The evaluators recorded the gender of participants and noted their previous experience with similar systems. Why is this important? (c) Why do you think it was important to give participants a five-minute exploration period?  (d) Triangulation is a term that describes how different perspectives are used to understand a problem or situation. Often different techniques are used in triangulation|
HutchWorld case study 335 How might ,  | Which techniques were triangulated in the evaluations of the HutchWorld prototype?  (e) The evaluators collected participants' opinions. What kinds of concerns do you think participants might have about using HutchWorld? Hints: personal information, medical information, communicating feelings, etc|
HutchWorld case study 335 How might ,  | Comment (a) There was probably much informal discussion with representative users: patients, medical staff, relatives, friends, and caregivers. The team also visited the clinic and hospital and observed what happened there. They may also have discussed this with the physicians and administrators|
HutchWorld case study 335 How might ,  | (b) It is possible that our culture causes men and women to react differently in certain circumstances. Experience is an even more important influence than gender, so knowing how much previous experience users have had with various types of computer systems enables evaluators to make informed judgments about their performance|
HutchWorld case study 335 How might , last: | Experts and novices, for example, tend to behave very differently|
HutchWorld case study 335 How might ,  | (c) The evaluators wanted to see how participants reacted to the system and whether or not they could log on and get started. The exploration period also gave the participants time to get used to the system before doing the set tasks|
HutchWorld case study 335 How might ,  | (d) Data was collected from the five-minute exploration, from performance on the structured tasks, and from the user satisfaction questionnaire|
HutchWorld case study 335 How might ,  | (e) Comments and medical details are personal and people want privacy. Patients might be concerned about whether the medical information they get via the computer and from one another is accurate. Participants might be concerned about how clearly and accurately they are communicating because non-verbal communication is reduced online. |
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Following this with rounds of usability testing and redesign revealed important usability problems. However, usability testing alone is not sufficient|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Field studies were needed to see how users used the system in their natural environments, and sometimes the results were surprising. For example, in the OMS system users from different cultures behaved differently. A key issue in the HutchWorld study was how use of the system would fit with patients' medical routines and changes in their physical and emotional states. Users' opinions also offered valuable insights. After all, if users don't like a system, it doesn't matter how successful the usability testing is: they probably won't use it. Questionnaires and interviews were used to collect user's opinions|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | An interesting point concerns not only how the different techniques can be used to address different issues at different stages of design, but also how these techniques complement each other. Together they provide a broad picture of the system's usability and reveal different perspectives. In addition, some techniques are better than others for getting around practical problems. This is a large part of being a successful evaluator. In the HutchWorld study, for example, there were not many users, so the evaluators needed to involve them sparingly. For example, a technique requiring 20 users to be available at the same time was not feasible in the HutchWorld study, whereas there was no problem with such an approach in the OMS study. Furthermore, the OMS study illustrated how many different techniques, some of which were highly opportunistic, can be brought into play depending on circumstances. Some practical issues that evaluators routinely have to address include: what to do when there are not many users how to observe users in their natural location (i.e., field studies) without disturbing them having appropriate equipment available dealing with short schedules and low budgets not disturbing users or causing them duress or doing anything unethical collecting "useful" data and being able to analyze it selecting techniques that match the evaluators' expertise There are many evaluation techniques from which to choose and these practical issues play a large role in determining which are selected. Furthermore, selection depends strongly on the stage in the design and the particular questions to be answered. In addition, each of the disciplines that contributes to interaction design has preferred bodies of theory and techniques that can influence this choice. These issues are discussed further in the next chapter. |
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Further reading 337 Assignment 1. Reconsider the HutchWorld design and evaluation case study and note what was evaluated, why and when, and what was learned at each stage? 2. How was the design advanced after each round of evaluation? 3. What were the main constraints that influenced the evaluation? 4. How did the stages and choice of techniques build on and complement each other (i.e., triangulate)? 5. Which parts of the evaluation were directed at usability goals and which at user experience goals? Which additional goals not mentioned in the study could the evaluations have focused upon? Summary The aim of this chapter was to introduce basic evaluation concepts that will be revisited and built on in the next four chapters. We selected the HutchWorld case study because it illustrates how a team of designers evaluated a novel system and coped with a variety of practical constraints. It also shows how different techniques are needed for different purposes and how techniques are used together to gain different perspectives on a product's usability. This study highlights how the development team paid careful attention to usability and user expe- rience goals as they designed and evaluated their system|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design|last: | Key points Evaluation and design are very closely integrated in user-centered design|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Some of the same techniques are used in evaluation as in the activity of establishing requirements and identifying users' needs, but they are used differently (e.g., interviews and questionnaires, etc.)|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Triangulation involves using combinations of techniques in concert to get different perspectives or to examine data in different ways|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Dealing with constraints, such as gaining access to users or accommodating users' routines, is an important skill for evaluators to develop|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Further reading CHENG, L., STONE, L., FARNHAM, S., CLARK, A. M., AND ZANER-GODSEY, M. (2000) Hutchworld: Lessons Learned. A Collaborative Project: Fred Hutchinson Cancer Research Center & Microsofi Research. In the Proceedings of the Virtual Worlds Conference 2000, Paris, France. This paper describes the HutchWorld study and, as the title suggests, it discusses the design lessons that were learned. It also describes the evaluation studies in more detail|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | GOULD, J. D., BOIES, S. J., LEVY, S., RICHARDS, J. T., AND SCHOONARD, J. (1990). The 1984 Olympic Message System: A test of behavioral principles of system design. In J. Preece and L. Keller (eds.), Human-Computer Interaction (Readings)|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Prentice Hall International Ltd., Hemel Hempstead, UK: 260-283. This edited paper tells the story of the design and evaluation of the OMS|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | GOULD, J. D., BOIES, S. J., LEVY, S., RICHARDS, J. T., AND SCHOONARD, J. (1987). The 1984 Olympic Message System: a test of behavioral principles of systems design. Communications of the ACM, 30(9), 758-769. This is the original, full version of the OMS paper. |
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Chapter I I An evaluation framework 1 I. 1 Introduction 1 1.2 Evaluation pradigms and techniques 1 1.2.1 Evaluation paradigms 11 2.2 Techniques 1 1.3 D E C I D E: A framework to guide evaluation 11.3.1 Determine the 1 1.3.2 Explore the questions 1 1.3.3 Choose the evaluation pradigm and techniques 1 1.3.4 Identify the practical issues 1 1.3.5 Decide how to deal with the ethical issues 1 1.3.6 Evaluate, interpret and present the data 1 1.4 Pilot studies 1 1.1 Introduction Designing useful and attractive products requires skill and creativity. As products evolve from initial ideas through conceptual design and prototypes, iterative cycles of design and evaluation help to ensure that they meet users' needs. But how do evaluators decide what and when to evaluate? The Hutchworld case study in the previous chapter described how one team did this, but the circumstances surrounding every product's development are different. Certain techniques work better for some than for others|
HutchWorld case study 335 How might , 336 Chapter I O Introducing evaluation I 10.4 Discussion In both HutchWorld and the 1984 Olympic Messaging System, a variety of evaluation techniques were used at different stages of design to answer different questions. "Quick and dirty" observation, in which the evaluators informally examine how a prototype is used in the natural environment, was very useful in early design| | Identifying usability and user experience goals is essential for making every product successful, and this requires understanding users' needs. The role of evaluation is to make sure that this understanding occurs during all the stages of the product's development. The skillful and sometimes tricky part of doing this is knowing what to focus on at different stages. Initial requirements get the design process started, but, as you have seen, understanding requirements tends to happen by a process of negotiation between designers and users. As designers understand users' needs better, their designs reflect .this understanding. Similarly, as users see and experience design ideas, they are able to give better feedback that enables the designers to improve their designs further. The process is cyclical, with evaluation playing a key role in facilitating understanding between designers and users. |
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health| | 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health|
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health| | Experienced designers get to know what works and what doesn't, but those with little experience can find doing their first evaluation daunting. However, with careful advance planning, problems can be spotted and ways of dealing with them can be found. Planning evaluation studies involves thinking about key issues and asking questions about the process. In this chapter we propose the DECIDE framework to help you do this|
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health| | The main aims of this chapter are to: Continue to explain the key concepts and terms used to discuss evaluation|
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health|last: | Describe the evaluation paradigms and techniques used in interaction design|
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health|last: | Discuss the conceptual, practical, and ethical issues to be considered when planning evaluation|
HutchWorld case study 335 How might , 340 Chapter 1 1 An evaluation framework Evaluation is driven by questions about how well the design or particular aspects of it satisfy users' needs. Some of these questions provide high-level goals to guide the evaluation. Others are much more specific. For example, can users find a particular menu item? Is a graphic useful and attractive? Is the product engaging? Practical constraints also play a big role in shaping evaluation plans: tight schedules, low budgets, or little access to users constrain what evaluators can do. You read in chapter 10 how the Hutchworld team had to plan its evaluation around hospital routines and patients' health|last: | Introduce the DECIDE framework to help you plan your own evaluation studies|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques Before we describe the techniques used in evaluation studies, we shall start by proposing some key terms. Terminology in this field tends to be loose and often confusing so it is a good idea to be clear from the start what you mean. We start with the much-used term user studies, defined by Abigail Sellen in her interview at the end of Chapter 4 as follows: "user studies essentially involve looking at how people behave either in their natural [environments], or in the laboratory, both with old technologies and with new ones." Any kind of evaluation, whether it is a user study or not, is guided either explicitly or implicitly by a set of beliefs that may also be underpinned by theory. These beliefs and the practices (i.e., the methods or techniques) associated with them are known as an evaluation paradigm, which you should not confuse with the "interaction paradigms" discussed in Chapter 2. Often evaluation paradigms are related to a particular discipline in that they strongly influence how people from the discipline think about evaluation. Each paradigm has particular methods and techniques associated with it. So that you are not confused, we want to state explicitly that we will not be distinguishing between methods and techniques| | 1 1.2 Evaluation paradigms and techniques Before we describe the techniques used in evaluation studies, we shall start by proposing some key terms. Terminology in this field tends to be loose and often confusing so it is a good idea to be clear from the start what you mean. We start with the much-used term user studies, defined by Abigail Sellen in her interview at the end of Chapter 4 as follows: "user studies essentially involve looking at how people behave either in their natural [environments], or in the laboratory, both with old technologies and with new ones." Any kind of evaluation, whether it is a user study or not, is guided either explicitly or implicitly by a set of beliefs that may also be underpinned by theory. These beliefs and the practices (i.e., the methods or techniques) associated with them are known as an evaluation paradigm, which you should not confuse with the "interaction paradigms" discussed in Chapter 2. Often evaluation paradigms are related to a particular discipline in that they strongly influence how people from the discipline think about evaluation. Each paradigm has particular methods and techniques associated with it. So that you are not confused, we want to state explicitly that we will not be distinguishing between methods and techniques|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques Before we describe the techniques used in evaluation studies, we shall start by proposing some key terms. Terminology in this field tends to be loose and often confusing so it is a good idea to be clear from the start what you mean. We start with the much-used term user studies, defined by Abigail Sellen in her interview at the end of Chapter 4 as follows: "user studies essentially involve looking at how people behave either in their natural [environments], or in the laboratory, both with old technologies and with new ones." Any kind of evaluation, whether it is a user study or not, is guided either explicitly or implicitly by a set of beliefs that may also be underpinned by theory. These beliefs and the practices (i.e., the methods or techniques) associated with them are known as an evaluation paradigm, which you should not confuse with the "interaction paradigms" discussed in Chapter 2. Often evaluation paradigms are related to a particular discipline in that they strongly influence how people from the discipline think about evaluation. Each paradigm has particular methods and techniques associated with it. So that you are not confused, we want to state explicitly that we will not be distinguishing between methods and techniques| | We tend to talk about techniques, but you may find that other books call them methods. An example of the relationship between a paradigm and the techniques used by evaluators following that paradigm can be seen for usability testing, which is an applied science and engineering paradigm. The techniques associated with usability testing are: user testing in a controlled environment; observation of user activity in the controlled environment and the field; and questionnaires and interviews. |
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | "Quick and dirty" evaluation ~ A "quick and dirty" evaluation is a common practice in which designers informally get feedback from users or consultants to confirm that their ideas are in line with users' needs and are liked. "Quick and dirty" evaluations can be done at any stage and the emphasis is on fast input rather than carefully documented findings. For example, early in design developers may meet informally with users to get feedback on ideas for a new product (Hughes et al., 1994). At later stages similar meetings may occur to try out an idea for an icon, check whether a graphic is liked, or confirm that information has been appropriately categorized on a webpage. This approach is often called "quick and dirty" because it is meant to be done in a short space of time. Getting this kind of feedback is an essential ingredient of successful design|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | As discussed in Chapter 9, any involvement with users will be highly informative and you can learn a lot early in design by observing what people do and talking to them informally. The data collected is usually descriptive and informal and it is fed back into the design process as verbal or written notes, sketches and anecdotes, etc. Another source comes from consultants, who use their knowledge of user behavior, the market place and technical know-how, to review software quickly and provide suggestions for improvement. It is an approach that has become particularly popular in web design where the emphasis is usually on short tirnescales|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | Usability testing Usability testing was the dominant approach in the 1980s (Whiteside et al., 1998), and remains important, although, as you will see, field studies and heuristic evaluations have grown in prominence. Usability testing involves measuring typical users' performance on carefully prepared tasks that are typical of those for which the system was designed. Users' performance is generally measured in terms of number of errors and time to complete the task. As the users perform these tasks, they are watched and recorded on video and by logging their interactions with software|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | This observational data is used to calculate performance times, identify errors, and help explain why the users did what they did. User satisfaction questionnaires and interviews are also used to elicit users' opinions|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | The defining characteristic of usability testing is that it is strongly controlled by the evaluator (Mayhew, 1999). There is no mistaking that the evaluator is in charge! Typically tests take place in laboratory-like conditions that are controlled|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 341 1 1.2.1 Evaluation paradigms In this book we identify four core evaluation paradigms: (1) "quick and dirty" evaluations; (2) usability testing; (3) field studies; and (4) predictive evaluation. Other texts may use slightly different terms to refer to similar paradigms| | Casual visitors are not allowed and telephone calls are stopped, and there is no possibility of talking to colleagues, checking email, or doing any of the other tasks that most of us rapidly switch among in our normal lives. Everything that |
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data|last: | Quantifying users' performance is a dominant theme in usability testing|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | However, unlike research experiments, variables are not manipulated and the typical number of participants is too small for much statistical analysis. User satisfaction data from questionnaires tends to be categorized and average ratings are presented. Sometimes video or anecdotal evidence is also included to illustrate problems that users encounter. Some evaluators then summarize this data in a usability specification so that developers can use it to test future prototypes or versions of the product against it. Optimal performance levels and minimal levels of acceptance are often specified and current levels noted. Changes in the design can then be agreed and engineered-hence the term "usability engineering." User testing is explained further in Chapter 14, how to observe users is described in Chapter 12, and issues concerned with interviews and questionnaires are explored in Chapter 13|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | Field studies The distinguishing feature of field studies is that they are done in natural settings with the aim of increasing understanding about what users do naturally and how technology impacts them. In product design, field studies can be used to (1) help identify opportunities for new technology; (2) determine requirements for design; (3) facilitate the introduction of technology; and (4) evaluate technology (Bly, 1997)|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | Chapter 9 introduced qualitative techniques such as interviews, observation, participant observation, and ethnography that are used in field studies. The exact choice of techniques is often influenced by the theory used to analyze the data. The data takes the form of events and conversations that are recorded as notes, or by audio or video recording, and later analyzed using a variety of analysis techniques such as content, discourse, and conversational analysis. These techniques vary considerably|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | In content analysis, for example, the data is analyzed into content categories, whereas in discourse analysis the use of words and phrases is examined|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | Artifacts are also collected. In fact, anything that helps to show what people do in their natural contexts can be regarded as data|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | In this text we distinguish between two overall approaches to field studies. The first involves observing explicitly and recording what is happening, as an outsider looking on. Qualitative techniques are used to collect the data, which may then be analyzed qualitatively or quantitatively. For example, the number of times a particular event is observed may be presented in a bar graph with means and standard deviations|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data|last: | In some field studies the evaluator may be an insider or even a participant|
HutchWorld case study 335 How might , 342 Chapter 11 An evaluation framework the participant does is recorded-every keypress, comment, pause, expression, etc., so that it can be used as data| | Ethnography is a particular type of insider evaluation in which the aim is to explore the details of what happens in a particular social setting. "In the context of humancomputer interaction, ethnography is a means of studying work (or other activities) in order to inform the design of information systems and understand aspects of their use" (Shapiro, 1995, p. 8). |
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations| | 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations| | In recent years heuristic evaluation in which experts review the software product guided by tried and tested heuristics has become popular (Nielsen and Mack, 1994). As mentioned in Chapter 1, usability guidelines (e.g., always provide clearly marked exits) were designed primarily for evaluating screen-based products (e.g|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations| | form fill-ins, library catalogs, etc.). With the advent of a range of new interactive products (e.g., the web, mobiles, collaborative technologies), this original set of I heuristics has been found insufficient. While some are still applicable (e.g., speak the users' language), others are inappropriate. New sets of heuristics are also needed that are aimed at evaluating different classes of interactive products. In particular, specific heuristics are needed that are tailored to evaluating web-based products, mobile devices, collaborative technologies, computerized toys, etc. These should be based on a combination of usability and user experience goals, new research findings and market research. Care is needed in using sets of heuristics. As you will see in Chapter 13, designers are sometimes led astray by findings from heuristic evaluations that turn out not to be as accurate as they at first seemed|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations| | Table 11.1 summarizes the key aspects of each evaluation paradigm for the following issues: the role of users who controls the process and the relationship between evaluators and users during the evaluation the location of the evaluation when the evaluation is most useful the type of data collected and how it is analyzed how the evaluation findings are fed back into the design process the philosophy and theory that underlies the evaluation paradigms Some other terms that you may encounter in your reading are shown in Box 11.1|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations|last: | Think back to the Hutchworld case study|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 343 Predictive evaluation I In predictive evaluations experts apply their knowledge of typical users, often guided by heuristics, to predict usability problems. Another approach involves theoreticallybased models. The key feature of predictive evaluation is that users need not be present, which makes the process quick, relatively inexpensive, and thus attractive to companies; but it has limitations| | (a) Which evaluation paradigms were used in the study and which were not? (b) How could the missing evaluation paradigms have been used to inform the design and why might they not have been used? Comment (a) The team did some "quick and dirty" evaluation during early development but this is not stressed in their report. Usability testing played a strong role, with some tests being carried out at the Fred Hutchinson Center and later tests in Microsoft's usability laboratories. Field studies are not strongly featured, but the team does mention |
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior| | 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Usability testing To carry out set tasks|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Field studies Natural behavior|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Predictive Users generally not involved|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Who controls Evaluators take minimum control|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Location Natural environment or laboratory|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior| | When used Any time you want to get feedback about a design quickly. Techniques from other evaluation paradigms can be used-e.g., experts review software|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Type of data Usually qualitative, informal descriptions|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Fed back Sketches, quotes, into design descriptive report|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | by ..|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | by ..|: Philosophy User-centered, highly practical approach|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | by ..|: Evaluators strongly in control|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | by ..|: Laboratory|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Laboratory|: With a prototype or product|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | With a prototype or product|: Quantitative|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Quantitative|: Sometimes statistically validated. Users' opinions collected by questionnaire or interview|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Quantitative|: Report of performance measures, errors etc. Findings provide a benchmark for future versions|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Quantitative|: Applied approach based on experimentation, i.e., usability engineering|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Quantitative|: Evaluators try to develop relationships with users|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Quantitative|: Natural environment|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior| | Natural environment|: Most often used early in design to check that users' needs are being met or to assess problems or design opportunities|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Natural environment|: Qualitative descriptions often accompanied with sketches, scenarios, quotes, other artifacts|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Natural environment|: Descriptions that include quotes, sketches, anecdotes, and sometimes time logs|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Natural environment|: May be objective observation or ethnographic|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Natural environment|: Expert evaluators|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Laboratory-oriented but often happens on customer's premises|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Expert reviews (often done by consultants) with a prototype, but can occur at any time|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Models are used to assess specific aspects of a potential design|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: List of problems from expert reviews|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Quantitative figures from model, e.g., how long it takes to perform a task using two designs|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Reviewers provide a list of problems, often with suggested solutions|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Times calculated from models are given to designers|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Practical heuristics and practitioner expertise underpin expert reviews|
HutchWorld case study 335 How might , 344 Chapter 11 An evaluation framework Table 1 1.1 Characteristics of different evaluation paradigms - -- Evaluation paradigms "Quick and dirty" Role of users Natural behavior|last: | Expert evaluators|: Theory underpins models. |
HutchWorld case study 335 How might , 1 1.2 Evaluation pradigrns and techniques 345 observing how patients used HutchWorld in the Center. Field studies were planned in which patients, who have access to HutchWorld and the web, could be systematically compared with another group who does not have these facilities. However, distinguishing between evaluation paradigms isn't always clear-cut. In practice elements typically found in one may be transferred to another (e.g., the controlled approach the HutchWorld team planned to use in the field). The only evaluation paradigm that is not mentioned in the study is predictive evaluation| | 1 1.2 Evaluation pradigrns and techniques 345 observing how patients used HutchWorld in the Center. Field studies were planned in which patients, who have access to HutchWorld and the web, could be systematically compared with another group who does not have these facilities. However, distinguishing between evaluation paradigms isn't always clear-cut. In practice elements typically found in one may be transferred to another (e.g., the controlled approach the HutchWorld team planned to use in the field). The only evaluation paradigm that is not mentioned in the study is predictive evaluation|
HutchWorld case study 335 How might , 1 1.2 Evaluation pradigrns and techniques 345 observing how patients used HutchWorld in the Center. Field studies were planned in which patients, who have access to HutchWorld and the web, could be systematically compared with another group who does not have these facilities. However, distinguishing between evaluation paradigms isn't always clear-cut. In practice elements typically found in one may be transferred to another (e.g., the controlled approach the HutchWorld team planned to use in the field). The only evaluation paradigm that is not mentioned in the study is predictive evaluation| | (b) Expert reviews could have been done any time during its development but the team may have thought they were not needed, or there wasn't time, or perhaps they were performed but not reported|
HutchWorld case study 335 How might , 1 1.2.2 Techniques There are many evaluation techniques and they can be categorized in various ways, but in this text we will examine techniques for: observing users asking users their opinions asking experts their opinions testing users' performance modeling users' task performance to predict the efficacy of a user interface The brief descriptions below offer an overview of each category, which we discuss in detail in the next three chapters. Be aware that some techniques are used in different ways in different evaluation paradigms| | 1 1.2.2 Techniques There are many evaluation techniques and they can be categorized in various ways, but in this text we will examine techniques for: observing users asking users their opinions asking experts their opinions testing users' performance modeling users' task performance to predict the efficacy of a user interface The brief descriptions below offer an overview of each category, which we discuss in detail in the next three chapters. Be aware that some techniques are used in different ways in different evaluation paradigms|
HutchWorld case study 335 How might , 1 1.2.2 Techniques There are many evaluation techniques and they can be categorized in various ways, but in this text we will examine techniques for: observing users asking users their opinions asking experts their opinions testing users' performance modeling users' task performance to predict the efficacy of a user interface The brief descriptions below offer an overview of each category, which we discuss in detail in the next three chapters. Be aware that some techniques are used in different ways in different evaluation paradigms| | Observing users Observation techniques help to identify needs leading to new types of products and help to evaluate prototypes. Notes, audio, video, and interaction logs are wellknown ways of recording observations and each has benefits and drawbacks. Obvious challenges for evaluators are how to observe without disturbing the people being observed and how to analyze the data, particularly when large quantities of |
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation|
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | Asking users I Asking users what they think of a product-whether it does what they want; whether they like it; whether the aesthetic design appeals; whether they had problems using it; whether they want to use it again-is an obvious way of getting feedback. Interviews and questionnaires are the main techniques for doing this. The questions asked can be unstructured or tightly structured. They can be asked of a few people or of hundreds. Interview and questionnaire techniques are also being developed for use with email and the web. We discuss these techniques in Chapter 13|
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | Asking experts Software inspections and reviews are long established techniques for evaluating software code and structure. During the 1980s versions of similar techniques were developed for evaluating usability. Guided by heuristics, experts step through tasks role-playing typical users and identify problems. Developers like this approach because it is usually relatively inexpensive and quick to perform compared with laboratory and field evaluations that involve users. In addition, experts frequently suggest solutions to problems. In Chapter 13 you will learn a few inspection techniques for evaluating usability|
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | User testing Measuring user performance to compare two or more designs has been the bedrock of usability testing. As we said earlier when discussing usability testing, these tests are usually conducted in controlled settings and involve typical users performing typical, well-defined tasks. Data is collected so that performance can be analyzed. Generally the time taken to complete a task, the number of errors made, and the navigation path through the product are recorded. Descriptive statistical measures such as means and standard deviations are commonly used to report the results. In Chapter 14 you will learn the basics of user testing and how it differs from scientific experiments|
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | Modeling users' task performance There have been various attempts to model human-computer interaction so as to predict the efficiency and problems associated with different designs at an early stage without building elaborate prototypes. These techniques are successful for systems with limited functionality such as telephone systems. GOMS and the keystroke model are the best known techniques. They have already been mentioned in Chapter 3 and in Chapter 14 we examine their role in evaluation|
HutchWorld case study 335 How might , 346 Chapter 1 1 An evaluation framework video data are collected or when several different types must be integrated to tell the story (e.g., notes, pictures, sketches from observers). You met several observation techniques in Chapter 7 in the context of the requirements activity; in Chapter 12 we will focus on how they are used in evaluation| | Table 11.2 summarizes the categories of techniques and indicates how they are commonly used in the four evaluation paradigms. |
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | Evaluation paradigms Techniques "Quick and dirty" Usability testing Field studies Predictive Observing Important for Video and Observation is the N/A users seeing how users interaction central part of any behave in their logging, which field study. In natural can be analyzed ethnographic environments. to identify studies evaluators errors, investigate immerse routes through themselves in the the software, environment. In or calculate other types of performance time. studies the evaluator looks on objectively|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | Asking users Discussions with User satisfaction The evaluator may N/A users and questionnaires interview or potential users are administered discuss what she individually, in to collect users' sees with groups or focus opinions. participants|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | groups. Interviews may Ethnographic also be used to interviews are used get more details. in ethnographic studies|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | Asking To provide NIA NIA Experts use experts critiques heuristics early in (called "crit design to predict reports") of the the efficacy of an usability of a interface|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques|last: | prototype|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | prototype|: User N/A Testing typical N/A NIA testing users on typical tasks in a controlled laboratory-like setting is the cornerstone of usability testing|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | prototype|: Modeling N/A NIA N/A Models are used to users' task predict the efficacy performance of an interface or compare performance times between versions. |
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | prototype|: I I 348 Chapter 1 1 An evaluation framework C 1969 Rmdy Gl.shgen. - C "It's the latest innovation in ofAce safety|
HutchWorld case study 335 How might , 1 1.2 Evaluation paradigms and techniques 347 Table 1 1.2 The relationship between evaluation paradigms and techniques| | prototype|: When your computer mashes, an air bag is activated so you won't bang your head in frustration." I 1 1.3 DECIDE: A framework to guide evaluation Well-planned evaluations are driven by clear goals and appropriate questions (Basili et al., 1994). To guide our evaluations we use the DECIDE framework, which provides the following checklist to help novice evaluators: 1. ~etermihe the overall goals that the evaluation addresses|
HutchWorld case study 335 How might , 2. Explore the specific questions to be answered|last: | 2. Explore the specific questions to be answered|
HutchWorld case study 335 How might , 3. Choose the evaluation paradigm and techniques to answer the questions|last: | 3. Choose the evaluation paradigm and techniques to answer the questions|
HutchWorld case study 335 How might , 4. Identify the practical issues that must be addressed, such as selecting participants|last: | 4. Identify the practical issues that must be addressed, such as selecting participants|
HutchWorld case study 335 How might , 5. Decide how to deal with the ethical issues|last: | 5. Decide how to deal with the ethical issues|
HutchWorld case study 335 How might , 6. Evaluate, interpret, and present the data|last: | 6. Evaluate, interpret, and present the data|
HutchWorld case study 335 How might , 1 1.3.1 Determine the goals What are the high-level goals of the evaluation? Who wants it and why? An evaluation to help clarify user needs has different goals from an evaluation to determine the best metaphor for a conceptual design, or to he-tune an interface, or to examine how technology changes working practices, or to inform how the next version of a product should be changed| | 1 1.3.1 Determine the goals What are the high-level goals of the evaluation? Who wants it and why? An evaluation to help clarify user needs has different goals from an evaluation to determine the best metaphor for a conceptual design, or to he-tune an interface, or to examine how technology changes working practices, or to inform how the next version of a product should be changed|
HutchWorld case study 335 How might , 1 1.3.1 Determine the goals What are the high-level goals of the evaluation? Who wants it and why? An evaluation to help clarify user needs has different goals from an evaluation to determine the best metaphor for a conceptual design, or to he-tune an interface, or to examine how technology changes working practices, or to inform how the next version of a product should be changed| | Goals should guide an evaluation, so determining what these goals are is the first step in planning an evaluation. For example, we can restate the general goal statements just mentioned more clearly as: Check that the evaluators have understood the users' needs|
HutchWorld case study 335 How might , 1 1.3.1 Determine the goals What are the high-level goals of the evaluation? Who wants it and why? An evaluation to help clarify user needs has different goals from an evaluation to determine the best metaphor for a conceptual design, or to he-tune an interface, or to examine how technology changes working practices, or to inform how the next version of a product should be changed|last: | Identify the metaphor on which to base the design. |
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent| | 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent|last: | Investigate the degree to which technology influences working practices|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent|last: | Identify how the interface of an existing product could be engineered to improve its usability|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent| | These goals influence the evaluation approach, that is, which evaluation paradigm guides the study. For example, engineering a user interface involves a quantitative engineering style of working in which measurements are used to judge the quality of the interface. Hence usability testing would be appropriate. Exploring how children talk together in order to see if an innovative new groupware product would help them to be more engaged would probably be better informed by a field study|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent| | I 1 1.3.2 Explore the questions I In order to make goals operational, questions that must be answered to satisfy them have to be identified. For example, the goal of finding out why many customers prefer to purchase paper airline tickets over the counter rather than e-tickets can be broken down into a number of relevant questions for investigation. What are customers' attitudes to these new tickets? Perhaps they don't trust the system and are not sure that they will actually get on the flight without a ticket in their hand. Do customers have adequate access to computers to make bookings? Are they concerned about security? Does this electronic system have a bad reputation? Is the user interface to the ticketing system so poor that they can't use it? Maybe very few people managed to complete the transaction|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 349 Check to ensure that the final interface is consistent| | Questions can be broken down into very specific sub-questions to make the evaluation even more specific. For example, what does it mean to ask, "Is the user interface poor?": Is the system difficult to navigate? Is the terminology confusing because it is inconsistent? Is response time too slow? Is the feedback confusing or maybe insufficient? Sub-questions can, in turn, be further decomposed into even finer-grained questions, and so on|
HutchWorld case study 335 How might , 1 1.3.3 Choose the evaluation paradigm and techniques Having identified the goals and main questions, the next step is to choose the evaluation paradigm and techniques. As discussed in the previous section, the evaluation paradigm determines the kinds of techniques that are used. Practical and ethical issues (discussed next) must also be considered and trade-offs made. For example, what seems to be the most appropriate set of techniques may be too expensive, or may take too long, or may require equipment or expertise that is not available, so compromises are needed| | 1 1.3.3 Choose the evaluation paradigm and techniques Having identified the goals and main questions, the next step is to choose the evaluation paradigm and techniques. As discussed in the previous section, the evaluation paradigm determines the kinds of techniques that are used. Practical and ethical issues (discussed next) must also be considered and trade-offs made. For example, what seems to be the most appropriate set of techniques may be too expensive, or may take too long, or may require equipment or expertise that is not available, so compromises are needed|
HutchWorld case study 335 How might , 1 1.3.3 Choose the evaluation paradigm and techniques Having identified the goals and main questions, the next step is to choose the evaluation paradigm and techniques. As discussed in the previous section, the evaluation paradigm determines the kinds of techniques that are used. Practical and ethical issues (discussed next) must also be considered and trade-offs made. For example, what seems to be the most appropriate set of techniques may be too expensive, or may take too long, or may require equipment or expertise that is not available, so compromises are needed| | As you saw in the Hutchworld case study, combinations of techniques can be used to obtain different perspectives. Each type of data tells the story from a different point of view. Using this triangulation reveals a broad picture. |
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques|
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | Users It goes without saying that a key aspect of an evaluation is involving appropriate users. For laboratory studies, users must be found and screened to ensure that they represent the user population to which the product is targeted. For example, usability tests often need to involve users with a particular level of experience e.g., novices or experts, or users with a range of expertise. The number of men and women within a particular age range, cultural diversity, educational experience, and personality differences may also need to be taken into account, depending on the kind of product being evaluated. In usability tests participants are typically screened to ensure that they meet some predetermined characteristic. For example, they might be tested to ensure that they have attained a certain skill level or fall within a particular demographic range. Questionnaire surveys require large numbers of participants so ways of identifying and reaching a representative sample of participants are needed. For field studies to be successful, an appropriate and accessible site must be found where the evaluator can work with the users in their natural setting|
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | Another issue to consider is how the users will be involved. The tasks used in a laboratory study should be representative of those for which the product is designed|
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | However, there are no written rules about the length of time that a user should be expected to spend on an evaluation task. Ten minutes is too short for most tasks and two hours is a long time, but what is reasonable? Task times will vary according to the type of evaluation, but when tasks go on for more than 20 minutes, consider offering breaks. It is accepted that people using computers should stop, move around and change their position regularly after every 20 minutes spent at the keyboard to avoid repetitive strain injury. Evaluators also need to put users at ease so they are not anxious and will perform normally. Even when users are paid to participate, it is important to treat them courteously. At no time should users be treated condescendingly or made to feel uncomfortable when they make mistakes. Greeting users, explaining that it is the system that is being tested and not them, and planning an activity to familiarize them with the system before starting the task all help to put users at ease|
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | Facilities and equipment There are many practical issues concerned with using equipment in an evaluation|
HutchWorld case study 335 How might , 350 Chapter 1 1 An evaluation framework 1 1.3.4 Identify the practical issues There are many practical issues to consider when doing any kind of evaluation and it is important to identify them before starting. Some issues that should be considered include users, facilities and equipment, schedules and budgets, and evaluators' expertise. Depending on the availability of resources, compromises may involve adapting or substituting techniques| | For example, when using video you need to think about how you will do the recording: how many cameras and where do you put them? Some people are dis- |
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 351 turbed by having a camera pointed at them and will not perform normally, so how can you avoid making them feel uncomfortable? Spare film and batteries may also be needed| | 1 1.3 DECIDE: A framework to guide evaluation 351 turbed by having a camera pointed at them and will not perform normally, so how can you avoid making them feel uncomfortable? Spare film and batteries may also be needed|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 351 turbed by having a camera pointed at them and will not perform normally, so how can you avoid making them feel uncomfortable? Spare film and batteries may also be needed| | Schedule and budget constraints Time and budget constraints are important considerations to keep in mind. It might seem ideal to have 20 users test your interface, but if you need to pay them, then it could get costly. Planning evaluations that can be completed on schedule is also important, particularly in commercial settings. However, as you will see in the interview with Sara Bly in the next chapter, there is never enough time to do evaluations as you would ideally like, so you have to compromise and plan to do a good job with the resources and time available|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 351 turbed by having a camera pointed at them and will not perform normally, so how can you avoid making them feel uncomfortable? Spare film and batteries may also be needed| | Expertise Does the evaluation team have the expertise needed to do the evaluation? For example, if no one has used models to evaluate systems before, then basing an evaluation on this approach is not sensible. It is no use planning to use experts to review an interface if none are available. Similarly, running usability tests requires expertise. Analyzing video can take many hours, so someone with appropriate expertise and equipment must be available to do it. If statistics are to be used, then a statistician should be consulted before starting the evaluation and then again later for analysis, if appropriate|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 351 turbed by having a camera pointed at them and will not perform normally, so how can you avoid making them feel uncomfortable? Spare film and batteries may also be needed| | Informal observation, user performance testing, and questionnaires were used in the HutchWorld case study. What practical issues are mentioned in the case study? What other issues do you think the developers had to take into account? Comment No particular practical issues are mentioned for the informal observation, but there probably were restrictions on where and what the team could observe. For example, it is likely that access would be denied to very sick patients and during treatment times. Not surprisingly, user testing posed more problems, such as finding participants, putting equipment in place, managing the tests, and underestimation of the time needed to work in a hospital setting compared with the fast production times at Microsoft|
HutchWorld case study 335 How might , 1 1.3.5 wide how to deal with the ethical issues The Association for Computing Machinery (ACM) and many other professional organizations provide ethical codes (Box 11.2) that they expect their members to uphold, particularly if their activities involve other human beings. For example, people's privacy should be protected, which means that their name should not be associated with data collected about them or disclosed in written reports (unless they give permission). Personal records containing details about health, employment, education, financial status, and where participants live should be confidential. Similarly, | | 1 1.3.5 wide how to deal with the ethical issues The Association for Computing Machinery (ACM) and many other professional organizations provide ethical codes (Box 11.2) that they expect their members to uphold, particularly if their activities involve other human beings. For example, people's privacy should be protected, which means that their name should not be associated with data collected about them or disclosed in written reports (unless they give permission). Personal records containing details about health, employment, education, financial status, and where participants live should be confidential. Similarly, |
HutchWorld case study 335 How might , 352 Chapter 1 1 An evaluation framework it should not be possible to identify individuals from comments written in reports| | 352 Chapter 1 1 An evaluation framework it should not be possible to identify individuals from comments written in reports|
HutchWorld case study 335 How might , 352 Chapter 1 1 An evaluation framework it should not be possible to identify individuals from comments written in reports| | For example, if a focus group involves nine men and one woman, the pronoun "she7 ' should not be used in the report because it will be obvious to whom it refers|
HutchWorld case study 335 How might , 352 Chapter 1 1 An evaluation framework it should not be possible to identify individuals from comments written in reports| | Most professional societies, universities, government and other research offices require researchers to provide information about activities in which human participants will be involved. This documentation is reviewed by a panel and the researchers are notified whether their plan of work, particularly the details about how human participants will be treated, is acceptable|
HutchWorld case study 335 How might , 352 Chapter 1 1 An evaluation framework it should not be possible to identify individuals from comments written in reports| | People give their time and their trust when they agree to participate in an evaluation study and both should be respected. But what does it mean to be respectful to users? What should participants be told about the evaluation? What are participants' rights? Many institutions and project managers require participants to read and sign an informed consent form similar to the one in Box 11.3. This form explains the aim of the tests or research and promises participants that their personal details and performance will not be made public and will be used only for the purpose stated. It is an |
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | The following guidelines will help ensure that evaluations are done ethically and that adequate steps to protect users' rights have been taken|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Tell participants the goals of the study and exactly what they should expect if they participate. The information given to them should include outlining the process, the approximate amount of time the study will take, the kind of data that will be collected, and how that data will be analyzed. The form of the final report should be described and, if possible, a copy offered to them. Any payment offered should also be clearly stated|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Be sure to explain that demographic, financial, health, or other sensitive information that users disclose or is discovered from the tests is confidential. A coding system should be used to record each user and, if a user must be iden- I tified for a follow-up interview, the code and the person's demographic de- I tails should be stored separately from the data. Anonymity should also be promised if audio and video are used|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Make sure users know that they are free to stop the evaluation at any time if they feel uncomfortable with the procedure|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Pay users when possible because this creates a formal relationship in which mutual commitment and responsibility are expected|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Avoid including quotes or descriptions that inadvertently reveal a person's identity, as in the example mentioned above, of avoiding use of the pronoun "she" in the focus group. If quotes need to be reported, e.g., to justify conclusions, then it is convention to replace words that would reveal the source with representative words, in square brackets. We used this convention in Boxes 9.2 and 9.3|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | Ask users' permission in advance to quote them, promise them anonymity, and offer to show them a copy of the report before it is distributed|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | The general rule to remember when doing evaluations is do unto others only what you would not mind being done to you|
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 353 agreement between the evaluator and the evaluation participants that helps to confirm the professional relationship that exists between them. If your university or organization does not provide such a form it is advisable to develop one, partly to protect yourself in the unhappy event of litigation and partly because the act of constructing it will remind you what you should consider| | * I Think back to the HutchWorld case study. What ethical issues did the developers have to " consider? Comment The developers of Hutchworld considered all the issues listed above. In addition, because the study involved patients, they had to be particularly careful that medical and other personal information was kept confidential. They were also sensitive to the fact that cancer patients may become too tired or sick to participate so they reassured them that they could stop at any time if the task became onerous. |
HutchWorld case study 335 How might , 354 Chapter 11 An evaluation framework Usability laboratories often have a one-way mirror that allows evaluators to watch users doing their tasks in the laboratory without the users seeing the evaluators. Should users be told that they are being watched? Comment Yes, users should be told that they will be observed through a one-way mirror. It is unethical not to. This honest approach will not compromise the study because users forget about the mirror as they get more absorbed in their tasks. Telling users what is happening helps to build trust| | 354 Chapter 11 An evaluation framework Usability laboratories often have a one-way mirror that allows evaluators to watch users doing their tasks in the laboratory without the users seeing the evaluators. Should users be told that they are being watched? Comment Yes, users should be told that they will be observed through a one-way mirror. It is unethical not to. This honest approach will not compromise the study because users forget about the mirror as they get more absorbed in their tasks. Telling users what is happening helps to build trust|
HutchWorld case study 335 How might , 354 Chapter 11 An evaluation framework Usability laboratories often have a one-way mirror that allows evaluators to watch users doing their tasks in the laboratory without the users seeing the evaluators. Should users be told that they are being watched? Comment Yes, users should be told that they will be observed through a one-way mirror. It is unethical not to. This honest approach will not compromise the study because users forget about the mirror as they get more absorbed in their tasks. Telling users what is happening helps to build trust| | The recent explosion in Internet and web usage has resulted in more research on how people use these technologies and their effects on everyday life. Consequently, there are many projects in which developers and researchers are logging users' interactions, analyzing web traffic, or examining conversations in chatrooms, bulletin boards, or on email. Unlike most previous evaluations in human-computer interaction, these studies can be done without users knowing that they are being studied. This raises ethical concerns, chief among which are issues of privacy, confidentiality, informed consent, and appropriation of others' personal stories (Sharf, 1999). People often say things online that they would not say face to face. Furthermore, many people are unaware that personal information they share online can be read by someone with technical know-how years later, even after they have deleted l it from their personal mailbox (Erickson et al., 1999)|
HutchWorld case study 335 How might , 354 Chapter 11 An evaluation framework Usability laboratories often have a one-way mirror that allows evaluators to watch users doing their tasks in the laboratory without the users seeing the evaluators. Should users be told that they are being watched? Comment Yes, users should be told that they will be observed through a one-way mirror. It is unethical not to. This honest approach will not compromise the study because users forget about the mirror as they get more absorbed in their tasks. Telling users what is happening helps to build trust| | Studies of user behavior on the Internet may involve logging users' interactions and keeping a copy of their conversations with others. Should users be told that this is happening? |
HutchWorld case study 335 How might , 1 1.3 DECIDE: A framework to guide evaluation 355 I Comment Yes, it is better to tell users in advance that they are being logged. As in the previous example, the users' knowledge that they are being logged often ceases to be an issue as they become involved in what they are doing| | 1 1.3 DECIDE: A framework to guide evaluation 355 I Comment Yes, it is better to tell users in advance that they are being logged. As in the previous example, the users' knowledge that they are being logged often ceases to be an issue as they become involved in what they are doing|
HutchWorld case study 335 How might , 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team| | 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team|
HutchWorld case study 335 How might , 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team| | To a great extent the technique used determines the type of data collected, but there are still some choices. For example, should the data be treated statistically? If qualitative data is collected, how should it be analyzed and represented? Some general questions also need to be asked (Preece et al., 1994): Is the technique reliable? Will the approach measure what is intended, i.e., what is its validity? Are biases I creeping in that will distort the results? Are the results generalizable, i.e., what is their scope? Is the evaluation ecologically valid or is the fundamental nature of the process being changed by studying it? Reliability The reliability or consistency of a technique is how well it produces the same results on separate occasions under the same circumstances. Different evaluation processes have different degrees of reliability. For example, a carefully controlled experiment will have high reliability. Another evaluator or researcher who follows exactly the same procedure should get similar results. In contrast, an informal, unstructured interview will have low reliability: it would be difficult if not impossible to repeat exactly the same discussion|
HutchWorld case study 335 How might , 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team| | Validity Validity is concerned with whether the evaluation technique measures what it is supposed to measure. This encompasses both the technique itself and the way it is performed. If for example, the goal of an evaluation is to find out how users use a new product in their homes, then it is not appropriate to plan a laboratory experiment|
HutchWorld case study 335 How might , 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team| | An ethnographic study in users' homes would be more appropriate. If the goal is to find average performance times for completing a task, then counting only the number of user errors would be invalid|
HutchWorld case study 335 How might , 1 1.3.6 Evaluate, interpret, and present the data Choosing the evaluation paradigm and techniques to answer the questions that satisfy the evaluation goal is an important step. So is identifying the practical and ethical issues to be resolved. However, decisions are also needed about what data to collect, how to analyze it, and how to present the findings to the development team| | Biases Bias occurs when the results are distorted. For example, expert evaluators performing a heuristic evaluation may be much more sensitive to certain kinds of design flaws than others. Evaluators collecting observational data may consistently fail to notice certain types of behavior because they do not deem them important. |
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . |last: | 356 Chapter 11 An evaluation framework . |
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . | | Put another way, they may selectively gather data that they think is important. Interviewers may unconsciously influence responses from interviewees by their tone of voice, their facial expressions, or the way questions are phrased, so it is important to be sensitive to the possibility of biases|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . |last: | Scope The scope of an evaluation study refers to how much its findings can be generalized|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . | | For example, some modeling techniques, like the keystroke model, have a narrow, precise scope. The model predicts expert, error-free behavior so, for example, the results cannot be used to describe novices learning to use the system|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . | | Ecological validity Ecological validity concerns how the environment in which an evaluation is conducted influences or even distorts the results. For example, laboratory experiments are strongly controlled and are quite different from workplace, home, or leisure environments|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . | | Laboratory experiments therefore have low ecological validity because the results are unlikely to represent what happens in the real world. In contrast, ethnographic studies do not impact the environment, so they have high ecological validity|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . |last: | Ecological validity is also affected when participants are aware of being studied|
HutchWorld case study 335 How might , 356 Chapter 11 An evaluation framework . | | This is sometimes called the Hawthorne effect after a series of experiments at the Western Electric Company's Hawthorne factory in the US in the 1920s and 1930s. The studies investigated changes in length of working day, heating, lighting, etc., but eventually it was discovered that the workers were reacting positively to being given special treatment rather than just to the experimental conditions|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study|last: | The aim is to make sure that the plan is viable before embarking on the real study|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | For example, the equipment and instructions for its use can be checked. It is also an opportunity to practice interviewing skills, or to check that the questions in a questionnaire are clear or that an experimental procedure works properly. A pilot study will identify potential problems in advance so that they can be corrected|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | Sending out 500 questionnaires and then being told that two of the questions were very confusing wastes time, annoys participants, and is expensive|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | Many evaluators run several pilot studies. As in iterative design, they get feedback, amend the procedure, and test it again until they know they have a good study. If it is difficult to find people to participate or if access to participants is limited, colleagues or peers can be asked to comment. Getting comments from peers is quick and inexpensive and can save a lot of trouble later. In theory, at least, there is no limit to the number of pilot studies that can be run, although there will be practical constraints. |
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | Summary 357 Assignment I Find a journal or conference publication that describes an interesting evaluation study or select one using www.hcibib.org. Then use the DECIDE framework to determine which paradigms and techniques were used. Also consider how well it fared on ethical and practical issues|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | (a) Which evaluation paradigms and techniques are used? (b) Is triangulation used? How? ' (c) Comment on the reliability, validity, ecological validity, biases and scope of the techniques described|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | (d) Is there evidence of one or more pilot studies? (e) What are the strengths and weakness of the study report? Write a 50-100 word critique that would help the author(s) improve their report|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | Summary This chapter has introduced four core evaluation paradigms and five categories of techniques and has shown how they relate to each other. The DECIDE framework identifies the main issues that need to be considered when planning an evaluation. It also introduces many of the basic concepts that will be revisited and built upon in the next three chapters: Chapter 12, which discusses observation techniques; Chapter 13, which examines techniques for gathering users' and experts' opinions; and Chapter 14, which discusses user testing and techniques for modeling users' task performance|
HutchWorld case study 335 How might , 1 1.4 Pilot studies It is always worth testing plans for an evaluation by doing a pilot study before launching into the main study. A pilot study is a small trial run of the main study| | Key points An evaluation paradigm is an approach in which the methods used are influenced by particular theories and philosophies. Four evaluation paradigms were identified: 1. "quick and dirty" 2. usability testing 3. field studies 4. predictive evaluation Methods are combinations of techniques used to answer a question but in this book we often use the terms "methods" and "techniques" interchangeably. Five categories were identified: I. observing users 2. asking users 3. asking experts 4. user testing 5. modeling users' task performance The DECIDE framework has six parts: 1. Determine the overall goals of the evaluation|
HutchWorld case study 335 How might , 2. Explore the questions that need to be answered to satisfy the goals|last: | 2. Explore the questions that need to be answered to satisfy the goals|
HutchWorld case study 335 How might , 4. Identify the practical issues that need to be considered|last: | 4. Identify the practical issues that need to be considered|
HutchWorld case study 335 How might , 5. Decide on the ethical issues and how to ensure high ethical standards|last: | 5. Decide on the ethical issues and how to ensure high ethical standards|
HutchWorld case study 335 How might , 6. Evaluate, interpret, and present the data| | Drawing up a schedule for your evaluation study and doing one or several pilot studies will help to ensure that the study is well designed and likely to be successful. |
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | DIX, A., FINLAY, J., ABOWD, G. AND BEALE, R. (1998) Human-Computer Interaction (2d ed.). London: Prentice Hall Europe. This book provides a useful introduction to evaluation|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | SHNEIDERMAN, B. (1998) Designing the User Interface: Strategies for Effective Human-Computer Interaction (3rd ed.). Reading, MA: Addison-Wesley. This text provides an alternative way of categorizing evaluation techniques and offers a good overview|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | ROBSON, C. (1993) Real World Research. Oxford, UK: Blackwell. This book offers a practical introduction to applied research and evaluation. It is very readable|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | WHITESIDE, J., BENNETT, J., AND HOLTZBLA~, K. (1998) USability engineering: our experience and evolution. In M. Helander (ed.), Handbook of Human-Computer Interaction|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | Amsterdam: North Holland. This chapter reviews the strengths and weakness of usability engineering and explains why ethnographic techniques can provide a useful alternative in some circumstances, 791-817. |
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | Observing users 12.1 Introduction 12.2 Goals, questions, and paradigms 1 2.2.1 What and when to observe 1 2.2.2 Approaches to observation 12.3 How to observe 12.3.1 In controlled environments 12.3.2 In the field 12.3.3 Participant observation and ethnography 12.4 Data collection 12.4.1 Notes plus still camera 12.4.2 Audio recording plus still camera 12.4.3 Video 1 2.5 Indirect Observation: tracking user's activities 12.5.1 Diaries 12.5.2 Interaction logging 1 2.6 Analyzing, interpreting, and presenting data 12.6.1 Qualitative analysis to tell a story 1 2.6.2 Qualitative analysis for categorization 12.6.3 Quantitative data analysis 12.6.4 Feeding the findings back into design Introduction Observation involves watching and listening to users. Observing users interacting with software, even casual observing, can tell you an enormous amount about what they do, the context in which they do it, how well technology supports them, and what other support is needed. In Chapter 9 we discussed the role of observation and ethnography in informing design, particularly early in the process. In this chapter we describe how to observe and do ethnography and discuss their role in evaluation|
HutchWorld case study 335 How might , 358 Chapter 1 1 An evaluation framework Further reading DENZIN, N. K. AND LINCOLN, Y. S. (1994) Handbook of Qualitative Research. London: Sage. This book is a collection of chapters by experts in qualitative research. It is an excellent reference source| | Users can be observed in controlled laboratory-like conditions, as in usability testing, or in the natural environments in which the products are used-i.e., the field. How the observation is done depends on why it is being done and the approach adopted. There is a variety of structured, less structured, and descriptive |
HutchWorld case study 335 How might , 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work| | 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work|
HutchWorld case study 335 How might , 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work| | The main aims of this chapter are to: Discuss the benefits and challenges of different types of observation|
HutchWorld case study 335 How might , 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work| | Describe how to observe as an on-looker, a participant, and an ethnographer. I Discuss how to collect, analyze and present data from observational evaluation. I Examine key issues for doing think-aloud evaluation, diary studies and inter- I action logging|
HutchWorld case study 335 How might , 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work|last: | Give you experience in selecting and doing observational evaluation|
HutchWorld case study 335 How might , 360 Chapter 12 Observing users observation techniques for evaluators to choose from. Which they select and how their findings are interpreted will depend upon the evaluation goals, the specific questions being addressed, and practical constraints. This chapter focuses on how to select appropriate observation techniques, how to do observation, and how to analyze the data and present findings from it. We also discuss the benefits and practicalities associated with each technique. An interview with interaction design consultant Sara Bly at the end of the chapter discusses how she uses observation in her work| | In general, observing and talking to users usually go together, but we leave the details of interview techniques until Chapter 13|
Goals, questions, and paradigms Goa ,  | 12.2 Goals, questions, and paradigms Goals and questions provide a focus for observation, as the DECIDE framework points out. Even studies that use "quick and dirty" observations have a goal; for example, to identify or confirm usability and user experience goals in a prototype|
Goals, questions, and paradigms Goa ,  | Goals and questions should guide all evaluation studies. Just because some evaluators do not make their goals obvious does not mean that they don't have goals. Expert evaluators sometimes don't articulate their goals, but as you will read in Sara Bly's interview they do have them. Even in field studies and ethnography there is a careful balance between being guided by goals and being open to modifying, shaping, or refocusing the study as you learn about the situation. Being able to keep this balance is a skill that develops with experience|
Goals, questions, and paradigms Goa ,  | (a) Find a small group of people who are using any kind of technology (e.g., computers, household or entertainment appliances, etc.) and try to answer the question, "What are these people doing?" Watch for three to five minutes and write down what you observe. When you have finished, note how you felt doing this|
Goals, questions, and paradigms Goa ,  | (b) If you were to repeat the exercise what would you look for when you next observe the group? How would you refine your goals? Comment (a) What was the group doing? Were they talking, working, playing or something else? How were you able to decide? Did you feel awkward or embarrassed watching? Did you wonder whether you should tell them that you were observing them? What problems did you encounter doing this exercise? Was it hard to watch everything and re- |
Goals, questions, and paradigms 361 ,  | 12.2 Goals, questions, and paradigms 361 member what happened? What were the most important things? Did you wonder if you should be trying to identify and remember just those things? Was remembering the order of events tricky? Perhaps you naturally picked up a pen and paper and took notes. If so, was it difficult to record fast enough? How do you think the people being watched felt? Did they know they were being watched? Did knowing affect the way they behaved? Perhaps some of them objected and walked away. If you didn't tell them, do you think you should have? (b) Your questions should be more focused. For example, you might ask, what are the people specifically trying to do and how is the technology being used? Is everyone in the group using the technology? Is it supporting or hindering the users' goals? Having a goal, even a very general goal, helps to guide the observation because there is always so much going on|
Goals, questions, and paradigms 361 ,  | I 1 2.2.1 What and when to observe Observing is useful at any time during product development. Early in design, observation helps designers understand users' needs. Other types of observation are done later to examine whether the developing prototype meets users' needs|
Goals, questions, and paradigms 361 ,  | Depending on the type of study, evaluators may be onlookers, participant observers, or ethnographers. Remember Christian Heath's and Paul Luff's ethnographic study of the London Underground discussed in Chapter 4 (Heath and Luff, 1992)? This study demonstrates the power of insightful observation to improve the redesign of a system. However, in order to understand how London Underground workers do their jobs the authors needed "insider" knowledge. The degree of immersion that evaluators adopt varies across a broad outsider-insider spectrum|
Goals, questions, and paradigms 361 ,  | Where a particular study falls along this spectrum depends on its goal and on the practical and ethical issues that constrain and shape it|
Goals, questions, and paradigms 361 ,  | To understand this notion of an outsider-insider spectrum better, read the scenarios below and answer the questions that follow|
Goals, questions, and paradigms 361 ,  | Scenario 1. A usability consultant joins a group who have been given WAP phones to test on a visit to Washington, DC. Not knowing the restaurants in the area, they use the WAP phone to find a list of restaurants within a five-mile radius of their hotel. Several are listed and while the group waits for a taxi, they find the telephone numbers of a couple, call them to ask about their menus, select one, make a booking, and head off to the restaurant. The usability consultant observes some problems keying instructions because the buttons seem small. She also notices that the screen seems rather small, but the person using it is able to get the information needed and call the restaurant, etc. Discussion with the group supports the evaluator's impression that there are problems with the interface, but on balance the device is useful and the group is pleased to get a table at a good restaurant nearby|
Goals, questions, and paradigms 361 ,  | Scenario 2. A usability consultant observes how participants perform a pre-planned task using the WAP phone in a usability laboratory. The task requires the participants to find the telephone number of a restaurant called Matisse. It takes them several minutes to do this |
Goals, questions, and paradigms 361 , 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire| | 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire|
Goals, questions, and paradigms 361 , 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire| | (a) In which situation does the observer take the most control? (b) What are the advantages and disadvantages of these two types of observation? (c) When might each type of observation be useful? (a) The observer takes most control in the second study. The task is predetermined, the participant is instructed what to do, and she is located in a controlled laboratory environment|
Goals, questions, and paradigms 361 , 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire| | (b) The advantages of the field study are that the observer got to see how the device could be used in a real situation to solve a real problem. She experienced the delight expressed with the overall concept and the frustration with the interface. By watching how the group used the device "on the move," she gained an understanding of what they liked and needed. The disadvantage is that the observer was an "insider" in the group, so how objective could she be? The data is qualitative and while anecdotes can be very persuasive, how useful are they in evaluation? Maybe she was having such a good time that her judgment was clouded and she missed hearing negative comments and didn't notice some people's annoyance. Another study could be done to find out more, but it is not possible to replicate the exact situation, whereas the laboratory study is easier to replicate|
Goals, questions, and paradigms 361 , 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire| | The advantages of the laboratory are that several users performed the same task, so different users' performance could be compared and averages calculated. The observer could also be more objective because she was more of an outsider. The disadvantage is that the study is artificial and says nothing about how the device would be used in the real environment|
Goals, questions, and paradigms 361 , 362 Chapter 12 Observing users Comment and they appear to.have problems. The video recording and interaction log suggest that the screen is too small for the amount of information they need to access and this is supported by participants' answers on a user satisfaction questionnaire| | (c) Both types of studies have merits. Which is better depends on the goals of the study. The laboratory study is useful for examining details of the interaction style to make sure that usability problems with the interface and button design are diagnosed and corrected. The field study reveals how the phone is used in a real world context and how it integrates with or changes users' behavior. Without this study, it is possible that developers might not have discovered the enthusiasm for the phone because the reward for doing laboratory tasks is not as compelling as a good meal! Table 1 2.1 Type of okedetion Observation Controlled environment Field environment (i.e., lab-like) (i.e., natural) Outsider looking on "Quick and dirty" "Quick and dirty" In usability testing In field studies Insider (~ot applicable) Participant observation (e.g., in ethnography) |
Goals, questions, and paradigms 363 ,  | 12.2 Goals, questions, and paradigms 363 Table 12.1 summarizes this insider-outsider discussion, how it relates to different types of environments, and how much control evaluators take over the evaluation process|
Approaches to observation Observe ,  | 12.2.2 Approaches to observation Observers can be outsiders in the field and in the controlled environments, but they can't be insiders in a controlled environment. In the field it is possible to have varying degrees of "insider-outsiderness." In practice these distinctions are more difficult to describe than to experience! "Quick and dirty" observation "Quick and dirty" observations can occur anywhere, anytime. For example, evaluators often go into a school, home, or office to watch and talk to users in a casual way to get immediate feedback about a prototype or product. Evaluators can also join a group for a short time, which gives them a slightly more insider role. Quick and dirty observations are just that, ways of finding out what is happening quickly and with little formality|
Approaches to observation Observe ,  | Observation in usability testing Video and interaction logs capture everything that the user does during a usability test including keystrokes, mouse clicks, and their conversations. In addition, observers can watch through a one-way mirror or via a remote TV screen. The observational data is used to see and analyze what users do and how long they spend on different aspects of the task. It also provides insights into users' affective reactions|
Approaches to observation Observe ,  | For example, sighs, tense shoulders, frowns, and scowls speak of users' dissatisfaction and frustrations. The environment is controlled but users often forget that they are being observed. In addition, many evaluators also supplement findings from the laboratory with observations in the field|
Approaches to observation Observe ,  | Observation in field studies In field studies, as we have said, observers may be anywhere along the outsiderinsider spectrum. Looking on as an outsider, being a participant observer, or being an ethnographer brings a philosophy and practices that influence what data is collected, how data collection is done, and how the data is analyzed and reported|
Approaches to observation Observe ,  | Colin Robson (1993) summarizes the possible levels of participation as: complete participants, more marginal participants, observers who also participate, and people who observe from the outside and do not participate|
Approaches to observation Observe ,  | Whether and in what ways observers influence those being observed depends on the type of observation and the observer's skills. The goal is to cause as little disruption as possible. An example of outsider observation is when an observer is interested only in the presence of certain types of behavior. For instance, in a study |
Approaches to observation Observe , 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer| | 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer|
Approaches to observation Observe , 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer| | Inside observers may be participant observers or ethnographers. In participant observation evaluators participate with users in order to learn what they do and how and why they do it. A fully participant observer observes from the inside as a member of the group, which means she must not only be present to share experiences, but also learn the social conventions of the group, including beliefs and protocols, dress codes, communication conventions, use of language, and non-verbal communication. "Participant observation combines participation in the lives of the people under study with maintenance of a professional distance that allows adequate observation and recording of data" (Fetterman, 1998, p. 34-35)|
Approaches to observation Observe , 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer| | Ethnographers can be thought of as participant observers or not, depending on your point of view. Ethnographers themselves debate this issue. Some see participant observation as virtually synonymous with ethnography (Atkinson and Hammersley, 1994). Others view participant observation as a technique that is used in ethnography along with informants from the community, interviews with community members, and the study of community artifacts (Fetterman, 1998). Ethnographic evaluation is derived from ethnography. Ethnographic studies typically take weeks, months, or even longer to gain an "inside" understanding of what is going on in a community. Much shorter studies are usual in interaction design because of the time constraints imposed by development schedules|
Approaches to observation Observe , 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer| | As in any evaluation study, goals and questions determine whether the observation will be "quick and dirty," in a controlled environment or in the field, and the extent to which the observers are outsiders or insiders. Determining goals, exploring questions, and choosing techniques are necessary steps in the DECIDE framework|
Approaches to observation Observe , 364 Chapter 12 Observing users of the time spent by boys and girls using technology in the classroom, an observer may go into the classroom to note when technology is used by boys and when by girls. She could do this by standing at the back of the room with a data sheet on which she notes the gender of the children who use the computer and how long they spend using it. In contrast, if the goal is to understand how the computer integrates with other artifacts and social interactions in the classroom, a more holistic approach would be better. In this situation the evaluator might take more of an insider perspective in which she talks to participants as well as observes. The observer mixes and integrates with participants more, but there is no illusion that she is anything other than an observer| | Practical and ethical issues also have to be identified and decisions made about how to handle them|
How to observe The same basic data- ,  | 12.3 How to observe The same basic data-collection tools are used for laboratory and field studies (i.e., direct observation, taking notes, collecting video, etc.) but the way in which they are used is different. In the laboratory the emphasis is on the details of what individuals do, while in the field the context is important and the focus is on how people interact with each other, the technology, and their environment. Furthermore, the equipment in the laboratory is usually set up in advance and is relatively static, whereas in the field it usually must be moved around. In this section we discuss how to observe, and then examine the practicalities and compare data-collection tools. |
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment|last: | Many practical issues have to be thought about in advance, including the following|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | It is necessary to decide where users will be located so that the equipment can be set up. Many usability laboratories, for example, have two or three wall-mounted, adjustable cameras to record users' activities while they work on test tasks. One camera might record facial expressions, another might focus on mouse and keyboard activity, and another might record a broad view of the participant and capture body language. The stream of data from the cameras is fed into a video editing and analysis suite where it is annotated and partially edited. Another form of data that can be collected is an interaction log. This records all the user's key presses. Mobile usability laboratories, as the name suggests, are intended to be moved around, but the equipment can be bulky. Usually it is taken to a customer's site where a temporary laboratory environment is created|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | The equipment needs testing to make sure that it is set up and works as expected, e.g., it is advisable that the audio is set at the right level to record the user's voice|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | An informed consent form should be available for users to read and sign at the beginning of the study. A script is also needed to guide how users are greeted, and to tell them the goals of the study, how long it will last, and to explain their rights. It is also important to make users feel comfortable and at ease|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | Whether in a real or make-do laboratory one of the problems with this type of observation is that the observer doesn't know what users are thinking, and can only guess from what she sees|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | Think-aloud technique Imagine observing someone who has been asked to evaluate the interface of the web search engine Northernlight. The user, who has used the web only once before, is told to find a list of the books written by the well-known biologist Stephen Jay Gould. He is told to type http://www.northernlight.com and then proceed however he thinks best. He types the URL and gets a screen similar to the one in Figure 12.1|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | Next he goes to the search box but types Stephen Jay Gouild without realizing that he has made a typing error and added an 'i'. He presses return and gets a screen similar to the one in Figure 12.2|
How to observe The same basic data- , 1 2.3 How to observe 365 In controlled environments The role of the observer is to first collect and then make sense of the stream of data on video, audiotapes, or notes made while watching users in a controlled environment| | He is silent. What is going on, you wonder? What is he thinking? One way around this problem is to collect a think-aloud protocol, using a technique developed by Erikson and Simon for examining people's problem-solving strategies (Erikson and Simon, 1985). The technique requires people to say out loud everything that they are thinking and trying to do, so that their thought processes are externalized. |
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)| | 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)|
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)| | So, let's imagine an action replay of the situation just described, but this time the user has been instructed to think aloud: I'm typing in http://www.northernlight.com as you told me. (types) Now Ipress the enter key, right? (presses enter key) (pause and silence) It's taking a few moments to respond|
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)| | Oh! Here it is. (Figure 12.1 appears) Gosh, there's a lot of stuff on this screen, hmmm, I wonder what I do next. (pauses and looks at the screen) Probably a simple search. What's apower search and there's all these others too? I just want to$nd Stephen Jay Gould, right, and then it's bound to have a list of his books? (pause) Well, it looks like I should type his name in this box here. (moves cursor towards the search box. Positions cursor. Types 'Stephen Jay Gouild'. Pauses, but does not notice that he has incorrectly included an "i" in Gould, then clicks the search button.) Well, something seems to be happening. . . (Watches) something is happening|
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)|last: | Ah! What's this. . . (Looks at screen and Figure 12.2 appears) Silence. . |
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)|last: | Now you know more about what the user is trying to achieve but he is silent again|
How to observe The same basic data- , 366 Chapter 12 Observing users team of Jibmans and Figure 12.1 Home page of Northernlight search engine (www.northernlight.com)| | You can see that he has spelled Gould incorrectly and that he doesn't realize that he has typed Gouild. What you don't know is what he is thinking now or what is he |
How to observe 367 lsephen iqm a Et ,  | 12.3 How to observe 367 lsephen iqm a Etccuments that best match your search 1 71% . Directories C Lk Mamage Book 4 Marnage Book Fwr of ltawamba County, Mississippi was abstracted by Eioyie Grissom from the original records and typesel for web publication by. . llZEi12M Pamnal pege: http:/ / vwwv.nmrk-one.com/ -ithissod marr4.html 2|
How to observe 367 lsephen iqm a Et ,  | Union Database. WAME FNAME OLOSEC SEC GRAVE GRAVRA STATE WK ARM COMPANY REGIMEM DDATE DATE OPB WAR UNKNOWN COMMENT REF JOSEPH ... 1213111969 Educational mite: http:/ /w cwc.lsu.edu/ cd projectd dbasast chalm.la union.htm Copynghl g4 1997-2000. Northern hgM Technology Inc All nghts resewed Figure 12.2 The screen that appears in response to searching for Stephen Jay Gouild|
How to observe 367 lsephen iqm a Et ,  | looking at. Has he noticed his typing error or the Barnes and Noble box at the top left that says "Stephen Jay"? Try a think-aloud exercise yourself. Go to an e-commerce website, such as Amazon.com or BarnesandNoble.com, and look for something that you want to buy. Think aloud as you search and notice how you feel and behave. Did you find it difficult to keep speaking all the way through the task? Did you feel awkward? Did you stop when you got stuck? Comment You probably felt self-conscious and awkward doing this. Some people say they feel really embarrassed. At times you may also have started to forget to speak out loud because it feels like talking to yourself, which most of us don't do. YOU may also have found it difficult to think aloud when the task got difficult. In fact, you probably stopped speaking when the task became demanding, and that is exactly the time when an evaluator is most eager to hear your comments|
How to observe 367 lsephen iqm a Et , last: | The occurrence of these silences is one of the biggest problems with the thinkaloud technique|
How to observe 367 lsephen iqm a Et ,  | If a user is silent during a think-aloud protocol, the evaluator could interrupt .and remind him to think out loud, but that would be intrusive. Another solution is |
How to observe 367 lsephen iqm a Et , 368 Chapter 12 Observing users to have two people work together so that they talk to each other. Working with another person is often more natural and revealing because they talk in order to help each other along. This technique has been found particularly successful with children| | 368 Chapter 12 Observing users to have two people work together so that they talk to each other. Working with another person is often more natural and revealing because they talk in order to help each other along. This technique has been found particularly successful with children|
How to observe 367 lsephen iqm a Et , 368 Chapter 12 Observing users to have two people work together so that they talk to each other. Working with another person is often more natural and revealing because they talk in order to help each other along. This technique has been found particularly successful with children| | It is also very effective when evaluating systems intended to be used synchronously by groups of users, e.g., shared whiteboards|
How to observe 367 lsephen iqm a Et , 368 Chapter 12 Observing users to have two people work together so that they talk to each other. Working with another person is often more natural and revealing because they talk in order to help each other along. This technique has been found particularly successful with children| | I 12.3.2 In the field Whether the observer sets out to be an outsider or an insider, events in the field can be complex and rapidly changing. There is a lot for evaluators to think about, so many experts have a framework to structure and focus their observation. The framework can be quite simple. For example, this is a practitioner's framework that focuses on just three easy-to-remember items to look for: The person. Who is using the technology at any particular time? The place. Where are they using it? The thing. What are they doing with it? Frameworks like the one above help observers to keep their goals and questions in sight. Experienced observers may, however, prefer more detailed frameworks, such as the one suggested by Goetz and LeCompte (1984) below, which encourages observers to pay greater attention to the context of events, the people and the technology: Who is present? How would you characterize them? What is their role? What is happening? What are people doing and saying and how are they behaving? Does any of this behavior appear routine? What is their tone and body language? When does the activity occur? How is it related to other activities? Where is it happening? Do physical conditions play a role? Why is it happening? What precipitated the event or interaction? Do people have different perspectives? How is the activity organized? What rules or norms influence behavior? Colin Robson (1993) suggests a slightly longer but similar set of items: Space. What is the physical space like and how is it laid out? Actors. What are the names and relevant details of the people involved? Activities. What are the actors doing and why? Objects. What physical objects are present, such as furniture? Acts. What are specific individuals doing? Events. Is what you observe part of a special event? Goals. What are the actors trying to accomplish? Feelings. What is the mood of the group and of individuals? |
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | (b) There is considerable overlap between the two frameworks despite differences in wording. The main difference is that Robson's framework pays attention to the mood of the group|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | (c) The three-item framework is likely to be easy, but so is the Goetz and LeCompte framework because it adopts the much used organizing principle "who, what, when, where, why, how." Robson's framework has two extra items and no obvious way of remembering them. However, having said that, to me it is more explicit. Which is used for a particular study depends on the study goals and how much detail is I needed, and to a degree, it is also a matter of personal preference|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | These frameworks are useful not only for providing focus but also for organizing the observation and data-collection activity. Below is a checklist of things to plan before going into the field: State the initial study goal and questions clearly|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation|last: | Select a framework to guide your activity in the field|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | Decide how to record events-i.e., as notes, on audio, or on video, or using a combination of all three. Make sure you have the appropriate equipment and that it works. You need a suitable notebook and pens. A laptop computer might be useful but could be cumbersome. Although this is called observation, photographs, video, interview transcripts and the like will help to explain what you see and are useful for reporting the story to others|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | Be prepared to go through your notes and other records as soon as possible after each evaluation session to flesh out detail and check ambiguities with other observers or with the people being observed. This should be done routinely because human memory is unreliable. A basic rule is to do it within 24 hours, but sooner is better! As you make and review your notes, try to highlight and separate personal opinion from what happens. Also clearly note anything you want to go back to. Data collection and analysis go hand in hand to a large extent in fieldwork|
How to observe 367 lsephen iqm a Et , 1 2.3 How to observe 369 (a) Look at Goetz's and LeCompte's framework. Apart from there being more items than in the first framework, what is the other main difference? Comment (b) Now compare this framework with Robson's. What does Robson's attend to that is not obvious in Goetz's and LeCompte's framework? (c) Which of the three frameworks do you think would be easiest to remember and why? I (a) The Goetz and LeCompte framework pays much more attention to the context of the observation| | Be prepared to refocus your study as you analyze and reflect upon what you see. Having observed for a while, you will start to identify interesting |
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group|last: | Think about how you will gain the acceptance and trust of those you observe|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | Adopting a similar style of dress and finding out what interests the group and showing enthusiasm for what they do will help. Allow time to develop relationships|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | Fixing regular times and venues to meet is also helpful, so everyone knows what to expect. Also, be aware that it will be easier to relate to some people than others, and it will be tempting to pay attention to those who receive you well, so make sure you attend to everyone in the group|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | Think about how to handle sensitive issues, such as negotiating where you can go. For example, imagine you are observing the usability of a portable home communication device. Observing in the living room, study, and kitchen is likely to be acceptable, but bedrooms and bathrooms are probably out of bounds. Take time to check what participants are comfortable with and be accommodating and flexible. Your choice of equipment for data collection will also influence how intrusive you are in people's lives|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | Consider working as a team. This can have several benefits; for instance, you can ~gmpare your observations. Alternatively, you can agree to focus on different people or different parts of the context. Working as a team is also likely to generate more reliable data because you can compare notes among different evaluators|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | Consider checking your notes with an informant or members of the group to ensure that you are understanding what is happening and that you are making good interpretations|
How to observe 367 lsephen iqm a Et , 370 Chapter 12 Observing users phenomena that seem relevant. Gradually you will sharpen your ideas into questions that guide further observation, either with the same group or with a new but similar group| | plan to look at the situation from different perspectives. For example, you may focus on particular activities or people. If the situation has a hierarchical structure, as in many companies, you will get different perspectives from different layers of management-e.g., end-users, marketing, product developers, product managers, etc|
Participant observation and ethno ,  | 12.3.3 Participant observation and ethnography Being a participant observer or an ethnographer involves all the practical steps just mentioned, but especially that the evaluator must be accepted into the group. An interesting example of participant observation is provided by Nancy Baym's work (1997) in which she joined an online ~ommunity interested in soap operas for over a year in order to understand how the community functioned. She told the community what she was doing and offered to share her findings with them. This honest approach gained her their trust, and they offered support and helpful comments|
Participant observation and ethno ,  | As Baym participated she learned about the community, who the key characters were, how people interacted, their values, and the types of discussions that were generated. She kept all the messages as data to be referred to later. She also |
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | She summarizes her data collection as follows (Baym, 1997, p. 104): The data for this study were obtained from three sources. In October 1991,I saved all the messages that appeared. . . . I collected more messages in 1993. Eighteen participants responded to a questionnaire Iposted. . . . Personal email correspondence with 10 other . . . participants provided further information. I posted two notices to the group explaining the project and offering to exclude posts by those who preferred not to be involved. No one declined to participate|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | Using this data, Baym examined the group's technical and participatory structure, its emergent traditions, and its usage with the technology. As the work evolved, she shared its progress with the group members, who were supportive and helpful|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | Drawing on your experience of using email, bulletin boards, UseNet News, or chat rooms, how might participant observation online differ from face-to-face participant observation? Comment In online participant observation you don't have to look people in the eye, deal with their skepticism, or wonder what they think of you, as you do in face-to-face situations. What you wear, how you look, or the tone of your voice don't matter. However, what you say or don't say and how you say it are central to the way others will respond to you. Online you only see part of people's context. You usually can't see how they behave off line, how they present themselves, their body language, how they spend their day, their personalities, who is present but not participating, etc|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | As we said the distinction between ethnography and participant observation is blurred. Some ethnographers believe that ethnography is an open interpretivist approach in which evaluators keep an open mind about what they will see. Others, such as David Fetterman from Stanford University, see a stronger role for a theoretical underpinning: "before asking the first question in the field the ethnographer begins with a problem, a theory or model, a research design, specific data collection techniques, tools for analysis, and a specific writing style" (Fetterman, 1998, p. 1)|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | This may sound as if ethnographers have biases, but by making assumptions explicit and moving between different perspectives, biases are at least reduced|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information|last: | Ethnographic study allows multiple interpretations of reality; it is interpretivist|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | Data collection and analysis often occur simultaneously in ethnography, with analysis happening at many different levels throughout the study. The question being investigated is refined as more understanding about the situation is gained|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | The checklist below (Fetterman, 1998) for doing ethnography is similar to the general list just mentioned: Identify a problem or goal and then ask good questions to be answered by the study, which may or may not invoke theory depending on your philosophy of ethnography. The observation framework such as those mentioned above can help to focus the study and stimulate questions. |
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | I 372 Chapter 12 Observing users The most important part of fieldwork is just being there to observe, ask questions, and record what is seen and heard. You need to be aware of people's feelings and sensitive to where you should not go|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | Collect a variety of data, if possible, such as notes, still pictures, audio and video, and artifacts as appropriate. Interviews are one of the most important data-gathering techniques and can be structured, semi-structured, or open|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | So-called retrospective interviews are used after the fact to check that interpretations are correct|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | As you work in the field, be prepared to move backwards and forwards between the broad picture and specific questions. Look at the situation holistically and then from the perspectives of different stakeholder groups and participants. Early questions are likely to be broad, but as you get to know the situation ask more specific questions|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | Analyze the data using a holistic approach in which observations are understood within the broad context-i.e., they are contextualized. To do this, first synthesize your notes, which is best done at the end of each day, and then check with someone from the community that you have described the situation accurately. Analysis is usually iterative, building on ideas with each pass|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | I Look at the steps listed for doing ethnography and compare them with the earlier generic set for field observation (see Section 12.3.2). What is the main difference? Comment Both sets of steps involve structuring observations and refining goals and questions through knowledge gained during the study. Both use similar data collection techniques and rely on the trust and cooperation of those being observed. Ethnographers tend to be deeply irnmersed in the group, whereas not everyone doing field studies takes this approach. Some ethnographers, such as David Fetterman, are guided by theory; others are strongly against this and believe that ethnography should be approached open-mindedly|
Participant observation and ethno , 1 2.3 How to observe 371 I adapted interviewing and questionnaire techniques to collect additional information| | During the last ten years ethnography has gained credibility in interaction design because if products are to be used in a wide variety of environments designers must know the context and ecology of those environments (Nardi and O'Day, 1999). However, for those unfamiliar with ethnography and general field observation there are two dilemmas. The first dilemma is, "When have I observed |
Data collection 373 enough?" The se ,  | 12.4 Data collection 373 enough?" The second dilemma is, "How can I adapt ethnography so that it better fits the short development cycles and the mindset of the developers?" What are the main differences between the stages that Rose et al. (1995) describe and the steps suggested by Fetterman (1998)? Comment The list in the "How Can I Adapt Ethnography" dilemma suggests that the evaluators are not as immersed in the study as Fetterman's process suggests. One aim of the Rose procedure is radically to reduce the time needed to do a study so that it is compatible with system development. Another aim is to reduce the data to a quantifiable form so that it is familiar and acceptable to the developers|
Data collection Data collection tec ,  | 12.4 Data collection Data collection techniques (i.e., taking notes, audio recording, and video recording) are used individually or in combination and are often supplemented with |
Data collection Data collection tec , 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on| | 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on|
Data collection Data collection tec , 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on| | I 1 2.4.1 Notes plus still camera Taking notes is the least technical way of collecting data, but it can be difficult and tiring to write and observe at the same time. Observers also get bored and the speed at which they write is limited. Working with another person solves some of these problems and provides another perspective. Handwritten notes are flexible in the field but must be transcribed. However, this transcription can be the first step in data analysis, as the evaluator must go through the data and organize it. A laptop computer can be a useful alternative but it is more obtrusive and cumbersome, and its batteries need recharging every few hours. If a record of images is needed, photographs, digital images, or sketches are easily collected|
Data collection Data collection tec , 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on| | Audio recording plus still camera Audio can be a useful alternative to note taking and is less intrusive than video. It allows evaluators to be more mobile than with even the lightest, battery-driven video cameras, and so is very flexible. Tapes, batteries, and the recorder are now relatively inexpensive but there are two main problems with audio recording. One is the lack of a visual record, although this can be dealt with by carrying a small camera|
Data collection Data collection tec , 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on| | The second drawback is transcribing the data, which can be onerous if the contents of many hours of recording have to be transcribed; often, however, only sections are needed. Using a headset with foot control makes transcribing less onerous|
Data collection Data collection tec , 374 Chapter 12 Observing users photos from a still camera. When different kinds of data are collected, evaluators have to coordinate them; this requires additional effort but has the advantage of providing more information and different perspectives. Interaction logging and participant diary studies are also used, as we discuss later in Section 12.5. Which techniques are used will depend on the context, time available, and the sensitivity of what is being observed. In most settings, audio, photos, and notes will be sufficient. In others it is essential to collect video data so as to observe in detail the intricacies of what is going on| | Many studies do not need this level of detail; instead, evaluators use the recording to remind them about important details and as a source of anecdotes for reports|
Video Video has the advantage of  , last: | 12.4.3 Video Video has the advantage of capturing both visual and audio data but can be intrusive|
Video Video has the advantage of  ,  | However, the small, handheld, battery-driven digicams are fairly mobile, inexpensive and are commonly used|
Video Video has the advantage of  ,  | A problem with using video is that attention becomes focused on what is seen through the lens. It is easy to miss other things going on outside of the camera view|
Video Video has the advantage of  ,  | When recording in noisy conditions, e.g., in rooms with many computers running or outside when it is windy, the sound may get muffled|
Video Video has the advantage of  ,  | Analysis of video data can be very time-consuming as there is so much to take note of. Over 100 hours of analysis time for one hour of video recording is common for detailed analyses in which every gesture and utterance is analyzed. However, this |
Data co:o(lection 375 610 (B I989 J ,  | 12.4 Data co:o(lection 375 610 (B I989 Jim Unger "This is a video of you two watching the video of our vacation." level of detail is usually not needed because evaluators often focus on particular episodes and use the whole recording only for contextual information and reference|
Data co:o(lection 375 610 (B I989 J ,  | In Table 12.2 we summarize the key features, advantages and drawbacks of these three combinations of data collection techniques|
Data co:o(lection 375 610 (B I989 J ,  | Imagine you are a consultant who is employed to help develop a new computerized gardenplanning tool to be used by amateur and professional garden designers. Your goal is to find out how garden designers use an early prototype as they walk around their clients' gardens sketching design ideas, taking notes, and asking the clients about what they like and how they and their families use the garden. What are the advantages and disadvantages of the three types of data-collection techniques in this environment? I Comment Handwritten notes do not require specialist equipment. They are unobtrusive and very flexible but difficult to do while walking around a garden. If it starts to rain there is no equipment to get wet, but taking notes is tiring, people lose concentration, biases creep in, and handwriting can be difficult to decipher. Video captures more information (e.g., the landscape, where the designers are looking, sketches, comments, etc.) but it is more intrusive, you must also carry equipment and film and what happens if it starts to rain? You also need access to |
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Headset useful for easy transcription|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Flexibility of use Very flexible|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Unobtrusive|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Unobtrusive|: Flexible. Relatively unobtrusive|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | Unobtrusive|: Completeness of data Only get what note-taker Can obtain complete thinks is important and audio recording but can record in the time visual data is missing|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | Unobtrusive|: available. Problem with Notes, photographs, inexperienced evaluators. sketches can augment recording but need coordinating with the recording|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Unobtrusive|: Disturbance to users Very low. Low but cassette must be changed and microphone positioned|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | Unobtrusive|: Reliability of data May be low. Relies on High but external noise, humans making a good e.g. fans in computers record and knowing can muffle what is said|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | Unobtrusive|: what to record|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | what to record|: Analysis Relatively easy to Critical discussions can be transcribe. Rich identified. Transcription descriptions can be needed for detailed produced. analysis. Permanent Transcribing data can be original record that onerous or a useful first can be revisited|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | what to record|: step in data analysis|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | step in data analysis|: Feedback to design Relies strongly on Material captured on team the authority of the tape is more convincing evaluator. than notes but feedback relies on authority of evaluator|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Needs positioning and focusing camera lens. Even portable versions can be bulky|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | step in data analysis|: Most complete method of data collecting, especially if more than one camera used, but coordination of video material is needed|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Can be very obtrusive. Care needed to avoid Hawthorne effect|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Can be high but depends on what camera is focused on|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Critical incidents can be identified and tagged|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Automated support needed for detailed analysis|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed|last: | step in data analysis|: Permanent original record that can be revisited|
Data co:o(lection 375 610 (B I989 J , 376 Chapter 12 Observing users Table 12.2 Comparison of the three main data-collection techniques used in observation Criterion -- -- - Notes ~lus camera Audio ~lus camera Video Equipment Paper, pencil and camera Inexpensive, handheld More expensive. Editing, are easily available. recorder with a good mixing and analysis microphone. equipment needed| | step in data analysis|: Hard to dispute material captured on video. Video clips are very powerful for communicating ideas. |
Data co:o(lection 375 610 (B I989 J , 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity| | 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity|
Data co:o(lection 375 610 (B I989 J , 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity| | You could also supplement notes and audio with a still camera. I I 1 1 2.5 Indirect observation: tracking users' activities Sometimes direct observation is not possible because it is obtrusive or evaluators cannot be present over the duration of the study, and so users' activities are tracked indirectly. Diaries and interaction logs are two techniques for doing this|
Data co:o(lection 375 610 (B I989 J , 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity| | From the records collected evaluators reconstruct what happened and look for usability and user experience problems|
Data co:o(lection 375 610 (B I989 J , 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity| | I I I 12.5.1 Diaries I Diaries provide a record of what users did, when they did it, and what they thought about their interactions with the technology. They are useful when users are scattered and unreachable in person, as in many Internet and web evaluations. Diaries are inexpensive, require no special equipment or expertise, and are suitable. for long-term studies. Templates can also be created online to standardize entry format and enable the data to go straight into a database for analysis. These templates are like those used in open-ended online questionnaires. However, diary studies rely on participants being reliable and remembering to complete them, so incentives are needed and the process has to be straightforward and quick. Another problem is that participants often remember events as being better or worse than they really were, or taking more or less time than they actually did|
Data co:o(lection 375 610 (B I989 J , 1 2.5 Indirect observation: tracking users' activities 377 playback and editing facilities. Audio could be a good compromise, but integrating sketches and other artifacts later can be a burden and garden planning is a highly visual, aesthetic activity| | Robinson and Godbey (1997) asked participants in their study to record how much time Americans spent on various activities. These diaries were completed at the end of each day and the data was later analyzed to investigate the impact of television on people's lives. In another diary study, Barry Brown and his colleagues from Hewlett Packard collected diaries form 22 people to examine when, how, and why they capture different types of information, such as notes, marks on paper, scenes, sounds, moving images, etc. (Brown, et al., 2000). The participants were each given a small handheld camera and told to take a picture every time they captured information in any form. The study lasted for seven days and the pictures were used as memory joggers in a subsequent semi-structured interview used to get participants to elaborate on their activities. Three hundred and eighty-one activities were recorded. The pictures provided useful contextual information. From this data the evaluators constructed a framework to inform the design of new digital cameras and handheld scanners|
Interaction logging Interaction l ,  | 12.5.2 Interaction logging Interaction logging in which key presses, mouse or other device movements are recorded has been used in usability testing for many years. Collecting this data is |
Interaction logging Interaction l , 378 Chapter 12 Observing users I usually synchronized with video and audio logs to help evaluators analyze users' behavior and understand how users worked on the tasks they set. Specialist software tools are used to collect and analyze the data. The log is also time-stamped so it can be used to calculate how long a user spends on a particular task or lingered in a certain part of a website or software application| | 378 Chapter 12 Observing users I usually synchronized with video and audio logs to help evaluators analyze users' behavior and understand how users worked on the tasks they set. Specialist software tools are used to collect and analyze the data. The log is also time-stamped so it can be used to calculate how long a user spends on a particular task or lingered in a certain part of a website or software application|
Interaction logging Interaction l , 378 Chapter 12 Observing users I usually synchronized with video and audio logs to help evaluators analyze users' behavior and understand how users worked on the tasks they set. Specialist software tools are used to collect and analyze the data. The log is also time-stamped so it can be used to calculate how long a user spends on a particular task or lingered in a certain part of a website or software application|last: | Explicit counters that record visits to a website were once a familiar sight|
Interaction logging Interaction l , 378 Chapter 12 Observing users I usually synchronized with video and audio logs to help evaluators analyze users' behavior and understand how users worked on the tasks they set. Specialist software tools are used to collect and analyze the data. The log is also time-stamped so it can be used to calculate how long a user spends on a particular task or lingered in a certain part of a website or software application| | Recording the number of visitors to a site can be used to justify maintenance and upgrades to it. For example, if you want to find out whether adding a bulletin board to an e-commerce website increases the number of visits, being able to compare traffic before and after the addition of the bulletin board is useful. You can also track how long people stayed at the site, which areas they visited, where they came from, and where they went next by tracking their Internet Service Provider (I.S.P.) address. For example, in a study of an interactive art museum by researchers at the University of Southern California, server logs were analyzed by tracking visitors in this way (McLaughIin et al., 1999). Records of when people came to the site, what they requested, how long they looked at each page, what browser they were using, and what country they were from, etc., were collected I over a seven-month period. The data was analyzed using Webtrends, a commercial analysis tool, and the evaluators discovered that the site was busiest on weekday evenings. In another study that investigated lurking behavior in listserver discussion groups, the number of messages posted was compared with list memI  bership over a three-month period to see how lurking behavior differed among I groups (Nonnecke and Preece, 2000)|
Interaction logging Interaction l , 378 Chapter 12 Observing users I usually synchronized with video and audio logs to help evaluators analyze users' behavior and understand how users worked on the tasks they set. Specialist software tools are used to collect and analyze the data. The log is also time-stamped so it can be used to calculate how long a user spends on a particular task or lingered in a certain part of a website or software application| | An advantage of logging user activity is that it is unobtrusive, but this also raises ethical concerns that need careful consideration (see the dilemma about observing without being seen). Another advantage is that large volumes of data can be logged automatically. However, powerful tools are needed to explore and analyze this data quantitatively and qualitatively. An increasing number of visualization tools are being developed for this purpose; one example is WebLog, which dynamically shows visits to websites, as illustrated in Figure 12.3 (Hochheiser and Shneiderman, 2000). |
Analyzing, interpreting, and presen ,  | 12.6 Analyzing, interpreting, and presenting the data 379 Figure 12.3 A display from WebLog, time vs. URL (Hochheiser and Shneiderman, 2001)|
Analyzing, interpreting, and presen ,  | The requested URL is on the y-axis, with the date and time on the x-axis. The dark lines on the x-axis correspond to weekends. Each circle represents a request for a single page, and the size of the circle indicates the number of bytes delivered for a given request. (Color, which is not shown here, indicates the Http status response.) 12.6 Analyzing, interpreting, and presenting the data By now you should know that many, indeed most observational evaluations generate a lot of data in the form of notes, sketches, photographs, audio and video records of interviews and events, various artifacts, diaries, and logs. Most observational data is qualitative and analysis often involves interpreting what users were doing or saying by looking for patterns in the data. Sometimes qualitative data is categorized so that it can be quantified and in some studies events are counted|
Analyzing, interpreting, and presen ,  | Dealing with large volumes of data, such as several hours of video, is daunting, which is why it is particularly important to plan observation studies very carefully before starting them. The DECIDE framework suggests identifying goals and questions first before selecting techniques for the study, because the goals and questions help determine which data is collected and how it will be analyzed|
Analyzing, interpreting, and presen ,  | When analyzing any kind of data, the first thing to do is to "eyeball" the data to see what stands out. Are there patterns or significant events? Is there obvious evidence that appears to answer a question or support a theory? Then proceed to analyze it according to the goals and questions. The discussion that follows focuses on three types of data: Qualitative data that is interpreted and used to tell "the story" about what was observed|
Analyzing, interpreting, and presen , last: | Qualitative data that is categorized using techniques such as content analysis|
Analyzing, interpreting, and presen ,  | Quantitative data that is collected from interaction and video logs and presented as values, tables, charts and graphs and is treated statistically. |
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | In the interview with Sara Bly you will read about how she and her colleagues use data from several sources. At the end of each observation period they review their data, discuss what they observed, and construct a story from the data. This story evolves as more data is collected and more insights are generated. Teamwork plays an important role in this process because it provides different perspectives that can be compared. A large part of the analysis involves making "collections" of incidents or anecdotes that illustrate similar issues. For example, if several people comment at different times that it is hard to track down a manager in a particular work setting, these examples are powerful evidence of the need for better I communication|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | To summarize, the main activities involved in working with qualitative data to I tell a story are: I Review the data after each observation session to synthesize and identify key themes and make collections|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Record the themes in a coherent yet flexible form, with examples. While post-its enable you to move ideas around and group similar ones, they can fall off and get lost and are not easily transported, so capture the main points in another form, either on paper or on a laptop, or make an audio recording|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Record the date and time of each data analysis session. (The raw data should already be systematically logged with dates.) As themes emerge, you may want to check your understanding with the people you observe or your informants|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Iterate this process until you are sure that your story faithfully represents what you observed and that you have illustrated it with appropriate examples from the data|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Report your findings to the development team, preferably in an oral presentation as well as in a written report. Reports vary in form, but it is always helpful to have a clear, concise overview of the main findings presented at the beginning|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Analyzing and reporting ethnographic dafa Ethnographers work in a similar way but emphasize understanding events within the context in which they happen|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | Data is collected from participant observation, interviews, and artifacts, and analysis is continuous with great attention to detail. Ethnographers reconstruct knowledge to produce detailed descriptions known as rich or thick descriptions|
Analyzing, interpreting, and presen , 380 Chapter 12 Observing users I 12.6.1 Qualitative analysis to tell a story I Much of the power of analyzing descriptive data lies in being able to tell a convincing story, illustrated with powerful examples that help to confirm the main points and will be credible to the development team. It is hard to argue with wellchosen video excerpts of users interacting with technology or anecdotes from transcripts| | In these descriptions, quotes, pictures, and anecdotes play a convincing role in communicating the findings to others. The main activities in analyzing ethno- |
Analyzing, interpreting, and presen ,  | 12.6 Analyzing, interpreting, and presenting the data 381 graphic data are similar to those just mentioned but notice the emphasis on detail (Fetterman, 1998): Look for key events within a group that speak about what drives the group's activity|
Analyzing, interpreting, and presen , last: | Look for patterns of behavior in various situations and among different players|
Analyzing, interpreting, and presen ,  | With experience, ethnographers build up sets of knowledge from various sources, asking questions, listening, probing, comparing and contrasting, synthesizing, and evaluating information|
Analyzing, interpreting, and presen , last: | Compare sources of data against each other to provide consistent explanations|
Analyzing, interpreting, and presen ,  | Finally, report your findings in a convincing and honest way. Writing is part of the analysis since it helps to crystallize ideas|
Analyzing, interpreting, and presen ,  | Software tools, such as NUDIST and Ethnograph, allow ethnographers to code their notes and artifact descriptions so that they can be sorted, searched, and retrieved|
Analyzing, interpreting, and presen ,  | For example, using NUDIST, field notes can be searched for key words or phrases and a report printed listing every occasion the word or phrase is used. The information can also be printed out as a tree showing the relationship of occurrences|
Analyzing, interpreting, and presen ,  | Similarly, NUDIST can be used to search a body of text to identify specific predetermined categories or words for content analysis. The more copious the notes, the more useful tools like NUDIST are. Furthermore, many exploratory searches can be done to test hypotheses among different categories of data|
Analyzing, interpreting, and presen ,  | Other computerized tools support basic statistical analysis. For example, some data can be analyzed using statistical tests (such as chi-square contingency table analysis or rank correlation) to determine whether particular trends are significant|
Analyzing, interpreting, and presen , 1 2.6.2 Qualitative analysis for categorization Data from think-aloud protocols, video, or audio transcripts can be analyzed in different ways. These can be coarse-grained or detailed analyses of excerpts from a protocol in which each word, phrase, utterance, or gesture is analyzed. Sometimes examining the comment or action in the context of other behavior is sufficient. In this section we discuss a selection of techniques. Some are used more often in research while others are used more for product development| | 1 2.6.2 Qualitative analysis for categorization Data from think-aloud protocols, video, or audio transcripts can be analyzed in different ways. These can be coarse-grained or detailed analyses of excerpts from a protocol in which each word, phrase, utterance, or gesture is analyzed. Sometimes examining the comment or action in the context of other behavior is sufficient. In this section we discuss a selection of techniques. Some are used more often in research while others are used more for product development|
Analyzing, interpreting, and presen , 1 2.6.2 Qualitative analysis for categorization Data from think-aloud protocols, video, or audio transcripts can be analyzed in different ways. These can be coarse-grained or detailed analyses of excerpts from a protocol in which each word, phrase, utterance, or gesture is analyzed. Sometimes examining the comment or action in the context of other behavior is sufficient. In this section we discuss a selection of techniques. Some are used more often in research while others are used more for product development| | Looking for incidents or patterns Analyzing even a short half-hour videotape would be very time-consuming if evaluators studied every comment or action in detail. Furthermore, such finegrained analyses are often not necessary. A common strategy is to look for critical incidents, such as times when users were obviously stuck. Such incidents are usually marked by a comment, silence, looks of puzzlement, etc. Evaluators focus on these incidents and review them in detail, using the rest of the video as context to inform their analysis. For example, Jurgen Koenemann-Belliveau et al|
Analyzing, interpreting, and presen , 1 2.6.2 Qualitative analysis for categorization Data from think-aloud protocols, video, or audio transcripts can be analyzed in different ways. These can be coarse-grained or detailed analyses of excerpts from a protocol in which each word, phrase, utterance, or gesture is analyzed. Sometimes examining the comment or action in the context of other behavior is sufficient. In this section we discuss a selection of techniques. Some are used more often in research while others are used more for product development|last: | (1994) used this approach to compare the efficacy of two versions of a Smalltalk |
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked| | 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked|
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked| | Taking this approach, they were able to trace through a sequence of incidents and achieve a more holistic understanding of the problem. For example they found that they needed to emphasize how objects interact in teaching object-oriented programming|
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked| | Theory may also be used to guide the study. Wendy Mackay et al. (2000) took this approach in analyzing a four-minute excerpt from a video of users working with a new software tool. Using Activity Theory to guide their analysis, they identified 19 shifts in attention between different parts of the tool interface and the task at hand. (In fact, some users spent so much time engaged in these shifts that they lost track of their original task.) Using the theory helped the evaluators to focus on relevant incidents|
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked| | Whether your analysis is coarse-grained or finer, whether you are guided by theory or are just looking for incidents and patterns of behavior, you need a way of handling your data and recording your analysis. For example, in another part of their study, Wendy Mackay et al. (2000) collected and analyzed video excerpts of users interacting with their tool and constructed a form of paper storyboards. The series of images taken from the video illustrated the changes made through the task, while the accompanying text descriptions provided details about the precise operations performed and the difficulties encountered|
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked|last: | A variety of tools are available to record, manipulate and search the data|
Analyzing, interpreting, and presen , 382 Chapter 12 Observing users programming manual for supporting novice programmers. They used a form of critical incident analysis to examine breakdowns or problems in achieving a programming task and also to identify possible threats of incidents. This enabled them to identify specific problems that might otherwise have been overlooked| | NUDIST was mentioned above and Box 12.1 briefly describes the Observer VideoPro tool. Typically reports from these analyses are fed back to the development team, often accompanied by video clips. |
Analyzing, interpreting, and presen ,  | 12.6 Analyzing, interpreting, and presenting the data 383 I What does the Observer Video-Pro tool allow you to search for in the data collected? Comment Depending on how the logs have been annotated, using the Observer Video-Pro product, you can search the data for various things including the following: Video time-A specific time, e.g., 02:24:36.04 (hh:mm: ss.dd)|
Analyzing, interpreting, and presen , last: | Marker-A previously entered free-format annotation|
Analyzing, interpreting, and presen ,  | Event-A combination of actor, behavior, and modifiers, with optional wildcards (e.g., the first occurrence of "glazed look" or "Sarah approaches Janice")|
Analyzing, interpreting, and presen , last: | Text-Any word or alphanumeric text string occurring in the coded event records or freeformat notes|
Analyzing, interpreting, and presen ,  | Analyzing data into categories Content analysis provides another fine grain way of analyzing video data. It is a systematic, reliable way of coding content into a meaningful set of mutually exclusive categories (Williams et al., 1988). The content categories are determined by the evaluation questions and one of its most challenging aspects is determining meaningful categories that are orthogonal-i.e., do not overlap each other in any way|
Analyzing, interpreting, and presen ,  | Deciding on the appropriate granularity is another issue to be addressed. The content categories must also be reliable so that the analysis can be replicated. This can be demonstrated by training a second person to use the categories. When training is complete, both researchers analyze the same data sample. If there is a large discrepancy between the two analyses, either training was inadequate or the categorization is not working and needs to be refined. By talking to the researchers you can determine the source of the problem, which is usually with the categorization|
Analyzing, interpreting, and presen ,  | If so, then a better categorization scheme needs to be devised and re-tested by doing more inter-researcher reliability tests. However, if the researchers do not seem to know how to carry out the process then they probably need more training|
Analyzing, interpreting, and presen ,  | When a high level of reliability is reached, it can be quantified by calculating an inter-research reliability rating. This is the percentage of agreement between the two researchers, defined as the number of items that both categorized in the same way expressed as a percentage of the total number of items examined. It provides a measure of the efficacy of the technique and the categories|
Analyzing, interpreting, and presen ,  | Content analysis per se is not used very often in evaluations because it is very labor-intensive and time-consuming but a study by Maria Ebling and Bonnie John (2000) showed how useful it can be. They developed a hierarchical content classification for analyzing data when evaluating a graphical interface for a distributed file system|
Analyzing, interpreting, and presen ,  | Analyzing discourse Another approach to video, and audio analysis is to focus on the dialog, i.e., the meaning of what is said, rather than the content. Discourse analysis is strongly interpretive, pays great attention to context, and views language not only as reflecting psychological and social aspects but also as constructing it (Coyle, 1995). An |
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)|
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | Small changes in wording can change meaning, as the following excerpts indicate (Coyle, 1995): Discourse analysis is what you do when you are saying that you are doing discourse analysis. . . . According to Coyle, discourse analysis is what you do when you are saying that you are doing discourse analysis. . . |
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | By adding just three words "According to Coyle," the sense of authority changes, depending on what the reader knows about Coyle's work and reputation. Some analysts also suggest that a useful approach is to look for variability either within or between individuals|
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | Analyzing discourse on the Internet (e.g., in chatrooms, bulletin boards, and virtual worlds) has started to influence designers' understanding about users' needs in these environments. Conversation analysis is a very fine-grained form of discourse analysis that can be used for this purpose. In conversational analysis the semantics of the discourse are examined in fine detail. The focus is on how conversations are conducted. This technique is used in sociological studies and examines how conversations start, how turntaking is structured, and other rules of conversation. It can also be very useful when comparing conversations that take place during video-mediated sessions or in computer-mediated communication such as chatrooms as discussed in Chapter 4|
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | Quantitative data analysis Video data collected in usability laboratories is usually annotated as it is observed|
Analyzing, interpreting, and presen , 384 Chapter 12 Observing users underlying assumption of discourse analysis is that there is no objective scientific truth. Language is a form of social reality that is open to interpretation from different perspectives. In this sense, the underlying philosophy of discourse analysis is similar to that of ethnography. Language is viewed as a constructive tool and discourse analysis provides a way of focusing upon how people use language to construct versions of their worlds (Fiske, 1994)| | Small teams of evaluators watch monitors showing what is being recorded in a control room out of the users' sight. As they see errors or unusual behavior, one of the evaluators marks the video and records a brief remark. When the test is finished evaluators can use the annotated recording to calculate performance times so they can compared users' performance on different prototypes. The data stream from the interaction log is used in a similar way to calculate performance times. Typically this data is further analyzed using simple statistics such as means, standard deviations, T-tests, etc. Categorized data may also be quantified and analyzed statistically, as we have said|
Feeding the findings back into de ,  | 12.6.4 Feeding the findings back into design The results from an evaluation can be reported to the design team in several ways, as we have indicated. Clearly written reports with an overview at the beginning and detailed content list make for easy reading and a good reference document. Includ- |
Feeding the findings back into de ,  | Summary 385 ing anecdotes, quotations, pictures, and video clips helps to bring the study to life, stimulate interest, and make the written description more meaningful. Some teams like quantitative data, but its value depends on the type of study and its goals. Verbal presentations that include video clips can also be very powerful. Often both qualitative and quantitative data analysis are useful becuase they provide alternative perspectives|
Feeding the findings back into de ,  | Assignment The aim of this assignment is for you to learn to do field obsewation. To do the assignment you will need to find a group of people or a single individual engaged in using one of the following: a mobile phone, a VCR, a photocopying machine, computer software, or some other type of technology that interests you. Assume that you have been employed to improve the product, either by doing a redesign or by creating a completely new product. You can observe people in your family, your friends, or people in your class or local community group|
Feeding the findings back into de ,  | For this assignment you should: (a) Consider what the basic goal of "improving the product" means. What initial questions might you ask? (b) Watch the group (or person) casually to get an understanding of issues that might create challenges for you doing this assignment and information that might enable you to refine your questions|
Feeding the findings back into de ,  | (c) Then plan your study: (i) Think again about what questions will help direct your observation. What are you evaluating? (ii) Decide where on the outsider-insider spectrum of observers you wish to be|
Feeding the findings back into de ,  | (iii) Prepare an informed consent form and any scripts that you need to introduce yourself and your study|
Feeding the findings back into de ,  | (iv) Decide how you will collect data and prepare any data-collection sheets needed; acquire and test any equipment needed|
Feeding the findings back into de , last: | (v) Decide how you will analyze the data that you collect|
Feeding the findings back into de ,  | (vi) Think through the DECIDE framework. Is everything covered? (vii) If so, do a pilot study to check your preparation|
Feeding the findings back into de , last: | (d) Carry out your study but limit its scope. For example, plan two half-hour observation periods|
Feeding the findings back into de , last: | (e) Now analyze your data using the method chosen above|
Feeding the findings back into de ,  | (f) Write a report about what you did and why; describe your data, how you analyzed it, and your findings|
Feeding the findings back into de , last: | (g) Suggest some ways in which the product might be improved|
Feeding the findings back into de ,  | Summary Observing users in the field enables designers to see how technology is used in context. It is valuable for confirming designers' understanding of users' needs and for exploring new design ideas. Various amounts of control, intervention, and involvement with users are possible. |
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Key points Observation in usability testing tends to be objective, from the outside. The observer watches and analyzes what happens|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | In contrast, in participant observation the evaluator works with users to understand their activities, beliefs and feelings within the context in which the technology is used|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | Ethnography uses a set of techniques that include participant observation and interviews|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | Ethnographers immerse themselves in the culture that they study|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | The way that observational data is collected and analyzed depends on the paradigm in which it is used: quick and dirty, user testing, or field studies|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Combinations of video, audio and paper records, data logging, and diaries can be used to collect observation data|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | In participant observation, collections of comments, incidents, and artifacts are made during the observation period. Evaluators are advised to discuss and summarize their findings as soon after the observation session as possible|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Analyzing video and data logs can be difficult because of the sheer volume of data. It is important to have clearly specified questions to guide the process and also access to appropriate tools|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Evaluators often flag events in real time and return to examine them in more detail later. Identifying key events is an effective approach. Fine-grained analyses can be very time-consuming|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Fuither reading BLY, S. (1997) Field work: Is it product work? Interactions, January and February, 25-30. This article provides additional information to supplement the interview with Sara Bly. It gives a broad perspective on the role of participant observation in product development|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | BOGDEWIC, S. P. (1992) Participant observation. In B. F|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | Crabtree and W. L. Miller (eds.), Doing Qualitative Research|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | Newbury Park, CA: Sage, 45-69. This chapter provides an introduction to participant observation|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | BROWN, B. A., SELLEN, A. J., AND O'HARA, K. P. (2000). A diary study of information capture in working life. In the Proceedings of CHI2000, The Hague, Holland, 438-445. This paper discusses how cameras were used in a diary study, followed by semi-structured interviews, to inform the design of handheld storage devices|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | FETTERMAN, D. M. (1998). Ethnography: Step by Step (2nd ed.). (Vol. 17). Thousand Oaks, CA: SAGE. This book provides an introduction to the theory and practice of ethnography and is an excellent guide for beginners. In addition, it has a useful section on computerized tools for ethnography|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | ROBSON, C. (1993). Real World Research. Oxford, UK: Blackwell. Chapter 8 discusses a range of observation methods. There is a section on doing participant observation and also on observing from the outside using coding schemes. |
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Interview 387 Sara Bly is a user-centered design consultant who specializes in the design and evaluation of distributed group technologies and practices. As well as having a Ph.D. in computer science, Sara pioneers the development of rich, qualitative observational techniques for analyzing group interactions and activities that inform technology design|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Prior to becoming a consultant, Sara managed the Collaborative Systems I Group at Xerox Palo Alto Research Center PAR^. While at PARC, Sara also contributed to ground-breaking work on shared drawing, awareness systems, and systems that used non-speech audio to represent information, and to the PARC Media Space project, in which video, audio, and computing technologies are uniquely combined to create a trans-geographical laboratory|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | I JP: Sara, tell us about your work and what especially interests you|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | SB: I'm interested in the ways that qualitative studies, particularly based on ethnographic methods, can inform design and development of technologies. My work spans the full gamut of user-centered design, from early conceptual design through iterative prototypes to final product deployment. I've worked on a wide range of projects from complex collaborative systems to straightforward desktop applications, and a variety of new technologies. My recent projects include a cell phone enhancement, a web-based video application, and the integration of text-based virtual environments with documents|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | I JP: Why do you think qualitative methods are so important for evaluating usability? I SB: I strongly believe that technical systems are closely bound with the social setting in which they are used. An important part of evaluation is to look "beyond the task." Too often we think of computer systems in isolation from the rest of the activities in which the people are involved. It's important to be able to see the interface in the context of ongoing practice. Usually the complexities and "messiness" of everyday life do not lend themselves to constraining the evaluation to only a few variables for testing|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | Qualitative methods are particularly helpful for evaluating complex systems that involve several tasks, embedded in other activities that include multiple users|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | JP: Can you give me an example? SB: Recently I was asked to design and evaluate an application for setting up personal preferences and purchasing services on the web. I was told it would be hard to test the interface "in the field" because it was difficult to get a 45-60 minute test period when the user wasn't being interrupted. When I pointed out that interruptions were normal in the environment in which the product would be used and therefore should occur in the evaluation too, the client looked aghast. There was a moment of silence as he realized, for the first time, that this hadn't been taken into account in the design and that the interface timed out after 60 seconds. It was unusable because the user would have to start all over again after each timeout|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | This should have been noticed at the requirements stage. So why wasn't it? It sounds like such an obvious thing, but the team was so busy with the intricacies of the design that they failed to realize what the real world would be like in which the system would be used. This might sound extreme, but you'd be surprised how often such things happen|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding|last: | JP: Collaborative applications seem particularly difficult to evaluate out of context|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | SB: Yes, you have to evaluate collaborative systems integrated within an organizational culture in which working relationships are taken into account. We know that work practice impacts system design and that the introduction of a new system impacts work practice. Consequently, the system and the practice have to evolve together. Understanding the task or the interface is impossible without understanding the environment in which the system will be used|
Feeding the findings back into de , 386 Chapter 12 Observing users At one end of the spectrum, laboratory studies offer a strongly controlled environment with little evaluator involvement; at the other, participant observation and ethnography require deeper involvement with users and understanding of context. Diaries and data-logging techniques provide a way of tracking user activity without intruding| | JP: Much of what you've described involves various forms of observation. How do you collect and analyze this data? SB: It's important that qualitative methods are not seen as just watching. Any method we use has at least three critical phases. First, there is the initial assess- |
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | Second is the data collection, analysis, and representation, and third, the communication of the findings with the development team. I try to start with a clear understanding of what I need to focus on in the field. However, I also try hard not to start with assumptions about what will be true. So, 1 start with a well-defined focus but not a hypothesis. In the field (or even in the lab), I primarily use interviews and observations with some self-reporting that often takes the form of diaries, etc. The data typically consists of my notes, the audio and/or videotapes from interviews and observation time, still pictures, and as many artifacts as I can appropriately gather (e.g., a work document covered with post-its, a page from an old calendar). I also prefer to work with at least one other colleague so that there is a minimum of two perspectives on the events and data|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | JP: It sounds like keeping track of all this data could be a problem. How do you organize and analyze it? SB: Obviously it's critical not to end with the data collection. Whenever possible, I do immediate debriefs after each session in the field with my colleague, noting individually and collectively whatever jumped out at us. Subsequently, I use the interview notes (from everyone involved) and the tapes and artifacts to construct as much of a picture of what happened as possible, without putting any judgment on it|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | For example, in a recent study six of us were involved in interviews and observations. We worked in pairs and tried to vary the pairings as often as possible|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | Thus. we had lots of conversations about the data and the situations before we ever came together. First, we wrote up the notes from each session (something I try to do as soon as possible). Next we got together and began looking across the data. That is, we created representations of important events (tables, maps, charts) together. Because we collectively had observed all the events and because we could draw upon our notes, we could feed the data from each observation into each finding. Oftentimes, we create collections, looking for common behaviors or events across multiple sessions. A collection will highlight activities that are crucial to the design of the system being evaluated|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation|last: | Whatever techniques we use, we always come back to the data as a reality and validity check|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | JP: Is it difficult to get development teams and managers to listen to you? How do you feed your findings back? SB: As often as possible, development teams are involved in the process along the way. They participate in setting the initial goals of the evaluation, occasionally in observation sessions, and as recipients of a final report. My goal with any project is to ensure that the final report is not a handoff but rather an interaction that offers a chance to work together on what we've found|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | JP: What are the main challenges you face? SB: It's always difficult to conduct a field study with as much time and participation as would be ideal|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | Most product cycles are short and the evaluation is just one of many necessary steps. So it's always a challenge to do an evaluation that is timely, useful, and yet based on solid methodology|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | A gnawing question for me is how to evaluate a system in the context of the customer's own environment and experience when the system is not fully developed and ready to deploy? If we can't bring a product to the field, can we bring the field to the product? For example, a client recently had a prototype interface for a system that was intended to provide a new approach to person-to-person calls. But using the interface made sense only in the context of actual real-world interactions. So, while we certainly could do a standard usability study of the interface, this approach wouldn't get at the questions of how well the product would fit into an actual work situation|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | JP: Finally, what about the future? Any comments? SB: I think the explosion of computing technology is both exciting and overwhelming. We now have so much new information constantly available and so many new devices to master that it's hard to keep up|
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | Evaluation is going to become ever more critical and complex and we should use all the techniques at our disposal as appropriate. I think an increasingly important aspect of new interfaces will be not only how well they support performance, satisfaction, and experience, but the way in which a user is able to grasp a conceptual model that is compatible with, but does not overwhelm their ongoing practice. |
Feeding the findings back into de , 388 Chapter 12 Observing users ment of the domain and/or technology and the determination of the questions to address in the evaluation| | Chapter 1 3 Asking users and experts 1 3.1 Introduction 13.2 Asking users: interviews 13.2.1 Developing questions and planning an interview 1 3.2.2 Unstructured interviews 13.2.3 Structured interviews 13.2.4 Semi-structured interviews 13.2.5 Group interviews 1 3.2.6 Other sources of interview-like feedback 13.2.7 Data analysis and interpretation 13.3 Asking users: questionnaires 13.3.1 Designing questionnaires 1 3.3.2 Question and response format 1 3.3.3 Administering questionnaires 13.3.4 Online questionnaires 13.3.5 Analyzing questionnaire data 13.4 Asking experts: inspections 1 3.4.1 Heuristic evaluation 13.4.2 Doing heuristic evaluation 13.4.3 Heuristic evaluation of websites 13.4.4 Heuristics for other devices 13.5 Asking experts: walkthroughs 13.5.1 Cognitive walkthroughs 13.5.2 Pluralistic walkthroughs 13.1 Introduction In the last chapter we looked at observing users. Another way of finding out what users do, what they want to do, like, or don't like is to ask them. Interviews and questionnaires are well-established techniques in social science research, market research, and human-computer interaction. They are used in "quick and dirty" evaluation, in usability testing, and in field studies to ask about facts, behavior, beliefs, and attitudes. Interviews and questionnaires can be structured (as in the Hutchworld case study in Chapter lo), or flexible and more like a discussion, as in field studies. Often interviews and observation go together in field studies, but in this chapter we focus specifically on interviewing techniques. |
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques| | 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques|
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques| | The main aims of this chapter are to: Discuss when it is appropriate to use different types of interviews and questionnaires|
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques|last: | Teach you the basics of questionnaire design|
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques|last: | Describe how to do interviews, heuristic evaluation, and walkthroughs|
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques|last: | Describe how to collect, analyze, and present data collected by the techniques mentioned above|
Feeding the findings back into de , 390 Chapter 13 Asking users and experts The first part of this chapter discusses interviews and questionnaires. As with observation, these techniques can be used in the requirements activity (as we described in Chapter 7), but in this chapter we focus on their use in evaluation. Another way of finding out how well a system is designed is by asking experts for their opinions. In the second part of the chapter, we look at the techniques of heuristic evaluation and cognitive walkthrough. These methods involve predicting how usable interfaces are (or are not). As in the previous chapter, we draw on the DECIDE framework from Chapter 11 to help structure studies that use these techniques| | Enable you to discuss the strengths and limitations of the techniques and select appropriate ones for your own use|
Asking users: interviews Interviews ,  | 13.2 Asking users: interviews Interviews can be thought of as a "conversation with a purpose" (Kahn and Cannell, 1957). How like an ordinary conversation the interview is depends on the questions to be answered and the type of interview method used. There are four main types of interviews: open-ended or unstructured, structured, semi-structured, and group interviews (Fontana and Frey, 1994). The first three types are named according to how much control the interviewer imposes on the conversation by following a predetermined set of questions. The fourth involves a small group guided by an interviewer who facilitates discussion of a specified set of topics|
Asking users: interviews Interviews ,  | The most appropriate approach to interviewing depends on the evaluation goals, the questions to be addressed, and the paradigm adopted. For example, if the goal is to gain first impressions about how users react to a new design idea, such as an interactive sign, then an informal, open-ended interview is often the best approach. But if the goal is to get feedback about a particular design feature, such as the layout of a new web browser, then a structured interview or questionnaire is often better. This is because the goals and questions are more specific in the latter case|
Developing questions and planning ,  | 13.2.1 Developing questions and planning an interview When developing interview questions, plan to keep them short, straightforward and avoid asking too many. Here are some guidelines (Robson, 1993): Avoid long questions because they are difficult to remember|
Developing questions and planning , last: | Avoid compound sentences by splitting them into two separate questions|
Developing questions and planning , last: | For example, instead of, "How do you like this cell phone compared with |
Asking users: interviews 391 I prev ,  | 13.2 Asking users: interviews 391 I previous ones that you have owned?" Say, "How do you like this cell phone? Have you owned other cell phones? If so, How did you like it?" This is easier for the interviewee and easier for the interviewer to record|
Asking users: interviews 391 I prev ,  | Avoid using jargon and language that the interviewee may not understand but would be too embarrassed to admit|
Asking users: interviews 391 I prev ,  | Avoid leading questions such as, "Why do you like this style of interaction?" If used on its own, this question assumes that the person did like it|
Asking users: interviews 391 I prev ,  | Be alert to unconscious biases. Be sensitive to your own biases and strive for neutrality in your questions|
Asking users: interviews 391 I prev ,  | Asking colleagues to review the questions and running a pilot study will help to identify problems in advance and gain practice in interviewing|
Asking users: interviews 391 I prev ,  | When planning an interview, think about interviewees who may be reticent to answer questions or who are in a hurry. They are doing you a favor, so try to make it as pleasant for them as possible and try to make the interviewee feel comfortable. Including the following steps will help you to achieve this (Robson, 1993): 1. An Introduction in which the interviewer introduces himself and explains why he is doing the interview, reassures interviewees about the ethical issues, and asks if they mind being recorded, if appropriate. This should be exactly the same for each interviewee|
Asking users: interviews 391 I prev , 2. A warmup session where easy, non-threatening questions come first. These may include questions about demographic information, such as "Where do you live? " 3. A main session in which the questions are presented in a logical sequence, with the more difficult ones at the end| | 2. A warmup session where easy, non-threatening questions come first. These may include questions about demographic information, such as "Where do you live? " 3. A main session in which the questions are presented in a logical sequence, with the more difficult ones at the end|
Asking users: interviews 391 I prev , 4. A cool-offperiod consisting of a few easy questions (to defuse tension if it has arisen)|last: | 4. A cool-offperiod consisting of a few easy questions (to defuse tension if it has arisen)|
Asking users: interviews 391 I prev , 5. A closing session in which the interviewer thanks the interviewee and switches off the recorder or puts her notebook away, signaling that the interview has ended| | 5. A closing session in which the interviewer thanks the interviewee and switches off the recorder or puts her notebook away, signaling that the interview has ended|
Asking users: interviews 391 I prev , 5. A closing session in which the interviewer thanks the interviewee and switches off the recorder or puts her notebook away, signaling that the interview has ended| | The golden rule is to be professional. Here is some further advice about conducting interviews (Robson, 1993): Dress in a similar way to the interviewees if possible. If in doubt, dress neatly and avoid standing out|
Asking users: interviews 391 I prev , 5. A closing session in which the interviewer thanks the interviewee and switches off the recorder or puts her notebook away, signaling that the interview has ended|last: | Prepare an informed consent form and ask the interviewee to sign it|